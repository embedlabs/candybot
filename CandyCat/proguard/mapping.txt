com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.Vector2:
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    float x -> x
    float y -> y
    com.badlogic.gdx.math.Vector2 cpy() -> cpy
    float len() -> len
    float len2() -> len2
    com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.math.Vector2 set(float,float) -> set
    com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> sub
    com.badlogic.gdx.math.Vector2 nor() -> nor
    com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> add
    com.badlogic.gdx.math.Vector2 add(float,float) -> add
    float dot(com.badlogic.gdx.math.Vector2) -> dot
    com.badlogic.gdx.math.Vector2 mul(float) -> mul
    float dst(com.badlogic.gdx.math.Vector2) -> dst
    float dst(float,float) -> dst
    float dst2(com.badlogic.gdx.math.Vector2) -> dst2
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector2 sub(float,float) -> sub
    com.badlogic.gdx.math.Vector2 tmp() -> tmp
    float cross(com.badlogic.gdx.math.Vector2) -> cross
    float lenManhattan() -> lenManhattan
com.badlogic.gdx.physics.box2d.Body -> com.badlogic.gdx.physics.box2d.Body:
    long addr -> addr
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.World world -> world
    java.util.ArrayList fixtures -> fixtures
    java.util.ArrayList joints -> joints
    java.lang.Object userData -> userData
    com.badlogic.gdx.physics.box2d.Transform transform -> transform
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 worldCenter -> worldCenter
    com.badlogic.gdx.math.Vector2 localCenter -> localCenter
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    com.badlogic.gdx.physics.box2d.MassData massData -> massData
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    com.badlogic.gdx.math.Vector2 worldVector -> worldVector
    com.badlogic.gdx.math.Vector2 localPoint2 -> localPoint2
    com.badlogic.gdx.math.Vector2 localVector -> localVector
    com.badlogic.gdx.math.Vector2 linVelWorld -> linVelWorld
    com.badlogic.gdx.math.Vector2 linVelLoc -> linVelLoc
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> createFixture
    long jniCreateFixture(long,long,float,float,float,boolean,short,short,short) -> jniCreateFixture
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> createFixture
    long jniCreateFixture(long,long,float) -> jniCreateFixture
    void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> destroyFixture
    void jniDestroyFixture(long,long) -> jniDestroyFixture
    void setTransform(com.badlogic.gdx.math.Vector2,float) -> setTransform
    void setTransform(float,float,float) -> setTransform
    void jniSetTransform(long,float,float,float) -> jniSetTransform
    com.badlogic.gdx.physics.box2d.Transform getTransform() -> getTransform
    void jniGetTransform(long,float[]) -> jniGetTransform
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    float getAngle() -> getAngle
    float jniGetAngle(long) -> jniGetAngle
    com.badlogic.gdx.math.Vector2 getWorldCenter() -> getWorldCenter
    void jniGetWorldCenter(long,float[]) -> jniGetWorldCenter
    com.badlogic.gdx.math.Vector2 getLocalCenter() -> getLocalCenter
    void jniGetLocalCenter(long,float[]) -> jniGetLocalCenter
    void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> setLinearVelocity
    void setLinearVelocity(float,float) -> setLinearVelocity
    void jniSetLinearVelocity(long,float,float) -> jniSetLinearVelocity
    com.badlogic.gdx.math.Vector2 getLinearVelocity() -> getLinearVelocity
    void jniGetLinearVelocity(long,float[]) -> jniGetLinearVelocity
    void setAngularVelocity(float) -> setAngularVelocity
    void jniSetAngularVelocity(long,float) -> jniSetAngularVelocity
    float getAngularVelocity() -> getAngularVelocity
    float jniGetAngularVelocity(long) -> jniGetAngularVelocity
    void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> applyForce
    void applyForce(float,float,float,float) -> applyForce
    void jniApplyForce(long,float,float,float,float) -> jniApplyForce
    void applyTorque(float) -> applyTorque
    void jniApplyTorque(long,float) -> jniApplyTorque
    void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> applyLinearImpulse
    void applyLinearImpulse(float,float,float,float) -> applyLinearImpulse
    void jniApplyLinearImpulse(long,float,float,float,float) -> jniApplyLinearImpulse
    void applyAngularImpulse(float) -> applyAngularImpulse
    void jniApplyAngularImpulse(long,float) -> jniApplyAngularImpulse
    float getMass() -> getMass
    float jniGetMass(long) -> jniGetMass
    float getInertia() -> getInertia
    float jniGetInertia(long) -> jniGetInertia
    com.badlogic.gdx.physics.box2d.MassData getMassData() -> getMassData
    void jniGetMassData(long,float[]) -> jniGetMassData
    void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> setMassData
    void jniSetMassData(long,float,float,float,float) -> jniSetMassData
    void resetMassData() -> resetMassData
    void jniResetMassData(long) -> jniResetMassData
    com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> getWorldPoint
    void jniGetWorldPoint(long,float,float,float[]) -> jniGetWorldPoint
    com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> getWorldVector
    void jniGetWorldVector(long,float,float,float[]) -> jniGetWorldVector
    com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> getLocalPoint
    void jniGetLocalPoint(long,float,float,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> getLocalVector
    void jniGetLocalVector(long,float,float,float[]) -> jniGetLocalVector
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromWorldPoint
    void jniGetLinearVelocityFromWorldPoint(long,float,float,float[]) -> jniGetLinearVelocityFromWorldPoint
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromLocalPoint
    void jniGetLinearVelocityFromLocalPoint(long,float,float,float[]) -> jniGetLinearVelocityFromLocalPoint
    float getLinearDamping() -> getLinearDamping
    float jniGetLinearDamping(long) -> jniGetLinearDamping
    void setLinearDamping(float) -> setLinearDamping
    void jniSetLinearDamping(long,float) -> jniSetLinearDamping
    float getAngularDamping() -> getAngularDamping
    float jniGetAngularDamping(long) -> jniGetAngularDamping
    void setAngularDamping(float) -> setAngularDamping
    void jniSetAngularDamping(long,float) -> jniSetAngularDamping
    void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> setType
    void jniSetType(long,int) -> jniSetType
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> getType
    int jniGetType(long) -> jniGetType
    void setBullet(boolean) -> setBullet
    void jniSetBullet(long,boolean) -> jniSetBullet
    boolean isBullet() -> isBullet
    boolean jniIsBullet(long) -> jniIsBullet
    void setSleepingAllowed(boolean) -> setSleepingAllowed
    void jniSetSleepingAllowed(long,boolean) -> jniSetSleepingAllowed
    boolean isSleepingAllowed() -> isSleepingAllowed
    boolean jniIsSleepingAllowed(long) -> jniIsSleepingAllowed
    void setAwake(boolean) -> setAwake
    void jniSetAwake(long,boolean) -> jniSetAwake
    boolean isAwake() -> isAwake
    boolean jniIsAwake(long) -> jniIsAwake
    void setActive(boolean) -> setActive
    void jniSetActive(long,boolean) -> jniSetActive
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
    void setFixedRotation(boolean) -> setFixedRotation
    void jniSetFixedRotation(long,boolean) -> jniSetFixedRotation
    boolean isFixedRotation() -> isFixedRotation
    boolean jniIsFixedRotation(long) -> jniIsFixedRotation
    java.util.ArrayList getFixtureList() -> getFixtureList
    java.util.ArrayList getJointList() -> getJointList
    com.badlogic.gdx.physics.box2d.World getWorld() -> getWorld
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
com.badlogic.gdx.physics.box2d.BodyDef -> com.badlogic.gdx.physics.box2d.BodyDef:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType type -> type
    com.badlogic.gdx.math.Vector2 position -> position
    float angle -> angle
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    float angularVelocity -> angularVelocity
    float linearDamping -> linearDamping
    float angularDamping -> angularDamping
    boolean allowSleep -> allowSleep
    boolean awake -> awake
    boolean fixedRotation -> fixedRotation
    boolean bullet -> bullet
    boolean active -> active
    float inertiaScale -> inertiaScale
com.badlogic.gdx.physics.box2d.BodyDef$BodyType -> com.badlogic.gdx.physics.box2d.BodyDef$BodyType:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody -> StaticBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody -> KinematicBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody -> DynamicBody
    int value -> value
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] ENUM$VALUES -> ENUM$VALUES
    int getValue() -> getValue
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values() -> values
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.CircleShape -> com.badlogic.gdx.physics.box2d.CircleShape:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 position -> position
    long newCircleShape() -> newCircleShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    void jniSetPosition(long,float,float) -> jniSetPosition
com.badlogic.gdx.physics.box2d.Contact -> com.badlogic.gdx.physics.box2d.Contact:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.physics.box2d.WorldManifold worldManifold -> worldManifold
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold() -> getWorldManifold
    int jniGetWorldManifold(long,float[]) -> jniGetWorldManifold
    boolean isTouching() -> isTouching
    boolean jniIsTouching(long) -> jniIsTouching
    void setEnabled(boolean) -> setEnabled
    void jniSetEnabled(long,boolean) -> jniSetEnabled
    boolean isEnabled() -> isEnabled
    boolean jniIsEnabled(long) -> jniIsEnabled
    com.badlogic.gdx.physics.box2d.Fixture getFixtureA() -> getFixtureA
    long jniGetFixtureA(long) -> jniGetFixtureA
    com.badlogic.gdx.physics.box2d.Fixture getFixtureB() -> getFixtureB
    long jniGetFixtureB(long) -> jniGetFixtureB
com.badlogic.gdx.physics.box2d.ContactFilter -> com.badlogic.gdx.physics.box2d.ContactFilter:
    boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture) -> shouldCollide
com.badlogic.gdx.physics.box2d.ContactImpulse -> com.badlogic.gdx.physics.box2d.ContactImpulse:
    com.badlogic.gdx.physics.box2d.World world -> world
    long addr -> addr
    float[] tmp -> tmp
    float[] normalImpulses -> normalImpulses
    float[] tangentImpulses -> tangentImpulses
    float[] getNormalImpulses() -> getNormalImpulses
    void jniGetNormalImpulses(long,float[]) -> jniGetNormalImpulses
    float[] getTangentImpulses() -> getTangentImpulses
    void jniGetTangentImpulses(long,float[]) -> jniGetTangentImpulses
com.badlogic.gdx.physics.box2d.ContactListener -> com.badlogic.gdx.physics.box2d.ContactListener:
    void beginContact(com.badlogic.gdx.physics.box2d.Contact) -> beginContact
    void endContact(com.badlogic.gdx.physics.box2d.Contact) -> endContact
    void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold) -> preSolve
    void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse) -> postSolve
com.badlogic.gdx.physics.box2d.DestructionListener -> com.badlogic.gdx.physics.box2d.DestructionListener:
com.badlogic.gdx.physics.box2d.Filter -> com.badlogic.gdx.physics.box2d.Filter:
    short categoryBits -> categoryBits
    short maskBits -> maskBits
    short groupIndex -> groupIndex
com.badlogic.gdx.physics.box2d.Fixture -> com.badlogic.gdx.physics.box2d.Fixture:
    com.badlogic.gdx.physics.box2d.Body body -> body
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    java.lang.Object userData -> userData
    short[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Shape getShape() -> getShape
    long jniGetShape(long) -> jniGetShape
    void setSensor(boolean) -> setSensor
    void jniSetSensor(long,boolean) -> jniSetSensor
    boolean isSensor() -> isSensor
    boolean jniIsSensor(long) -> jniIsSensor
    void setFilterData(com.badlogic.gdx.physics.box2d.Filter) -> setFilterData
    void jniSetFilterData(long,short,short,short) -> jniSetFilterData
    com.badlogic.gdx.physics.box2d.Filter getFilterData() -> getFilterData
    void jniGetFilterData(long,short[]) -> jniGetFilterData
    com.badlogic.gdx.physics.box2d.Body getBody() -> getBody
    boolean testPoint(com.badlogic.gdx.math.Vector2) -> testPoint
    boolean testPoint(float,float) -> testPoint
    boolean jniTestPoint(long,float,float) -> jniTestPoint
    void setDensity(float) -> setDensity
    void jniSetDensity(long,float) -> jniSetDensity
    float getDensity() -> getDensity
    float jniGetDensity(long) -> jniGetDensity
    float getFriction() -> getFriction
    float jniGetFriction(long) -> jniGetFriction
    void setFriction(float) -> setFriction
    void jniSetFriction(long,float) -> jniSetFriction
    float getRestitution() -> getRestitution
    float jniGetRestitution(long) -> jniGetRestitution
    void setRestitution(float) -> setRestitution
    void jniSetRestitution(long,float) -> jniSetRestitution
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
com.badlogic.gdx.physics.box2d.FixtureDef -> com.badlogic.gdx.physics.box2d.FixtureDef:
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    float friction -> friction
    float restitution -> restitution
    float density -> density
    boolean isSensor -> isSensor
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
com.badlogic.gdx.physics.box2d.Joint -> com.badlogic.gdx.physics.box2d.Joint:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA -> jointEdgeA
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB -> jointEdgeB
    com.badlogic.gdx.math.Vector2 anchorA -> anchorA
    com.badlogic.gdx.math.Vector2 anchorB -> anchorB
    com.badlogic.gdx.math.Vector2 reactionForce -> reactionForce
    com.badlogic.gdx.physics.box2d.JointDef$JointType getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Body getBodyA() -> getBodyA
    long jniGetBodyA(long) -> jniGetBodyA
    com.badlogic.gdx.physics.box2d.Body getBodyB() -> getBodyB
    long jniGetBodyB(long) -> jniGetBodyB
    com.badlogic.gdx.math.Vector2 getAnchorA() -> getAnchorA
    void jniGetAnchorA(long,float[]) -> jniGetAnchorA
    com.badlogic.gdx.math.Vector2 getAnchorB() -> getAnchorB
    void jniGetAnchorB(long,float[]) -> jniGetAnchorB
    com.badlogic.gdx.math.Vector2 getReactionForce(float) -> getReactionForce
    void jniGetReactionForce(long,float,float[]) -> jniGetReactionForce
    float getReactionTorque(float) -> getReactionTorque
    float jniGetReactionTorque(long,float) -> jniGetReactionTorque
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
com.badlogic.gdx.physics.box2d.JointDef -> com.badlogic.gdx.physics.box2d.JointDef:
    com.badlogic.gdx.physics.box2d.JointDef$JointType type -> type
    com.badlogic.gdx.physics.box2d.Body bodyA -> bodyA
    com.badlogic.gdx.physics.box2d.Body bodyB -> bodyB
    boolean collideConnected -> collideConnected
com.badlogic.gdx.physics.box2d.JointDef$JointType -> com.badlogic.gdx.physics.box2d.JointDef$JointType:
    com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown -> Unknown
    com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint -> RevoluteJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint -> PrismaticJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint -> DistanceJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint -> PulleyJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint -> MouseJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint -> GearJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType LineJoint -> LineJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint -> WeldJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint -> FrictionJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes -> valueTypes
    int value -> value
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] ENUM$VALUES -> ENUM$VALUES
    int getValue() -> getValue
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] values() -> values
    com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.JointEdge -> com.badlogic.gdx.physics.box2d.JointEdge:
    com.badlogic.gdx.physics.box2d.Body other -> other
    com.badlogic.gdx.physics.box2d.Joint joint -> joint
com.badlogic.gdx.physics.box2d.Manifold -> com.badlogic.gdx.physics.box2d.Manifold:
    com.badlogic.gdx.physics.box2d.World world -> world
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points -> points
    com.badlogic.gdx.math.Vector2 localNormal -> localNormal
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    int[] tmpInt -> tmpInt
    float[] tmpFloat -> tmpFloat
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType() -> getType
    int jniGetType(long) -> jniGetType
    int getPointCount() -> getPointCount
    int jniGetPointCount(long) -> jniGetPointCount
    com.badlogic.gdx.math.Vector2 getLocalNormal() -> getLocalNormal
    void jniGetLocalNormal(long,float[]) -> jniGetLocalNormal
    com.badlogic.gdx.math.Vector2 getLocalPoint() -> getLocalPoint
    void jniGetLocalPoint(long,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints() -> getPoints
    int jniGetPoint(long,float[],int) -> jniGetPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint:
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    float normalImpulse -> normalImpulse
    float tangentImpulse -> tangentImpulse
    int contactID -> contactID
    com.badlogic.gdx.physics.box2d.Manifold this$0 -> this$0
    java.lang.String toString() -> toString
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldType:
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType Circle -> Circle
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceA -> FaceA
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceB -> FaceB
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] values() -> values
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.MassData -> com.badlogic.gdx.physics.box2d.MassData:
    float mass -> mass
    com.badlogic.gdx.math.Vector2 center -> center
    float I -> I
com.badlogic.gdx.physics.box2d.PolygonShape -> com.badlogic.gdx.physics.box2d.PolygonShape:
    float[] verts -> verts
    long newPolygonShape() -> newPolygonShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    void set(com.badlogic.gdx.math.Vector2[]) -> set
    void jniSet(long,float[]) -> jniSet
    void setAsBox(float,float) -> setAsBox
    void jniSetAsBox(long,float,float) -> jniSetAsBox
    void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float) -> setAsBox
    void jniSetAsBox(long,float,float,float,float,float) -> jniSetAsBox
    void setAsEdge(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> setAsEdge
    void jniSetAsEdge(long,float,float,float,float) -> jniSetAsEdge
    int getVertexCount() -> getVertexCount
    int jniGetVertexCount(long) -> jniGetVertexCount
    void getVertex(int,com.badlogic.gdx.math.Vector2) -> getVertex
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.QueryCallback -> com.badlogic.gdx.physics.box2d.QueryCallback:
    boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture) -> reportFixture
com.badlogic.gdx.physics.box2d.RayCastCallback -> com.badlogic.gdx.physics.box2d.RayCastCallback:
    float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.Shape -> com.badlogic.gdx.physics.box2d.Shape:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    float getRadius() -> getRadius
    float jniGetRadius(long) -> jniGetRadius
    void setRadius(float) -> setRadius
    void jniSetRadius(long,float) -> jniSetRadius
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    int jniGetType(long) -> jniGetType
com.badlogic.gdx.physics.box2d.Shape$Type -> com.badlogic.gdx.physics.box2d.Shape$Type:
    com.badlogic.gdx.physics.box2d.Shape$Type Circle -> Circle
    com.badlogic.gdx.physics.box2d.Shape$Type Polygon -> Polygon
    com.badlogic.gdx.physics.box2d.Shape$Type[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.physics.box2d.Shape$Type[] values() -> values
    com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Transform -> com.badlogic.gdx.physics.box2d.Transform:
    int POS_X -> POS_X
    int POS_Y -> POS_Y
    int COL1_X -> COL1_X
    int COL1_Y -> COL1_Y
    int COL2_X -> COL2_X
    int COL2_Y -> COL2_Y
    float[] vals -> vals
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> mul
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void setRotation(float) -> setRotation
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
com.badlogic.gdx.physics.box2d.World -> com.badlogic.gdx.physics.box2d.World:
    long addr -> addr
    com.badlogic.gdx.utils.LongMap bodies -> bodies
    com.badlogic.gdx.utils.LongMap fixtures -> fixtures
    com.badlogic.gdx.utils.LongMap joints -> joints
    com.badlogic.gdx.physics.box2d.ContactFilter contactFilter -> contactFilter
    com.badlogic.gdx.physics.box2d.ContactListener contactListener -> contactListener
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback -> rayCastCallback
    com.badlogic.gdx.math.Vector2 rayPoint -> rayPoint
    com.badlogic.gdx.math.Vector2 rayNormal -> rayNormal
    float[] tmpGravity -> tmpGravity
    com.badlogic.gdx.math.Vector2 gravity -> gravity
    com.badlogic.gdx.physics.box2d.QueryCallback queryCallback -> queryCallback
    long[] contactAddrs -> contactAddrs
    java.util.ArrayList contacts -> contacts
    java.util.ArrayList freeContacts -> freeContacts
    com.badlogic.gdx.physics.box2d.Contact contact -> contact
    com.badlogic.gdx.physics.box2d.Manifold manifold -> manifold
    com.badlogic.gdx.physics.box2d.ContactImpulse impulse -> impulse
    void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> rayCast
    void jniRayCast(long,float,float,float,float) -> jniRayCast
    float reportRayFixture(long,float,float,float,float,float) -> reportRayFixture
    long newWorld(float,float,boolean) -> newWorld
    void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener) -> setDestructionListener
    void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter) -> setContactFilter
    void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> setContactListener
    com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> createBody
    long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float) -> jniCreateBody
    void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> destroyBody
    void jniDestroyBody(long,long) -> jniDestroyBody
    com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createJoint
    long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createProperJoint
    long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float) -> jniCreateDistanceJoint
    long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float) -> jniCreateFrictionJoint
    long jniCreateGearJoint(long,long,long,boolean,long,long,float) -> jniCreateGearJoint
    long jniCreateLineJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateLineJoint
    long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateMouseJoint
    long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreatePrismaticJoint
    long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float,float,float) -> jniCreatePulleyJoint
    long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateRevoluteJoint
    long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateWeldJoint
    void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> destroyJoint
    void jniDestroyJoint(long,long) -> jniDestroyJoint
    void step(float,int,int) -> step
    void jniStep(long,float,int,int) -> jniStep
    void clearForces() -> clearForces
    void jniClearForces(long) -> jniClearForces
    void setWarmStarting(boolean) -> setWarmStarting
    void jniSetWarmStarting(long,boolean) -> jniSetWarmStarting
    void setContinuousPhysics(boolean) -> setContinuousPhysics
    void jniSetContiousPhysics(long,boolean) -> jniSetContiousPhysics
    int getProxyCount() -> getProxyCount
    int jniGetProxyCount(long) -> jniGetProxyCount
    int getBodyCount() -> getBodyCount
    int jniGetBodyCount(long) -> jniGetBodyCount
    int getJointCount() -> getJointCount
    int jniGetJointcount(long) -> jniGetJointcount
    int getContactCount() -> getContactCount
    int jniGetContactCount(long) -> jniGetContactCount
    void setGravity(com.badlogic.gdx.math.Vector2) -> setGravity
    void jniSetGravity(long,float,float) -> jniSetGravity
    com.badlogic.gdx.math.Vector2 getGravity() -> getGravity
    void jniGetGravity(long,float[]) -> jniGetGravity
    boolean isLocked() -> isLocked
    boolean jniIsLocked(long) -> jniIsLocked
    void setAutoClearForces(boolean) -> setAutoClearForces
    void jniSetAutoClearForces(long,boolean) -> jniSetAutoClearForces
    boolean getAutoClearForces() -> getAutoClearForces
    boolean jniGetAutoClearForces(long) -> jniGetAutoClearForces
    void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float) -> QueryAABB
    void jniQueryAABB(long,float,float,float,float) -> jniQueryAABB
    java.util.List getContactList() -> getContactList
    java.util.Iterator getBodies() -> getBodies
    java.util.Iterator getJoints() -> getJoints
    void jniGetContactList(long,long[]) -> jniGetContactList
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    boolean contactFilter(long,long) -> contactFilter
    void beginContact(long) -> beginContact
    void endContact(long) -> endContact
    void preSolve(long,long) -> preSolve
    void postSolve(long,long) -> postSolve
    boolean reportFixture(long) -> reportFixture
com.badlogic.gdx.physics.box2d.WorldManifold -> com.badlogic.gdx.physics.box2d.WorldManifold:
    com.badlogic.gdx.math.Vector2 normal -> normal
    com.badlogic.gdx.math.Vector2[] points -> points
    int numContactPoints -> numContactPoints
    com.badlogic.gdx.math.Vector2 getNormal() -> getNormal
    com.badlogic.gdx.math.Vector2[] getPoints() -> getPoints
    int getNumberOfContactPoints() -> getNumberOfContactPoints
com.badlogic.gdx.physics.box2d.joints.DistanceJoint -> com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    void setLength(float) -> setLength
    void jniSetLength(long,float) -> jniSetLength
    float getLength() -> getLength
    float jniGetLength(long) -> jniGetLength
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef -> com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float length -> length
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.FrictionJoint -> com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setMaxTorque(float) -> setMaxTorque
    void jniSetMaxTorque(long,float) -> jniSetMaxTorque
    float getMaxTorque() -> getMaxTorque
    float jniGetMaxTorque(long) -> jniGetMaxTorque
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef -> com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float maxForce -> maxForce
    float maxTorque -> maxTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.GearJoint -> com.badlogic.gdx.physics.box2d.joints.GearJoint:
    void setRatio(float) -> setRatio
    void jniSetRatio(long,float) -> jniSetRatio
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.GearJointDef -> com.badlogic.gdx.physics.box2d.joints.GearJointDef:
    com.badlogic.gdx.physics.box2d.Joint joint1 -> joint1
    com.badlogic.gdx.physics.box2d.Joint joint2 -> joint2
    float ratio -> ratio
com.badlogic.gdx.physics.box2d.joints.LineJoint -> com.badlogic.gdx.physics.box2d.joints.LineJoint:
    float getJointTranslation() -> getJointTranslation
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorForce(float) -> setMaxMotorForce
    void jniSetMaxMotorForce(long,float) -> jniSetMaxMotorForce
    float getMaxMotorForce() -> getMaxMotorForce
    float jniGetMaxMotorForce(long) -> jniGetMaxMotorForce
    float getMotorForce() -> getMotorForce
    float jniGetMotorForce(long) -> jniGetMotorForce
com.badlogic.gdx.physics.box2d.joints.LineJointDef -> com.badlogic.gdx.physics.box2d.joints.LineJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    boolean enableLimit -> enableLimit
    float lowerTranslation -> lowerTranslation
    float upperTranslation -> upperTranslation
    boolean enableMotor -> enableMotor
    float maxMotorForce -> maxMotorForce
    float motorSpeed -> motorSpeed
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.MouseJoint -> com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 target -> target
    void setTarget(com.badlogic.gdx.math.Vector2) -> setTarget
    void jniSetTarget(long,float,float) -> jniSetTarget
    com.badlogic.gdx.math.Vector2 getTarget() -> getTarget
    void jniGetTarget(long,float[]) -> jniGetTarget
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef -> com.badlogic.gdx.physics.box2d.joints.MouseJointDef:
    com.badlogic.gdx.math.Vector2 target -> target
    float maxForce -> maxForce
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint -> com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    float getJointTranslation() -> getJointTranslation
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorForce(float) -> setMaxMotorForce
    void jniSetMaxMotorForce(long,float) -> jniSetMaxMotorForce
    float getMotorForce() -> getMotorForce
    float jniGetMotorForce(long) -> jniGetMotorForce
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef -> com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxis1 -> localAxis1
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerTranslation -> lowerTranslation
    float upperTranslation -> upperTranslation
    boolean enableMotor -> enableMotor
    float maxMotorForce -> maxMotorForce
    float motorSpeed -> motorSpeed
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.PulleyJoint -> com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 getGroundAnchorA() -> getGroundAnchorA
    void jniGetGroundAnchorA(long,float[]) -> jniGetGroundAnchorA
    com.badlogic.gdx.math.Vector2 getGroundAnchorB() -> getGroundAnchorB
    void jniGetGroundAnchorB(long,float[]) -> jniGetGroundAnchorB
    float getLength1() -> getLength1
    float jniGetLength1(long) -> jniGetLength1
    float getLength2() -> getLength2
    float jniGetLength2(long) -> jniGetLength2
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef -> com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    float minPulleyLength -> minPulleyLength
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float lengthA -> lengthA
    float maxLengthA -> maxLengthA
    float lengthB -> lengthB
    float maxLengthB -> maxLengthB
    float ratio -> ratio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> initialize
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint -> com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    float getJointAngle() -> getJointAngle
    float jniGetJointAngle(long) -> jniGetJointAngle
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorTorque(float) -> setMaxMotorTorque
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    float getMotorTorque() -> getMotorTorque
    float jniGetMotorTorque(long) -> jniGetMotorTorque
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef -> com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerAngle -> lowerAngle
    float upperAngle -> upperAngle
    boolean enableMotor -> enableMotor
    float motorSpeed -> motorSpeed
    float maxMotorTorque -> maxMotorTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.WeldJoint -> com.badlogic.gdx.physics.box2d.joints.WeldJoint:
com.badlogic.gdx.physics.box2d.joints.WeldJointDef -> com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.LongMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    long[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.LongMap$Entries entries -> entries
    com.badlogic.gdx.utils.LongMap$Values values -> values
    com.badlogic.gdx.utils.LongMap$Keys keys -> keys
    java.lang.Object put(long,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.LongMap) -> putAll
    void putResize(long,java.lang.Object) -> putResize
    void push(long,java.lang.Object,int,long,int,long,int,long) -> push
    void putStash(long,java.lang.Object) -> putStash
    java.lang.Object get(long) -> get
    java.lang.Object getStash(long) -> getStash
    java.lang.Object remove(long) -> remove
    java.lang.Object removeStash(long) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(long) -> containsKey
    boolean containsKeyStash(long) -> containsKeyStash
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.LongMap$Entries entries() -> entries
    com.badlogic.gdx.utils.LongMap$Values values() -> values
    com.badlogic.gdx.utils.LongMap$Keys keys() -> keys
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.LongMap$Entries:
    com.badlogic.gdx.utils.LongMap$Entry entry -> entry
    com.badlogic.gdx.utils.LongMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.LongMap$Entry:
    long key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$Keys -> com.badlogic.gdx.utils.LongMap$Keys:
    long next() -> next
    void reset() -> reset
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.a:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.LongMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.LongMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    void reset() -> reset
    void remove() -> remove
com.embedstudios.candycat.CandyGallery -> com.embedstudios.candycat.CandyGallery:
    void onCreate(android.os.Bundle) -> onCreate
com.embedstudios.candycat.CandyLevel -> com.embedstudios.candycat.CandyLevel:
    int PHONE_WIDTH -> a
    int PHONE_HEIGHT -> b
    int level -> c
    int world -> d
    java.util.ArrayList objectList -> e
    java.util.ArrayList tutorialList -> f
    org.anddev.andengine.entity.scene.Scene mScene -> g
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap mTMXTiledMap -> h
    org.anddev.andengine.engine.camera.BoundCamera mBoundChaseCamera -> i
    org.anddev.andengine.opengl.texture.Texture mObjectTexture -> j
    org.anddev.andengine.opengl.texture.region.TextureRegion boxTR -> k
    org.anddev.andengine.opengl.texture.region.TextureRegion movableWallTR -> l
    org.anddev.andengine.opengl.texture.region.TextureRegion inertiaWallTR -> m
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion candyTTR -> n
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion catTTR -> o
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion bombTTR -> p
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion enemyTTR -> q
    org.anddev.andengine.engine.Engine onLoadEngine() -> onLoadEngine
    void onLoadResources() -> onLoadResources
    org.anddev.andengine.entity.scene.Scene onLoadScene() -> onLoadScene
    void onLoadComplete() -> onLoadComplete
    void onTMXTileWithPropertiesCreated(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap,org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer,org.anddev.andengine.entity.layer.tiled.tmx.TMXTile,org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties) -> onTMXTileWithPropertiesCreated
com.embedstudios.candycat.DitheredSprite -> com.embedstudios.candycat.a:
    void onInitDraw(javax.microedition.khronos.opengles.GL10) -> onInitDraw
com.embedstudios.candycat.MainMenu -> com.embedstudios.candycat.MainMenu:
    android.widget.ViewFlipper enclosing_vf -> a
    android.widget.TextView mainmenu_tv -> b
    android.widget.Button button_play -> c
    android.widget.ImageView iv_achievements -> d
    android.widget.ImageView iv_facebook -> e
    android.widget.ImageView iv_twitter -> f
    android.graphics.Typeface komika -> g
    int WIDTH -> h
    int HEIGHT -> i
    org.anddev.andengine.opengl.texture.Texture mTexture -> j
    org.anddev.andengine.opengl.texture.region.TextureRegion mCandyFaceTextureRegion -> k
    org.anddev.andengine.opengl.texture.region.TextureRegion mWallFaceTextureRegion -> l
    org.anddev.andengine.opengl.texture.region.TextureRegion mBoxFaceTextureRegion -> m
    org.anddev.andengine.opengl.texture.region.TextureRegion mInertiaFaceTextureRegion -> n
    org.anddev.andengine.opengl.texture.region.TextureRegion mIceFaceTextureRegion -> o
    org.anddev.andengine.opengl.texture.Texture mAutoParallaxBackgroundTexture -> p
    org.anddev.andengine.opengl.texture.region.TextureRegion mCloudsTextureRegion -> q
    org.anddev.andengine.opengl.texture.region.TextureRegion mSeaTextureRegion -> r
    org.anddev.andengine.opengl.texture.region.TextureRegion mHillsTextureRegion -> s
    org.anddev.andengine.entity.scene.Scene mScene -> t
    org.anddev.andengine.extension.physics.box2d.PhysicsWorld mPhysicsWorld -> u
    com.embedstudios.candycat.MainMenu$SplashTask splashTask -> v
    boolean running -> w
    void onClick(android.view.View) -> onClick
    org.anddev.andengine.engine.Engine onLoadEngine() -> onLoadEngine
    void onLoadResources() -> onLoadResources
    org.anddev.andengine.entity.scene.Scene onLoadScene() -> onLoadScene
    void onLoadComplete() -> onLoadComplete
    void onAccelerometerChanged(org.anddev.andengine.sensor.accelerometer.AccelerometerData) -> onAccelerometerChanged
    void onResumeGame() -> onResumeGame
    void onPauseGame() -> onPauseGame
    int getLayoutID() -> getLayoutID
    int getRenderSurfaceViewID() -> getRenderSurfaceViewID
    void onDestroy() -> onDestroy
    boolean access$0(com.embedstudios.candycat.MainMenu) -> a
    void access$1(com.embedstudios.candycat.MainMenu,int) -> a
com.embedstudios.candycat.MainMenu$SplashTask -> com.embedstudios.candycat.b:
    com.embedstudios.candycat.MainMenu this$0 -> a
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.facebook.android.a -> com.facebook.android.a:
    long serialVersionUID -> serialVersionUID
    int a -> a
    java.lang.String b -> b
com.facebook.android.b -> com.facebook.android.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    android.app.Activity h -> h
    java.lang.String[] i -> i
    int j -> j
    com.facebook.android.b$a k -> k
    void a(android.app.Activity,java.lang.String[],int,com.facebook.android.b$a) -> a
    boolean a(android.app.Activity,java.lang.String,java.lang.String[],int) -> a
    boolean a(android.app.Activity,android.content.Intent) -> a
    void a(android.app.Activity,java.lang.String,java.lang.String[]) -> a
    void a(android.content.Context,java.lang.String,android.os.Bundle,com.facebook.android.b$a) -> a
    boolean a() -> a
    java.lang.String b() -> b
    long c() -> c
    void a(java.lang.String) -> a
    void a(long) -> a
    void b(java.lang.String) -> b
    com.facebook.android.b$a a(com.facebook.android.b) -> a
com.facebook.android.b$1 -> com.facebook.android.h:
    com.facebook.android.b a -> a
    void a(android.os.Bundle) -> a
    void a(com.facebook.android.a) -> a
    void a(com.facebook.android.c) -> a
    void a() -> a
com.facebook.android.b$2 -> com.facebook.android.g:
    com.facebook.android.b$a a -> a
    com.facebook.android.b b -> b
    void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.android.b$a -> com.facebook.android.b$a:
    void a(android.os.Bundle) -> a
    void a(com.facebook.android.c) -> a
    void a(com.facebook.android.a) -> a
    void a() -> a
com.facebook.android.c -> com.facebook.android.c:
    long serialVersionUID -> serialVersionUID
    int a -> a
com.facebook.android.d -> com.facebook.android.d:
    float[] a -> a
    float[] b -> b
    android.widget.FrameLayout$LayoutParams c -> c
    java.lang.String d -> d
    com.facebook.android.b$a e -> e
    android.app.ProgressDialog f -> f
    android.webkit.WebView g -> g
    android.widget.LinearLayout h -> h
    android.widget.TextView i -> i
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    android.graphics.drawable.Drawable b() -> b
    void c() -> c
    com.facebook.android.b$a a(com.facebook.android.d) -> a
    android.app.ProgressDialog b(com.facebook.android.d) -> b
    android.webkit.WebView c(com.facebook.android.d) -> c
    android.widget.TextView d(com.facebook.android.d) -> d
com.facebook.android.d$a -> com.facebook.android.f:
    com.facebook.android.d a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.facebook.android.e -> com.facebook.android.e:
    java.lang.String a(android.os.Bundle) -> a
    android.os.Bundle a(java.lang.String) -> a
    android.os.Bundle b(java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
com.scoreloop.client.android.core.PublishedFor__1_0_0 -> com.scoreloop.client.android.core.PublishedFor__1_0_0:
com.scoreloop.client.android.core.PublishedFor__1_1_0 -> com.scoreloop.client.android.core.PublishedFor__1_1_0:
com.scoreloop.client.android.core.PublishedFor__2_0_0 -> com.scoreloop.client.android.core.PublishedFor__2_0_0:
com.scoreloop.client.android.core.PublishedFor__2_1_0 -> com.scoreloop.client.android.core.PublishedFor__2_1_0:
com.scoreloop.client.android.core.PublishedFor__2_2_0 -> com.scoreloop.client.android.core.PublishedFor__2_2_0:
com.scoreloop.client.android.core.PublishedFor__2_3_0 -> com.scoreloop.client.android.core.PublishedFor__2_3_0:
com.scoreloop.client.android.core.UsedByScoreloopApp -> com.scoreloop.client.android.core.UsedByScoreloopApp:
com.scoreloop.client.android.core.addon.RSSFeed -> com.scoreloop.client.android.core.addon.RSSFeed:
    java.util.Set a -> a
    com.scoreloop.client.android.core.addon.RSSFeed$Policy STANDARD_POLICY -> STANDARD_POLICY
    com.scoreloop.client.android.core.addon.RSSFeed$Policy STICKY_POLICY -> STICKY_POLICY
    com.scoreloop.client.android.core.addon.RSSFeed$Policy UNREAD_POLICY -> UNREAD_POLICY
    com.scoreloop.client.android.core.addon.RSSFeed$Policy ON_START_POLICY -> ON_START_POLICY
    com.scoreloop.client.android.core.addon.RSSItem b -> b
    java.util.concurrent.ExecutorService c -> c
    java.util.List d -> d
    android.os.Handler e -> e
    org.apache.http.client.methods.HttpUriRequest f -> f
    boolean g -> g
    com.scoreloop.client.android.core.addon.RSSItem h -> h
    com.scoreloop.client.android.core.addon.RSSFeedObserver i -> i
    com.scoreloop.client.android.core.model.Session j -> j
    java.util.Set k -> k
    com.scoreloop.client.android.core.addon.RSSFeed$State l -> l
    void cancelRequestNextItem() -> cancelRequestNextItem
    com.scoreloop.client.android.core.addon.RSSItem getDefaultItem() -> getDefaultItem
    java.lang.String a() -> a
    com.scoreloop.client.android.core.addon.RSSItem getLastItem() -> getLastItem
    com.scoreloop.client.android.core.addon.RSSFeed$State getState() -> getState
    java.lang.String a(org.w3c.dom.Node) -> a
    boolean hasSessionReadFlag(com.scoreloop.client.android.core.addon.RSSItem) -> hasSessionReadFlag
    boolean isUnread(com.scoreloop.client.android.core.addon.RSSItem) -> isUnread
    void a(com.scoreloop.client.android.core.addon.RSSItem) -> a
    java.util.List a(java.io.InputStream) -> a
    void reloadOnNextRequest() -> reloadOnNextRequest
    void requestNextItem(com.scoreloop.client.android.core.addon.RSSFeed$Policy) -> requestNextItem
    boolean requestAllItems(com.scoreloop.client.android.core.addon.RSSFeed$Continuation,boolean,com.scoreloop.client.android.core.addon.RSSFeed$Policy) -> requestAllItems
    void setDefaultItem(com.scoreloop.client.android.core.addon.RSSItem) -> setDefaultItem
    void a(java.util.List,com.scoreloop.client.android.core.addon.RSSFeed$Continuation) -> a
    void a(com.scoreloop.client.android.core.addon.RSSFeed$Continuation) -> a
    void a(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.addon.RSSItem) -> a
    com.scoreloop.client.android.core.addon.RSSItem b(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.addon.RSSItem) -> b
    com.scoreloop.client.android.core.addon.RSSFeed$State a(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.addon.RSSFeed$State) -> a
    com.scoreloop.client.android.core.addon.RSSFeedObserver a(com.scoreloop.client.android.core.addon.RSSFeed) -> a
    java.util.List a(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List) -> a
    com.scoreloop.client.android.core.model.Session b(com.scoreloop.client.android.core.addon.RSSFeed) -> b
    boolean c(com.scoreloop.client.android.core.addon.RSSFeed) -> c
    org.apache.http.client.methods.HttpUriRequest a(com.scoreloop.client.android.core.addon.RSSFeed,org.apache.http.client.methods.HttpUriRequest) -> a
    java.lang.String d(com.scoreloop.client.android.core.addon.RSSFeed) -> d
    org.apache.http.client.methods.HttpUriRequest e(com.scoreloop.client.android.core.addon.RSSFeed) -> e
    java.util.List a(com.scoreloop.client.android.core.addon.RSSFeed,java.io.InputStream) -> a
    void a(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,com.scoreloop.client.android.core.addon.RSSFeed$Continuation) -> a
    android.os.Handler f(com.scoreloop.client.android.core.addon.RSSFeed) -> f
com.scoreloop.client.android.core.addon.RSSFeed$1 -> com.scoreloop.client.android.core.addon.d:
    com.scoreloop.client.android.core.addon.RSSFeed$Policy a -> a
    com.scoreloop.client.android.core.addon.RSSFeed b -> b
    void withLoadedFeed(java.util.List,java.lang.Exception) -> withLoadedFeed
com.scoreloop.client.android.core.addon.RSSFeed$2 -> com.scoreloop.client.android.core.addon.e:
    com.scoreloop.client.android.core.addon.RSSFeed$Policy a -> a
    boolean b -> b
    com.scoreloop.client.android.core.addon.RSSFeed$Continuation c -> c
    com.scoreloop.client.android.core.addon.RSSFeed d -> d
    void withLoadedFeed(java.util.List,java.lang.Exception) -> withLoadedFeed
com.scoreloop.client.android.core.addon.RSSFeed$3 -> com.scoreloop.client.android.core.addon.f:
    java.util.List a -> a
    com.scoreloop.client.android.core.addon.RSSFeed$Continuation b -> b
    com.scoreloop.client.android.core.addon.RSSFeed c -> c
    void run() -> run
com.scoreloop.client.android.core.addon.RSSFeed$4 -> com.scoreloop.client.android.core.addon.g:
    com.scoreloop.client.android.core.addon.RSSFeed$Continuation a -> a
    com.scoreloop.client.android.core.addon.RSSFeed b -> b
    void run() -> run
com.scoreloop.client.android.core.addon.RSSFeed$4$1 -> com.scoreloop.client.android.core.addon.i:
    com.scoreloop.client.android.core.addon.RSSFeed$4 a -> a
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
com.scoreloop.client.android.core.addon.RSSFeed$4$2 -> com.scoreloop.client.android.core.addon.h:
    java.lang.Exception a -> a
    com.scoreloop.client.android.core.addon.RSSFeed$4 b -> b
    void run() -> run
com.scoreloop.client.android.core.addon.RSSFeed$ChainedPolicy -> com.scoreloop.client.android.core.addon.RSSFeed$ChainedPolicy:
    com.scoreloop.client.android.core.addon.RSSFeed$Policy[] a -> a
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeed$Continuation -> com.scoreloop.client.android.core.addon.RSSFeed$Continuation:
    void withLoadedFeed(java.util.List,java.lang.Exception) -> withLoadedFeed
com.scoreloop.client.android.core.addon.RSSFeed$Policy -> com.scoreloop.client.android.core.addon.RSSFeed$Policy:
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeed$RequestNextItemCanceledException -> com.scoreloop.client.android.core.addon.RSSFeed$RequestNextItemCanceledException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.addon.RSSFeed$State -> com.scoreloop.client.android.core.addon.RSSFeed$State:
    com.scoreloop.client.android.core.addon.RSSFeed$State IDLE -> IDLE
    com.scoreloop.client.android.core.addon.RSSFeed$State PENDING -> PENDING
    com.scoreloop.client.android.core.addon.RSSFeed$State[] a -> a
    com.scoreloop.client.android.core.addon.RSSFeed$State[] values() -> values
    com.scoreloop.client.android.core.addon.RSSFeed$State valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.addon.RSSFeed$a -> com.scoreloop.client.android.core.addon.a:
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeed$b -> com.scoreloop.client.android.core.addon.b:
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeed$c -> com.scoreloop.client.android.core.addon.c:
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeedObserver -> com.scoreloop.client.android.core.addon.RSSFeedObserver:
    void feedDidFailToReceiveNextItem(com.scoreloop.client.android.core.addon.RSSFeed,java.lang.Exception) -> feedDidFailToReceiveNextItem
    void feedDidReceiveNextItem(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.addon.RSSItem) -> feedDidReceiveNextItem
    void feedDidRequestNextItem(com.scoreloop.client.android.core.addon.RSSFeed) -> feedDidRequestNextItem
com.scoreloop.client.android.core.addon.RSSItem -> com.scoreloop.client.android.core.addon.RSSItem:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.Boolean h -> h
    void resetPersistentReadFlags(android.content.Context,java.util.List) -> resetPersistentReadFlags
    boolean equals(java.lang.Object) -> equals
    java.lang.String getDescription() -> getDescription
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getImageUrlString() -> getImageUrlString
    java.lang.String getLinkUrlString() -> getLinkUrlString
    java.lang.String getTitle() -> getTitle
    int hashCode() -> hashCode
    boolean hasPersistentReadFlag() -> hasPersistentReadFlag
    boolean isSticky() -> isSticky
    boolean a() -> a
    void a(java.lang.String) -> a
    void setHasPersistentReadFlag(boolean) -> setHasPersistentReadFlag
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void a(boolean) -> a
    void e(java.lang.String) -> e
com.scoreloop.client.android.core.controller.AchievementController -> com.scoreloop.client.android.core.controller.AchievementController:
    com.scoreloop.client.android.core.model.Achievement c -> c
    com.scoreloop.client.android.core.model.Achievement getAchievement() -> getAchievement
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setAchievement(com.scoreloop.client.android.core.model.Achievement) -> setAchievement
    void submitAchievement() -> submitAchievement
com.scoreloop.client.android.core.controller.AchievementController$a -> com.scoreloop.client.android.core.controller.c:
    com.scoreloop.client.android.core.model.Achievement a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.AchievementsController -> com.scoreloop.client.android.core.controller.AchievementsController:
    java.lang.String c -> c
    java.util.List d -> d
    com.scoreloop.client.android.core.model.AchievementsStore e -> e
    com.scoreloop.client.android.core.model.AwardList f -> f
    boolean g -> g
    com.scoreloop.client.android.core.model.User h -> h
    void b() -> b
    int countAchievedAwards() -> countAchievedAwards
    com.scoreloop.client.android.core.model.Achievement getAchievementForAwardIdentifier(java.lang.String) -> getAchievementForAwardIdentifier
    com.scoreloop.client.android.core.model.Achievement a(java.lang.String,java.lang.String) -> a
    java.util.List getAchievements() -> getAchievements
    com.scoreloop.client.android.core.model.AchievementsStore a() -> a
    com.scoreloop.client.android.core.model.AwardList getAwardList() -> getAwardList
    boolean getForceInitialSync() -> getForceInitialSync
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    void loadAchievements() -> loadAchievements
    void c() -> c
    void k() -> k
    void b(java.util.List) -> b
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a(java.util.List,java.util.List) -> a
    void a(java.util.List) -> a
    void setForceInitialSync(boolean) -> setForceInitialSync
    void setUser(com.scoreloop.client.android.core.model.User) -> setUser
    boolean hadInitialSync() -> hadInitialSync
com.scoreloop.client.android.core.controller.AchievementsController$a -> com.scoreloop.client.android.core.controller.d:
    com.scoreloop.client.android.core.model.AwardList a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ActivitiesController -> com.scoreloop.client.android.core.controller.ActivitiesController:
    java.util.List c -> c
    java.util.List getActivities() -> getActivities
    void loadActivitiesForGame(com.scoreloop.client.android.core.model.Game) -> loadActivitiesForGame
    void loadActivitiesForUser(com.scoreloop.client.android.core.model.User) -> loadActivitiesForUser
    void loadBuddyActivities() -> loadBuddyActivities
    void loadCommunityActivities() -> loadCommunityActivities
    void loadGameActivities() -> loadGameActivities
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a(java.util.List) -> a
com.scoreloop.client.android.core.controller.ActivitiesController$1 -> com.scoreloop.client.android.core.controller.ah:
    int[] a -> a
com.scoreloop.client.android.core.controller.ActivitiesController$a -> com.scoreloop.client.android.core.controller.ad:
    com.scoreloop.client.android.core.model.Game a -> a
    com.scoreloop.client.android.core.controller.ActivitiesController$b b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ActivitiesController$b -> com.scoreloop.client.android.core.controller.ac:
    com.scoreloop.client.android.core.controller.ActivitiesController$b BUDDY -> a
    com.scoreloop.client.android.core.controller.ActivitiesController$b COMMUNITY -> b
    com.scoreloop.client.android.core.controller.ActivitiesController$b GAME -> c
    com.scoreloop.client.android.core.controller.ActivitiesController$b USER -> d
    com.scoreloop.client.android.core.controller.ActivitiesController$b[] a -> e
    com.scoreloop.client.android.core.controller.ActivitiesController$b[] values() -> values
    com.scoreloop.client.android.core.controller.ActivitiesController$b valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.AddressBook -> com.scoreloop.client.android.core.controller.AddressBook:
    java.lang.String[] a -> a
    com.scoreloop.client.android.core.controller.AddressBook b -> b
    java.util.List c -> c
    java.lang.String d -> d
    java.security.MessageDigest e -> e
    com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm f -> f
    com.scoreloop.client.android.core.controller.AddressBook a() -> a
    void a(com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm) -> a
    java.util.List a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.util.List b(android.content.Context) -> b
com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm -> com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm:
    com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm SHA1 -> SHA1
    com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm MD5 -> MD5
    java.lang.String a -> a
    com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm[] b -> b
    com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm[] values() -> values
    com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm valueOf(java.lang.String) -> valueOf
    java.security.MessageDigest a() -> a
    java.security.MessageDigest a(com.scoreloop.client.android.core.controller.AddressBook$HashAlgorithm) -> a
com.scoreloop.client.android.core.controller.ChallengeController -> com.scoreloop.client.android.core.controller.ChallengeController:
    com.scoreloop.client.android.core.model.Challenge c -> c
    com.scoreloop.client.android.core.controller.ChallengeController$c d -> d
    void rejectChallenge() -> rejectChallenge
    void acceptChallenge() -> acceptChallenge
    void createChallenge(com.scoreloop.client.android.core.model.Money,com.scoreloop.client.android.core.model.User) -> createChallenge
    com.scoreloop.client.android.core.model.Challenge getChallenge() -> getChallenge
    void setChallenge(com.scoreloop.client.android.core.model.Challenge) -> setChallenge
    void submitChallenge() -> submitChallenge
    void a(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.core.model.User) -> a
    void submitChallengeScore(com.scoreloop.client.android.core.model.Score) -> submitChallengeScore
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a(int,com.scoreloop.client.android.core.controller.RequestControllerObserver) -> a
com.scoreloop.client.android.core.controller.ChallengeController$a -> com.scoreloop.client.android.core.controller.f:
    com.scoreloop.client.android.core.model.Challenge a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ChallengeController$b -> com.scoreloop.client.android.core.controller.e:
    java.lang.String a() -> a
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ChallengeController$c -> com.scoreloop.client.android.core.controller.g:
    com.scoreloop.client.android.core.controller.ChallengeController a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.scoreloop.client.android.core.controller.ChallengeControllerObserver -> com.scoreloop.client.android.core.controller.ChallengeControllerObserver:
    void challengeControllerDidFailToAcceptChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToAcceptChallenge
    void challengeControllerDidFailToRejectChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToRejectChallenge
    void challengeControllerDidFailOnInsufficientBalance(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailOnInsufficientBalance
com.scoreloop.client.android.core.controller.ChallengesController -> com.scoreloop.client.android.core.controller.ChallengesController:
    java.util.List c -> c
    com.scoreloop.client.android.core.model.User d -> d
    java.util.List getChallenges() -> getChallenges
    void loadChallengeHistory() -> loadChallengeHistory
    void loadOpenChallenges() -> loadOpenChallenges
    void a(java.lang.String) -> a
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a(java.util.List) -> a
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    void setUser(com.scoreloop.client.android.core.model.User) -> setUser
com.scoreloop.client.android.core.controller.ChallengesController$a -> com.scoreloop.client.android.core.controller.ae:
    com.scoreloop.client.android.core.model.Game a -> a
    java.lang.String b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.GameController -> com.scoreloop.client.android.core.controller.GameController:
    com.scoreloop.client.android.core.model.Game c -> c
    com.scoreloop.client.android.core.model.Game getGame() -> getGame
    void loadGame() -> loadGame
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setGame(com.scoreloop.client.android.core.model.Entity) -> setGame
com.scoreloop.client.android.core.controller.GameController$a -> com.scoreloop.client.android.core.controller.av:
    com.scoreloop.client.android.core.model.Entity b -> a
    com.scoreloop.client.android.core.controller.GameController a -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.GameItemController -> com.scoreloop.client.android.core.controller.GameItemController:
    com.scoreloop.client.android.core.model.GameItem c -> c
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
com.scoreloop.client.android.core.controller.GameItemsController -> com.scoreloop.client.android.core.controller.GameItemsController:
    java.util.List c -> c
    java.util.List d -> d
    boolean e -> e
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
com.scoreloop.client.android.core.controller.GamesController -> com.scoreloop.client.android.core.controller.GamesController:
    com.scoreloop.client.android.core.controller.a c -> c
    boolean d -> d
    java.lang.String e -> e
    com.scoreloop.client.android.core.model.User f -> f
    java.util.List getGames() -> getGames
    boolean getLoadsDevicesPlatformOnly() -> getLoadsDevicesPlatformOnly
    int getRangeLength() -> getRangeLength
    boolean hasNextRange() -> hasNextRange
    boolean hasPreviousRange() -> hasPreviousRange
    void a(int) -> a
    void loadNextRange() -> loadNextRange
    void loadPreviousRange() -> loadPreviousRange
    void loadRangeForBuddies() -> loadRangeForBuddies
    void loadRangeForFeatured() -> loadRangeForFeatured
    void loadRangeForPopular() -> loadRangeForPopular
    void loadRangeForNew() -> loadRangeForNew
    void a(java.lang.String,com.scoreloop.client.android.core.model.User) -> a
    void loadRangeForUser(com.scoreloop.client.android.core.model.User) -> loadRangeForUser
    void loadFirstRange() -> loadFirstRange
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void b() -> b
    void setLoadsDevicesPlatformOnly(boolean) -> setLoadsDevicesPlatformOnly
    void setRangeLength(int) -> setRangeLength
com.scoreloop.client.android.core.controller.GamesController$a -> com.scoreloop.client.android.core.controller.aw:
    com.scoreloop.client.android.core.model.Device b -> a
    int c -> b
    int d -> c
    java.lang.String e -> d
    com.scoreloop.client.android.core.model.User f -> e
    com.scoreloop.client.android.core.controller.GamesController a -> f
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.MessageController -> com.scoreloop.client.android.core.controller.MessageController:
    java.lang.Object INVITATION_TARGET -> INVITATION_TARGET
    java.lang.Object RECEIVER_EMAIL -> RECEIVER_EMAIL
    java.lang.Object RECEIVER_SYSTEM -> RECEIVER_SYSTEM
    java.lang.Object RECEIVER_USER -> RECEIVER_USER
    int TYPE_ABUSE_REPORT -> TYPE_ABUSE_REPORT
    int TYPE_RECOMMENDATION -> TYPE_RECOMMENDATION
    int TYPE_TARGET_INFERRED -> TYPE_TARGET_INFERRED
    com.scoreloop.client.android.core.model.Message c -> c
    void addReceiverWithUsers(java.lang.Object,java.lang.Object[]) -> addReceiverWithUsers
    int getMessageType() -> getMessageType
    java.lang.Object getTarget() -> getTarget
    java.lang.String getText() -> getText
    boolean isSubmitAllowed() -> isSubmitAllowed
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setMessageType(int) -> setMessageType
    void setTarget(java.lang.Object) -> setTarget
    void setText(java.lang.String) -> setText
    void submitMessage() -> submitMessage
com.scoreloop.client.android.core.controller.MessageController$a -> com.scoreloop.client.android.core.controller.al:
    java.lang.String a() -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.controller.MessageController$b -> com.scoreloop.client.android.core.controller.ak:
    java.lang.String a() -> a
    java.lang.String getIdentifier() -> getIdentifier
    boolean b() -> b
com.scoreloop.client.android.core.controller.MessageController$c -> com.scoreloop.client.android.core.controller.an:
    com.scoreloop.client.android.core.model.Message b -> a
    com.scoreloop.client.android.core.controller.MessageController a -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.MessageController$d -> com.scoreloop.client.android.core.controller.am:
    java.lang.String[] a -> a
    java.lang.String a() -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.controller.MessageController$e -> com.scoreloop.client.android.core.controller.ao:
    java.lang.String a() -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.controller.RankingController -> com.scoreloop.client.android.core.controller.RankingController:
    com.scoreloop.client.android.core.model.Ranking c -> c
    java.util.Comparator d -> d
    com.scoreloop.client.android.core.model.SearchList e -> e
    com.scoreloop.client.android.core.persistence.LocalScoreStore f -> f
    com.scoreloop.client.android.core.model.Ranking getRanking() -> getRanking
    com.scoreloop.client.android.core.model.SearchList getSearchList() -> getSearchList
    void loadRankingForScore(com.scoreloop.client.android.core.model.Score) -> loadRankingForScore
    void loadRankingForScoreResult(java.lang.Double,java.util.Map) -> loadRankingForScoreResult
    void loadRankingForUserInGameMode(com.scoreloop.client.android.core.model.User,java.lang.Integer) -> loadRankingForUserInGameMode
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a(java.util.Comparator) -> a
    void setSearchList(com.scoreloop.client.android.core.model.SearchList) -> setSearchList
com.scoreloop.client.android.core.controller.RankingController$a -> com.scoreloop.client.android.core.controller.af:
    com.scoreloop.client.android.core.model.Game a -> a
    java.lang.Integer b -> b
    com.scoreloop.client.android.core.model.Score c -> c
    com.scoreloop.client.android.core.model.SearchList d -> d
    com.scoreloop.client.android.core.model.User e -> e
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.RequestCancelledException -> com.scoreloop.client.android.core.controller.RequestCancelledException:
com.scoreloop.client.android.core.controller.RequestController -> com.scoreloop.client.android.core.controller.RequestController:
    boolean c -> c
    com.scoreloop.client.android.core.controller.RequestController$b d -> d
    java.lang.Exception e -> e
    com.scoreloop.client.android.core.controller.RequestControllerObserver a -> a
    com.scoreloop.client.android.core.server.Request f -> f
    com.scoreloop.client.android.core.model.Session g -> g
    com.scoreloop.client.android.core.controller.f h -> h
    boolean b -> b
    java.lang.Integer a(org.json.JSONObject) -> a
    void d() -> d
    void e() -> e
    void a(java.lang.Exception) -> a
    java.lang.Exception getError() -> getError
    com.scoreloop.client.android.core.model.Game getGame() -> getGame
    com.scoreloop.client.android.core.controller.RequestControllerObserver f() -> f
    com.scoreloop.client.android.core.server.Request b() -> b
    com.scoreloop.client.android.core.controller.RequestController$b g() -> g
    com.scoreloop.client.android.core.model.Session h() -> h
    com.scoreloop.client.android.core.model.User i() -> i
    void b(java.lang.Exception) -> b
    void j() -> j
    void c() -> c
    boolean isCachedResponseUsed() -> isCachedResponseUsed
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void d(java.lang.Exception) -> d
    void a_() -> a_
    void a(com.scoreloop.client.android.core.server.Request) -> a
    void b(com.scoreloop.client.android.core.server.Request) -> b
    void setCachedResponseUsed(boolean) -> setCachedResponseUsed
    void c(java.lang.Exception) -> c
    void c(com.scoreloop.client.android.core.server.Request) -> c
    void a(com.scoreloop.client.android.core.controller.RequestController) -> a
    void a(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> a
    com.scoreloop.client.android.core.server.Request b(com.scoreloop.client.android.core.controller.RequestController) -> b
    com.scoreloop.client.android.core.controller.f a(com.scoreloop.client.android.core.controller.RequestController,com.scoreloop.client.android.core.controller.f) -> a
com.scoreloop.client.android.core.controller.RequestController$1 -> com.scoreloop.client.android.core.controller.m:
    int[] a -> a
com.scoreloop.client.android.core.controller.RequestController$a -> com.scoreloop.client.android.core.controller.i:
    java.lang.Exception b -> a
    boolean c -> b
    com.scoreloop.client.android.core.controller.RequestControllerObserver d -> c
    com.scoreloop.client.android.core.controller.RequestController a -> d
    void handleMessage(android.os.Message) -> handleMessage
com.scoreloop.client.android.core.controller.RequestController$b -> com.scoreloop.client.android.core.controller.h:
    com.scoreloop.client.android.core.controller.RequestController a -> a
    void a(com.scoreloop.client.android.core.server.Request) -> a
    void b(com.scoreloop.client.android.core.server.Request) -> b
com.scoreloop.client.android.core.controller.RequestController$c -> com.scoreloop.client.android.core.controller.j:
    com.scoreloop.client.android.core.controller.RequestController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.RequestControllerException -> com.scoreloop.client.android.core.controller.RequestControllerException:
    int CODE_BUDDY_ADD_REQUEST_ALREADY_ADDED -> CODE_BUDDY_ADD_REQUEST_ALREADY_ADDED
    int CODE_BUDDY_REMOVE_REQUEST_ALREADY_REMOVED -> CODE_BUDDY_REMOVE_REQUEST_ALREADY_REMOVED
    int CODE_SOCIAL_PROVIDER_DISCONNECTED -> CODE_SOCIAL_PROVIDER_DISCONNECTED
    int CODE_UNDEFINED -> CODE_UNDEFINED
    int DETAIL_USER_UPDATE_REQUEST_EMAIL_TAKEN -> DETAIL_USER_UPDATE_REQUEST_EMAIL_TAKEN
    int DETAIL_USER_UPDATE_REQUEST_IMAGE_TOO_LARGE -> DETAIL_USER_UPDATE_REQUEST_IMAGE_TOO_LARGE
    int DETAIL_USER_UPDATE_REQUEST_INVALID_EMAIL -> DETAIL_USER_UPDATE_REQUEST_INVALID_EMAIL
    int DETAIL_USER_UPDATE_REQUEST_INVALID_USERNAME -> DETAIL_USER_UPDATE_REQUEST_INVALID_USERNAME
    int DETAIL_USER_UPDATE_REQUEST_UNSUPPORTED_MIME_TYPE -> DETAIL_USER_UPDATE_REQUEST_UNSUPPORTED_MIME_TYPE
    int DETAIL_USER_UPDATE_REQUEST_USERNAME_TAKEN -> DETAIL_USER_UPDATE_REQUEST_USERNAME_TAKEN
    int DETAIL_USER_UPDATE_REQUEST_USERNAME_TOO_SHORT -> DETAIL_USER_UPDATE_REQUEST_USERNAME_TOO_SHORT
    java.lang.String INFO_KEY_DISCONNECTED_PROVIDER_IDENTIFIERS -> INFO_KEY_DISCONNECTED_PROVIDER_IDENTIFIERS
    java.lang.Integer a -> a
    java.lang.Integer b -> b
    java.lang.Integer c -> c
    long serialVersionUID -> serialVersionUID
    int d -> d
    int e -> e
    java.lang.String f -> f
    java.util.Map g -> g
    com.scoreloop.client.android.core.controller.RequestControllerException a(com.scoreloop.client.android.core.server.Response) -> a
    void a(int) -> a
    int getErrorCode() -> getErrorCode
    java.lang.String getErrorMessage() -> getErrorMessage
    java.util.Map getUserInfo() -> getUserInfo
    boolean hasDetail(int) -> hasDetail
    boolean a() -> a
    void b(int) -> b
    void c(int) -> c
    void a(java.lang.String) -> a
    void a(java.util.Map) -> a
com.scoreloop.client.android.core.controller.RequestControllerObserver -> com.scoreloop.client.android.core.controller.RequestControllerObserver:
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.ScoreController -> com.scoreloop.client.android.core.controller.ScoreController:
    com.scoreloop.client.android.core.controller.ChallengeController c -> c
    com.scoreloop.client.android.core.model.Score d -> d
    boolean e -> e
    boolean f -> f
    com.scoreloop.client.android.core.persistence.LocalScoreStore g -> g
    com.scoreloop.client.android.core.model.Score getScore() -> getScore
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a(com.scoreloop.client.android.core.model.Score) -> a
    void setShouldSubmitScoreForChallenge(boolean) -> setShouldSubmitScoreForChallenge
    void setShouldSubmitScoreLocally(boolean) -> setShouldSubmitScoreLocally
    boolean shouldSubmitScoreForChallenge() -> shouldSubmitScoreForChallenge
    boolean shouldSubmitScoreLocally() -> shouldSubmitScoreLocally
    void b() -> b
    void submitScore(com.scoreloop.client.android.core.model.Score) -> submitScore
    com.scoreloop.client.android.core.model.Score a(com.scoreloop.client.android.core.controller.ScoreController) -> a
    com.scoreloop.client.android.core.persistence.LocalScoreStore b(com.scoreloop.client.android.core.controller.ScoreController) -> b
com.scoreloop.client.android.core.controller.ScoreController$a -> com.scoreloop.client.android.core.controller.ab:
    com.scoreloop.client.android.core.controller.ScoreController a -> a
    void challengeControllerDidFailOnInsufficientBalance(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailOnInsufficientBalance
    void challengeControllerDidFailToAcceptChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToAcceptChallenge
    void challengeControllerDidFailToRejectChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToRejectChallenge
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.ScoreController$b -> com.scoreloop.client.android.core.controller.z:
    com.scoreloop.client.android.core.controller.RequestControllerObserver b -> a
    com.scoreloop.client.android.core.controller.ScoreController a -> b
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.ScoreController$c -> com.scoreloop.client.android.core.controller.aa:
    com.scoreloop.client.android.core.model.Game a -> a
    com.scoreloop.client.android.core.model.Score b -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ScoresController -> com.scoreloop.client.android.core.controller.ScoresController:
    com.scoreloop.client.android.core.controller.a c -> c
    java.lang.Integer d -> d
    com.scoreloop.client.android.core.controller.ScoresController$b e -> e
    com.scoreloop.client.android.core.controller.RankingController f -> f
    com.scoreloop.client.android.core.model.Score g -> g
    java.util.Comparator h -> h
    com.scoreloop.client.android.core.model.SearchList i -> i
    com.scoreloop.client.android.core.persistence.LocalScoreStore j -> j
    java.util.Comparator getLocalScoreComparator() -> getLocalScoreComparator
    com.scoreloop.client.android.core.model.Score getLocalScoreToSubmit() -> getLocalScoreToSubmit
    java.lang.Integer getMode() -> getMode
    int getRangeLength() -> getRangeLength
    com.scoreloop.client.android.core.controller.RankingController b() -> b
    java.util.List getScores() -> getScores
    com.scoreloop.client.android.core.model.SearchList getSearchList() -> getSearchList
    boolean hasNextRange() -> hasNextRange
    boolean hasPreviousRange() -> hasPreviousRange
    void a(int) -> a
    void b(int) -> b
    void loadNextRange() -> loadNextRange
    void loadPreviousRange() -> loadPreviousRange
    void loadRangeAtRank(int) -> loadRangeAtRank
    void loadRangeForScore(com.scoreloop.client.android.core.model.Score) -> loadRangeForScore
    void loadRangeForScoreResult(java.lang.Double,java.util.Map) -> loadRangeForScoreResult
    void loadRangeForUser(com.scoreloop.client.android.core.model.User) -> loadRangeForUser
    void a(java.lang.Integer) -> a
    void c(int) -> c
    void c() -> c
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a_() -> a_
    void setLocalScoreComparator(java.util.Comparator) -> setLocalScoreComparator
    void setMode(java.lang.Integer) -> setMode
    void setRangeLength(int) -> setRangeLength
    void setSearchList(com.scoreloop.client.android.core.model.SearchList) -> setSearchList
    com.scoreloop.client.android.core.model.Score a(com.scoreloop.client.android.core.controller.ScoresController) -> a
    void a(com.scoreloop.client.android.core.controller.ScoresController,java.lang.Integer) -> a
com.scoreloop.client.android.core.controller.ScoresController$a -> com.scoreloop.client.android.core.controller.aj:
    com.scoreloop.client.android.core.controller.ScoresController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.ScoresController$b -> com.scoreloop.client.android.core.controller.ai:
    com.scoreloop.client.android.core.model.Game a -> a
    java.lang.Integer b -> b
    int c -> c
    int d -> d
    com.scoreloop.client.android.core.model.SearchList e -> e
    com.scoreloop.client.android.core.model.User f -> f
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
    void a(int) -> a
com.scoreloop.client.android.core.controller.SearchSpec -> com.scoreloop.client.android.core.controller.SearchSpec:
    java.util.List a -> a
    com.scoreloop.client.android.core.controller.e b -> b
    void a(com.scoreloop.client.android.core.controller.c) -> a
    org.json.JSONObject a() -> a
com.scoreloop.client.android.core.controller.SocialProviderController -> com.scoreloop.client.android.core.controller.SocialProviderController:
    android.app.Activity b -> b
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver c -> c
    com.scoreloop.client.android.core.model.SocialProvider d -> d
    com.scoreloop.client.android.core.controller.f e -> e
    com.scoreloop.client.android.core.controller.RequestControllerObserver f -> f
    com.scoreloop.client.android.core.model.Session g -> g
    com.scoreloop.client.android.core.controller.UserController h -> h
    boolean a -> a
    com.scoreloop.client.android.core.controller.SocialProviderController getSocialProviderController(com.scoreloop.client.android.core.model.Session,com.scoreloop.client.android.core.controller.SocialProviderControllerObserver,com.scoreloop.client.android.core.model.SocialProvider) -> getSocialProviderController
    com.scoreloop.client.android.core.controller.SocialProviderController getSocialProviderController(java.lang.String,com.scoreloop.client.android.core.controller.SocialProviderControllerObserver) -> getSocialProviderController
    void connect(android.app.Activity) -> connect
    void a() -> a
    android.app.Activity c_() -> c_
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver d_() -> d_
    com.scoreloop.client.android.core.model.Session d() -> d
    com.scoreloop.client.android.core.model.User e() -> e
    com.scoreloop.client.android.core.model.SocialProvider getSocialProvider() -> getSocialProvider
    void a(com.scoreloop.client.android.core.model.SocialProvider) -> a
    void f() -> f
    void a(com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode) -> a
    void a(java.lang.Exception) -> a
    void a(com.scoreloop.client.android.core.controller.SocialProviderController) -> a
com.scoreloop.client.android.core.controller.SocialProviderController$1 -> com.scoreloop.client.android.core.controller.l:
    com.scoreloop.client.android.core.controller.SocialProviderController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.SocialProviderController$2 -> com.scoreloop.client.android.core.controller.k:
    int[] a -> a
com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode -> com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode:
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode SUBMIT -> SUBMIT
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode LOAD -> LOAD
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode[] a -> a
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode[] values() -> values
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.SocialProviderController$a -> com.scoreloop.client.android.core.controller.v:
    com.scoreloop.client.android.core.controller.SocialProviderController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.SocialProviderControllerObserver -> com.scoreloop.client.android.core.controller.SocialProviderControllerObserver:
    void socialProviderControllerDidFail(com.scoreloop.client.android.core.controller.SocialProviderController,java.lang.Throwable) -> socialProviderControllerDidFail
    void socialProviderControllerDidEnterInvalidCredentials(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidEnterInvalidCredentials
    void socialProviderControllerDidSucceed(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidSucceed
    void socialProviderControllerDidCancel(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidCancel
com.scoreloop.client.android.core.controller.UserController -> com.scoreloop.client.android.core.controller.UserController:
    com.scoreloop.client.android.core.model.User c -> c
    void addAsBuddy() -> addAsBuddy
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    void loadBuddies() -> loadBuddies
    void loadUser() -> loadUser
    void loadUserContext() -> loadUserContext
    void loadUserDetail() -> loadUserDetail
    boolean b(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> b
    boolean c(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> c
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    boolean d(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> d
    boolean e(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> e
    void removeAsBuddy() -> removeAsBuddy
    void setUser(com.scoreloop.client.android.core.model.Entity) -> setUser
    void submitUser() -> submitUser
    void submitUserContext() -> submitUserContext
com.scoreloop.client.android.core.controller.UserController$a -> com.scoreloop.client.android.core.controller.q:
    java.lang.Object a -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.UserController$b -> com.scoreloop.client.android.core.controller.p:
    java.lang.Object a -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$c -> com.scoreloop.client.android.core.controller.o:
    java.lang.Object a -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$d -> com.scoreloop.client.android.core.controller.n:
    java.lang.Object a -> a
    com.scoreloop.client.android.core.model.Game b -> e
    java.lang.String a() -> a
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$e -> com.scoreloop.client.android.core.controller.u:
    java.lang.Object a -> a
    com.scoreloop.client.android.core.model.Game b -> e
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$f -> com.scoreloop.client.android.core.controller.t:
    java.lang.Object b -> e
    com.scoreloop.client.android.core.model.User c -> f
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.UserController$g -> com.scoreloop.client.android.core.controller.s:
    java.lang.Object d -> b
    com.scoreloop.client.android.core.model.Game e -> c
    com.scoreloop.client.android.core.model.User f -> d
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$h -> com.scoreloop.client.android.core.controller.r:
    java.lang.Object a -> a
    java.lang.String b -> e
    com.scoreloop.client.android.core.model.ImageSource c -> f
    java.lang.String h -> h
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserControllerObserver -> com.scoreloop.client.android.core.controller.UserControllerObserver:
    void userControllerDidFailOnEmailAlreadyTaken(com.scoreloop.client.android.core.controller.UserController) -> userControllerDidFailOnEmailAlreadyTaken
    void userControllerDidFailOnInvalidEmailFormat(com.scoreloop.client.android.core.controller.UserController) -> userControllerDidFailOnInvalidEmailFormat
    void userControllerDidFailOnUsernameAlreadyTaken(com.scoreloop.client.android.core.controller.UserController) -> userControllerDidFailOnUsernameAlreadyTaken
com.scoreloop.client.android.core.controller.UsersController -> com.scoreloop.client.android.core.controller.UsersController:
    int c -> c
    boolean d -> d
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator e -> e
    java.util.List f -> f
    java.lang.Integer g -> g
    void setSearchLimit(int) -> setSearchLimit
    int getSearchLimit() -> getSearchLimit
    void setSearchesGlobal(boolean) -> setSearchesGlobal
    boolean getSearchesGlobal() -> getSearchesGlobal
    void setSearchOperator(com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator) -> setSearchOperator
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator getSearchOperator() -> getSearchOperator
    java.util.List getUsers() -> getUsers
    void a(java.util.List,java.lang.Integer) -> a
    void searchByLogin(java.lang.String) -> searchByLogin
    void searchByEmail(java.lang.String) -> searchByEmail
    void searchByLocalAddressBook() -> searchByLocalAddressBook
    void searchBySocialProvider(com.scoreloop.client.android.core.model.SocialProvider) -> searchBySocialProvider
    void loadRecommendedBuddies(int) -> loadRecommendedBuddies
    boolean isOverLimit() -> isOverLimit
    boolean isMaxUserCount() -> isMaxUserCount
    void loadBuddies(com.scoreloop.client.android.core.model.User,com.scoreloop.client.android.core.model.Game) -> loadBuddies
    int getCountOfUsers() -> getCountOfUsers
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    com.scoreloop.client.android.core.controller.UsersController$d a(java.lang.String,com.scoreloop.client.android.core.controller.SearchSpec) -> a
    com.scoreloop.client.android.core.controller.SearchSpec b() -> b
com.scoreloop.client.android.core.controller.UsersController$1 -> com.scoreloop.client.android.core.controller.bb:
    int[] a -> a
com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator -> com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator:
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator EXACT_MATCH -> EXACT_MATCH
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator LIKE -> LIKE
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator PREFIX -> PREFIX
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator[] a -> a
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator[] values() -> values
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.UsersController$a -> com.scoreloop.client.android.core.controller.az:
    java.lang.Object a -> a
    com.scoreloop.client.android.core.model.User b -> b
    com.scoreloop.client.android.core.model.Game c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UsersController$b -> com.scoreloop.client.android.core.controller.ax:
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.UsersController$c -> com.scoreloop.client.android.core.controller.ay:
    java.lang.String a -> a
    com.scoreloop.client.android.core.controller.SearchSpec b -> b
    org.json.JSONObject a() -> a
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.controller.UsersController$d -> com.scoreloop.client.android.core.controller.ba:
    com.scoreloop.client.android.core.model.Game a -> d
    int b -> a
    boolean c -> e
    com.scoreloop.client.android.core.model.User d -> b
    com.scoreloop.client.android.core.controller.UsersController$c e -> c
    void a(com.scoreloop.client.android.core.model.User) -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.a -> com.scoreloop.client.android.core.controller.ar:
    boolean a -> a
    boolean b -> b
    com.scoreloop.client.android.core.model.Range c -> c
    java.util.List d -> d
    int e -> e
    void k() -> k
    int a() -> a
    int b() -> b
    int c() -> c
    java.util.List d() -> d
    int e() -> e
    int f() -> f
    boolean g() -> g
    boolean h() -> h
    boolean i() -> i
    void a(int) -> a
    void b(int) -> b
    void a(java.util.List) -> a
    void c(int) -> c
    void j() -> j
com.scoreloop.client.android.core.controller.b -> com.scoreloop.client.android.core.controller.aq:
    com.scoreloop.client.android.core.server.Request c -> c
    com.scoreloop.client.android.core.model.Device d -> d
    com.scoreloop.client.android.core.server.Request e -> e
    void a_() -> a_
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void c() -> a
com.scoreloop.client.android.core.controller.b$1 -> com.scoreloop.client.android.core.controller.w:
    int[] a -> a
com.scoreloop.client.android.core.controller.b$a -> com.scoreloop.client.android.core.controller.x:
    com.scoreloop.client.android.core.model.Device a -> a
    com.scoreloop.client.android.core.controller.b$b b -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
    com.scoreloop.client.android.core.controller.b$b d() -> d
com.scoreloop.client.android.core.controller.b$b -> com.scoreloop.client.android.core.controller.y:
    com.scoreloop.client.android.core.controller.b$b CREATE -> a
    com.scoreloop.client.android.core.controller.b$b RESET -> b
    com.scoreloop.client.android.core.controller.b$b UPDATE -> c
    com.scoreloop.client.android.core.controller.b$b VERIFY -> d
    int a -> e
    com.scoreloop.client.android.core.controller.b$b[] b -> f
    com.scoreloop.client.android.core.controller.b$b[] values() -> values
    com.scoreloop.client.android.core.controller.b$b valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.c -> com.scoreloop.client.android.core.controller.ap:
    java.lang.String a -> a
    com.scoreloop.client.android.core.controller.d b -> b
    java.lang.Object c -> c
    java.lang.String a() -> a
    java.lang.Object b() -> b
com.scoreloop.client.android.core.controller.d -> com.scoreloop.client.android.core.controller.au:
    com.scoreloop.client.android.core.controller.d EXACT -> a
    com.scoreloop.client.android.core.controller.d LIKE -> b
    com.scoreloop.client.android.core.controller.d BEGINS_WITH -> c
    com.scoreloop.client.android.core.controller.d IS -> d
    com.scoreloop.client.android.core.controller.d IS_GREATER -> f
    com.scoreloop.client.android.core.controller.d IS_LESS -> g
    com.scoreloop.client.android.core.controller.d IS_NOT -> h
    com.scoreloop.client.android.core.controller.d EQUALS_ANY -> e
    java.lang.String a -> i
    java.lang.String b -> j
    com.scoreloop.client.android.core.controller.d[] c -> k
    com.scoreloop.client.android.core.controller.d[] values() -> values
    com.scoreloop.client.android.core.controller.d valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> a
com.scoreloop.client.android.core.controller.e -> com.scoreloop.client.android.core.controller.at:
    java.lang.String a -> a
    com.scoreloop.client.android.core.controller.e$a b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
com.scoreloop.client.android.core.controller.e$a -> com.scoreloop.client.android.core.controller.ag:
    com.scoreloop.client.android.core.controller.e$a ASCENDING -> a
    com.scoreloop.client.android.core.controller.e$a DESCENDING -> b
    java.lang.String a -> c
    com.scoreloop.client.android.core.controller.e$a[] b -> d
    com.scoreloop.client.android.core.controller.e$a[] values() -> values
    com.scoreloop.client.android.core.controller.e$a valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.scoreloop.client.android.core.controller.f -> com.scoreloop.client.android.core.controller.as:
    com.scoreloop.client.android.core.controller.b c -> c
    com.scoreloop.client.android.core.controller.RequestControllerObserver d -> d
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void b() -> a
    com.scoreloop.client.android.core.controller.b a$61ab5ad8(com.scoreloop.client.android.core.controller.f) -> a
com.scoreloop.client.android.core.controller.f$a -> com.scoreloop.client.android.core.controller.b:
    boolean a -> a
    com.scoreloop.client.android.core.controller.f b -> b
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.f$b -> com.scoreloop.client.android.core.controller.a:
    com.scoreloop.client.android.core.model.Device a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.model.Achievement -> com.scoreloop.client.android.core.model.Achievement:
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Award c -> c
    java.util.Date d -> d
    boolean e -> e
    com.scoreloop.client.android.core.model.AchievementsStore f -> f
    java.lang.String g -> g
    int h -> h
    java.lang.String i -> i
    com.scoreloop.client.android.core.model.Award getAward() -> getAward
    java.util.Date getDate() -> getDate
    java.lang.String a() -> a
    android.graphics.Bitmap getImage() -> getImage
    java.lang.String c() -> c
    int getValue() -> getValue
    boolean isAchieved() -> isAchieved
    void a(com.scoreloop.client.android.core.model.Achievement,boolean) -> a
    boolean needsSubmit() -> needsSubmit
    void setAchieved() -> setAchieved
    void a(java.lang.String) -> a
    void setValue(int) -> setValue
    org.json.JSONObject d() -> d
    org.json.JSONObject a(boolean) -> a
    void a(java.lang.Object) -> a
    java.lang.String e() -> e
    void f() -> f
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.AchievementsStore -> com.scoreloop.client.android.core.model.AchievementsStore:
    boolean a() -> a
    void b() -> b
    java.util.List a(com.scoreloop.client.android.core.model.Award) -> a
    void a(com.scoreloop.client.android.core.model.Achievement) -> a
com.scoreloop.client.android.core.model.Activity -> com.scoreloop.client.android.core.model.Activity:
    com.scoreloop.client.android.core.model.Session c -> c
    java.util.Date d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    com.scoreloop.client.android.core.model.Entity j -> j
    com.scoreloop.client.android.core.model.Entity k -> k
    java.lang.String a -> a
    java.util.Date getDate() -> getDate
    java.lang.String getMessage() -> getMessage
    com.scoreloop.client.android.core.model.Entity getUser() -> getUser
    com.scoreloop.client.android.core.model.Entity getGame() -> getGame
    java.lang.String getTimeAgo() -> getTimeAgo
    java.lang.String getImageUrl(com.scoreloop.client.android.core.model.Activity$ImageSize) -> getImageUrl
    org.json.JSONObject d() -> d
    java.lang.String c() -> c
    void a(java.lang.Object) -> a
    void a(org.json.JSONObject) -> a
    java.lang.String a() -> a
com.scoreloop.client.android.core.model.Activity$ImageSize -> com.scoreloop.client.android.core.model.Activity$ImageSize:
    com.scoreloop.client.android.core.model.Activity$ImageSize SMALL -> SMALL
    com.scoreloop.client.android.core.model.Activity$ImageSize MEDIUM -> MEDIUM
    com.scoreloop.client.android.core.model.Activity$ImageSize LARGE -> LARGE
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Activity$ImageSize[] b -> b
    com.scoreloop.client.android.core.model.Activity$ImageSize[] values() -> values
    com.scoreloop.client.android.core.model.Activity$ImageSize valueOf(java.lang.String) -> valueOf
    java.lang.String a() -> a
    java.lang.String a(com.scoreloop.client.android.core.model.Activity$ImageSize) -> a
com.scoreloop.client.android.core.model.Award -> com.scoreloop.client.android.core.model.Award:
    android.graphics.Bitmap a -> a
    com.scoreloop.client.android.core.model.AwardList b -> b
    com.scoreloop.client.android.core.model.Range c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.scoreloop.client.android.core.model.Money h -> h
    android.graphics.Bitmap i -> i
    boolean equals(java.lang.Object) -> equals
    android.graphics.Bitmap getAchievedImage() -> getAchievedImage
    java.lang.String a() -> a
    int getAchievingValue() -> getAchievingValue
    com.scoreloop.client.android.core.model.AwardList b() -> b
    com.scoreloop.client.android.core.model.Range getCounterRange() -> getCounterRange
    java.lang.String getIdentifier() -> getIdentifier
    int getInitialValue() -> getInitialValue
    java.lang.String getLocalizedDescription() -> getLocalizedDescription
    java.lang.String c() -> c
    java.lang.String getLocalizedTitle() -> getLocalizedTitle
    java.lang.String d() -> d
    com.scoreloop.client.android.core.model.Money getRewardMoney() -> getRewardMoney
    java.lang.String e() -> e
    android.graphics.Bitmap getUnachievedImage() -> getUnachievedImage
    java.lang.String f() -> f
    int hashCode() -> hashCode
    boolean isAchievedByValue(int) -> isAchievedByValue
    boolean isValidCounterValue(int) -> isValidCounterValue
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(android.graphics.Bitmap) -> b
    java.lang.String toString() -> toString
com.scoreloop.client.android.core.model.AwardList -> com.scoreloop.client.android.core.model.AwardList:
    java.util.List a -> a
    java.util.Map b -> b
    java.lang.String c -> c
    com.scoreloop.client.android.core.model.AwardList a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(com.scoreloop.client.android.core.model.Award) -> a
    java.util.List getAwards() -> getAwards
    com.scoreloop.client.android.core.model.Award getAwardWithIdentifier(java.lang.String) -> getAwardWithIdentifier
    java.util.List getAwardIdentifiers() -> getAwardIdentifiers
    java.lang.String a() -> a
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.model.BaseEntity -> com.scoreloop.client.android.core.model.BaseEntity:
    java.lang.String b -> b
    void a(java.lang.Object,java.lang.String,java.lang.Object) -> a
    void a(java.lang.Object) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String getIdentifier() -> getIdentifier
    int hashCode() -> hashCode
    boolean b() -> b
    void b(java.lang.String) -> b
    org.json.JSONObject d() -> d
    java.lang.String toString() -> toString
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.BaseEntity$a -> com.scoreloop.client.android.core.model.h:
    java.lang.String a -> a
    java.lang.String b -> b
com.scoreloop.client.android.core.model.Challenge -> com.scoreloop.client.android.core.model.Challenge:
    java.util.Date c -> c
    com.scoreloop.client.android.core.model.User d -> d
    com.scoreloop.client.android.core.model.Score e -> e
    java.lang.Integer f -> f
    com.scoreloop.client.android.core.model.User g -> g
    com.scoreloop.client.android.core.model.Score h -> h
    java.lang.Integer i -> i
    java.util.Map j -> j
    java.util.Date k -> k
    java.lang.String l -> l
    java.lang.Integer m -> m
    com.scoreloop.client.android.core.model.User n -> n
    java.lang.Integer o -> o
    com.scoreloop.client.android.core.model.Money p -> p
    com.scoreloop.client.android.core.model.Money q -> q
    com.scoreloop.client.android.core.model.Money r -> r
    com.scoreloop.client.android.core.model.Money s -> s
    com.scoreloop.client.android.core.model.Money t -> t
    java.lang.String u -> u
    com.scoreloop.client.android.core.model.User v -> v
    java.lang.String a -> a
    java.util.Date getCompletedAt() -> getCompletedAt
    com.scoreloop.client.android.core.model.User getContender() -> getContender
    com.scoreloop.client.android.core.model.Score getContenderScore() -> getContenderScore
    java.lang.Integer getContenderSkill() -> getContenderSkill
    com.scoreloop.client.android.core.model.User getContestant() -> getContestant
    com.scoreloop.client.android.core.model.Score getContestantScore() -> getContestantScore
    java.lang.Integer getContestantSkill() -> getContestantSkill
    java.util.Map getContext() -> getContext
    java.util.Date getCreatedAt() -> getCreatedAt
    com.scoreloop.client.android.core.model.User getLoser() -> getLoser
    com.scoreloop.client.android.core.model.Money getPrize() -> getPrize
    com.scoreloop.client.android.core.model.User getWinner() -> getWinner
    java.lang.Integer getLevel() -> getLevel
    java.lang.Integer getMode() -> getMode
    com.scoreloop.client.android.core.model.Money getStake() -> getStake
    boolean isAccepted() -> isAccepted
    boolean isAssigned() -> isAssigned
    boolean isCancelled() -> isCancelled
    boolean isComplete() -> isComplete
    boolean isCreated() -> isCreated
    boolean isDone() -> isDone
    boolean isInvalid() -> isInvalid
    boolean isInvited() -> isInvited
    boolean isOpen() -> isOpen
    boolean isRejected() -> isRejected
    boolean isPlayableForUser(com.scoreloop.client.android.core.model.User) -> isPlayableForUser
    boolean isWinner(com.scoreloop.client.android.core.model.User) -> isWinner
    void a(com.scoreloop.client.android.core.model.Score) -> a
    void setContender(com.scoreloop.client.android.core.model.User) -> setContender
    void setContenderScore(com.scoreloop.client.android.core.model.Score) -> setContenderScore
    void setContestant(com.scoreloop.client.android.core.model.User) -> setContestant
    void setContestantScore(com.scoreloop.client.android.core.model.Score) -> setContestantScore
    void setContext(java.util.Map) -> setContext
    void setLevel(java.lang.Integer) -> setLevel
    void setMode(java.lang.Integer) -> setMode
    org.json.JSONObject d() -> d
    void a(org.json.JSONObject) -> a
    void a(com.scoreloop.client.android.core.model.User,boolean) -> a
    java.lang.String c() -> c
    void a(com.scoreloop.client.android.core.model.Money) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
com.scoreloop.client.android.core.model.Client -> com.scoreloop.client.android.core.model.Client:
    java.util.BitSet a -> a
    com.scoreloop.client.android.core.model.ClientObserver b -> b
    com.scoreloop.client.android.core.server.Server c -> c
    com.scoreloop.client.android.core.model.Session d -> d
    java.util.Properties getProperties(android.content.Context) -> getProperties
    java.lang.String a(android.content.Context) -> a
    java.util.Properties b(android.content.Context) -> b
    void a(java.util.Properties,java.lang.String) -> a
    void a(java.util.Properties,java.lang.String,java.lang.String) -> a
    void a(java.util.Properties) -> a
    void b(java.util.Properties,java.lang.String) -> b
    void c(android.content.Context) -> c
    com.scoreloop.client.android.core.model.Game a() -> a
    com.scoreloop.client.android.core.model.Range getGameLevels() -> getGameLevels
    com.scoreloop.client.android.core.model.Range getGameModes() -> getGameModes
    java.lang.String getInfoString() -> getInfoString
    com.scoreloop.client.android.core.model.Session getSession() -> getSession
    void a(android.content.Context,com.scoreloop.client.android.core.model.ClientObserver,java.util.Properties,java.lang.String) -> a
    void d(android.content.Context) -> d
    void setGameLevels(com.scoreloop.client.android.core.model.Range) -> setGameLevels
    void setGameModes(com.scoreloop.client.android.core.model.Range) -> setGameModes
com.scoreloop.client.android.core.model.ClientObserver -> com.scoreloop.client.android.core.model.ClientObserver:
com.scoreloop.client.android.core.model.Device -> com.scoreloop.client.android.core.model.Device:
    java.lang.String c -> c
    com.scoreloop.client.android.core.model.Device$State d -> d
    java.lang.String a -> a
    java.lang.String c() -> c
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    void a(java.lang.String) -> a
    void a(com.scoreloop.client.android.core.model.Device$State) -> a
    void b(java.lang.String) -> b
    org.json.JSONObject d() -> d
    void a(org.json.JSONObject) -> a
    java.lang.String a() -> a
com.scoreloop.client.android.core.model.Device$State -> com.scoreloop.client.android.core.model.Device$State:
    com.scoreloop.client.android.core.model.Device$State CREATED -> CREATED
    com.scoreloop.client.android.core.model.Device$State FREED -> FREED
    com.scoreloop.client.android.core.model.Device$State UNKNOWN -> UNKNOWN
    com.scoreloop.client.android.core.model.Device$State VERIFIED -> VERIFIED
    int a -> a
    com.scoreloop.client.android.core.model.Device$State[] b -> b
    com.scoreloop.client.android.core.model.Device$State[] values() -> values
    com.scoreloop.client.android.core.model.Device$State valueOf(java.lang.String) -> valueOf
    int intValue() -> intValue
com.scoreloop.client.android.core.model.Entity -> com.scoreloop.client.android.core.model.Entity:
    java.lang.String a() -> a
    java.lang.String getIdentifier() -> getIdentifier
com.scoreloop.client.android.core.model.Game -> com.scoreloop.client.android.core.model.Game:
    java.lang.String CONTEXT_KEY_LEVEL -> CONTEXT_KEY_LEVEL
    java.lang.String CONTEXT_KEY_MINOR_RESULT -> CONTEXT_KEY_MINOR_RESULT
    java.lang.String CONTEXT_KEY_MODE -> CONTEXT_KEY_MODE
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.Integer g -> g
    java.lang.Integer h -> h
    java.lang.Integer i -> i
    java.lang.Integer j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String[] p -> p
    com.scoreloop.client.android.core.model.AwardList q -> q
    boolean r -> r
    boolean s -> s
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Entity a(com.scoreloop.client.android.core.model.Session,java.lang.String) -> a
    java.lang.Integer getLevelCount() -> getLevelCount
    java.lang.Integer getMaxLevel() -> getMaxLevel
    java.lang.Integer getMaxMode() -> getMaxMode
    java.lang.Integer getMinLevel() -> getMinLevel
    java.lang.Integer getMinMode() -> getMinMode
    java.lang.Integer getModeCount() -> getModeCount
    java.lang.String getName() -> getName
    java.lang.String c() -> c
    java.lang.String getVersion() -> getVersion
    boolean hasLevels() -> hasLevels
    boolean hasModes() -> hasModes
    void a(java.lang.String) -> a
    void a(java.lang.Integer) -> a
    void b(java.lang.Integer) -> b
    void c(java.lang.Integer) -> c
    void d(java.lang.Integer) -> d
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    org.json.JSONObject d() -> d
    void a(org.json.JSONObject) -> a
    java.lang.String getDescription() -> getDescription
    java.lang.String getImageUrl() -> getImageUrl
    java.lang.String getPublisherName() -> getPublisherName
    java.lang.String getDownloadUrl() -> getDownloadUrl
    java.lang.String a() -> a
    void a(com.scoreloop.client.android.core.model.AwardList) -> a
    com.scoreloop.client.android.core.model.AwardList e() -> e
    java.lang.String[] getPackageNames() -> getPackageNames
    void a(boolean) -> a
    boolean f() -> f
    void b(boolean) -> b
    boolean g() -> g
com.scoreloop.client.android.core.model.GameItem -> com.scoreloop.client.android.core.model.GameItem:
    java.lang.String a -> a
    java.lang.String c -> c
    java.util.Map d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.util.Date g -> g
    java.util.List h -> h
    java.lang.String a() -> a
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.ImageSource -> com.scoreloop.client.android.core.model.ImageSource:
    com.scoreloop.client.android.core.model.ImageSource IMAGE_SOURCE_SCORELOOP -> IMAGE_SOURCE_SCORELOOP
    com.scoreloop.client.android.core.model.ImageSource IMAGE_SOURCE_DEFAULT -> IMAGE_SOURCE_DEFAULT
    java.lang.String getName() -> getName
com.scoreloop.client.android.core.model.Message -> com.scoreloop.client.android.core.model.Message:
    java.util.List a -> a
    com.scoreloop.client.android.core.model.MessageTargetInterface b -> b
    java.lang.String c -> c
    com.scoreloop.client.android.core.model.Message$Type d -> d
    void a(com.scoreloop.client.android.core.model.MessageReceiver) -> a
    com.scoreloop.client.android.core.model.Message a() -> a
    java.util.List b() -> b
    org.json.JSONArray g() -> g
    com.scoreloop.client.android.core.model.MessageTargetInterface c() -> c
    org.json.JSONObject h() -> h
    java.lang.String d() -> d
    com.scoreloop.client.android.core.model.Message$Type e() -> e
    void a(com.scoreloop.client.android.core.model.MessageTargetInterface) -> a
    void a(java.lang.String) -> a
    void a(com.scoreloop.client.android.core.model.Message$Type) -> a
    org.json.JSONObject f() -> f
com.scoreloop.client.android.core.model.Message$Type -> com.scoreloop.client.android.core.model.Message$Type:
    com.scoreloop.client.android.core.model.Message$Type ABUSE_REPORT -> ABUSE_REPORT
    com.scoreloop.client.android.core.model.Message$Type RECOMMENDATION -> RECOMMENDATION
    com.scoreloop.client.android.core.model.Message$Type TARGET_INFERRED -> TARGET_INFERRED
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Message$Type[] b -> b
    com.scoreloop.client.android.core.model.Message$Type[] values() -> values
    com.scoreloop.client.android.core.model.Message$Type valueOf(java.lang.String) -> valueOf
    java.lang.String getTypeString() -> getTypeString
com.scoreloop.client.android.core.model.MessageReceiver -> com.scoreloop.client.android.core.model.MessageReceiver:
    com.scoreloop.client.android.core.model.MessageReceiverInterface a -> a
    java.lang.String[] b -> b
    boolean equals(java.lang.Object) -> equals
    com.scoreloop.client.android.core.model.MessageReceiverInterface a() -> a
    int hashCode() -> hashCode
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.model.MessageReceiverInterface -> com.scoreloop.client.android.core.model.MessageReceiverInterface:
    java.lang.String a() -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.model.MessageTargetInterface -> com.scoreloop.client.android.core.model.MessageTargetInterface:
    java.lang.String a() -> a
    java.lang.String getIdentifier() -> getIdentifier
    boolean b() -> b
com.scoreloop.client.android.core.model.Money -> com.scoreloop.client.android.core.model.Money:
    java.math.BigDecimal a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a() -> a
    com.scoreloop.client.android.core.model.Money b() -> b
    boolean equals(java.lang.Object) -> equals
    java.math.BigDecimal getAmount() -> getAmount
    boolean hasAmount() -> hasAmount
    int hashCode() -> hashCode
    org.json.JSONObject c() -> c
    java.lang.String toString() -> toString
    void a(org.json.JSONObject) -> a
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    int compareTo(com.scoreloop.client.android.core.model.Money) -> compareTo
    void b(java.lang.String) -> b
    java.lang.String getApplicationCurrencyNameSingular() -> getApplicationCurrencyNameSingular
    void c(java.lang.String) -> c
    java.lang.String getApplicationCurrencyNamePlural() -> getApplicationCurrencyNamePlural
    void d(java.lang.String) -> d
    java.lang.Object clone() -> clone
    int compareTo(java.lang.Object) -> compareTo
com.scoreloop.client.android.core.model.Range -> com.scoreloop.client.android.core.model.Range:
    int a -> a
    int b -> b
    int getLength() -> getLength
    int getLocation() -> getLocation
    void a(int) -> a
    int a() -> a
    int b() -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.scoreloop.client.android.core.model.Ranking -> com.scoreloop.client.android.core.model.Ranking:
    java.lang.Integer a -> a
    com.scoreloop.client.android.core.model.Score b -> b
    java.lang.Integer c -> c
    java.lang.Integer getRank() -> getRank
    com.scoreloop.client.android.core.model.Score getScore() -> getScore
    java.lang.Integer getTotal() -> getTotal
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.Score -> com.scoreloop.client.android.core.model.Score:
    java.lang.String c -> c
    java.lang.Integer d -> d
    java.lang.Double e -> e
    java.lang.Integer f -> f
    java.lang.Double g -> g
    java.lang.Integer h -> h
    java.lang.String i -> i
    com.scoreloop.client.android.core.model.User j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    boolean areModesEqual(java.lang.Integer,com.scoreloop.client.android.core.model.Score) -> areModesEqual
    boolean areModesEqual(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.core.model.Score) -> areModesEqual
    boolean areModesEqual(java.lang.Integer,java.lang.Integer) -> areModesEqual
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.Integer getLevel() -> getLevel
    java.lang.Double getMinorResult() -> getMinorResult
    java.lang.Integer getMode() -> getMode
    java.lang.Integer getRank() -> getRank
    java.lang.Double getResult() -> getResult
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    void setLevel(java.lang.Integer) -> setLevel
    void setMinorResult(java.lang.Double) -> setMinorResult
    void setMode(java.lang.Integer) -> setMode
    void a(java.lang.Integer) -> a
    void setResult(java.lang.Double) -> setResult
    void a(com.scoreloop.client.android.core.model.User) -> a
    org.json.JSONObject d() -> d
    void a(org.json.JSONObject) -> a
    java.lang.String a() -> a
    java.util.Map getContext() -> getContext
    void setContext(java.util.Map) -> setContext
com.scoreloop.client.android.core.model.ScoreComparator -> com.scoreloop.client.android.core.model.ScoreComparator:
    boolean a -> a
    boolean b -> b
    int a(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.core.model.Score) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.scoreloop.client.android.core.model.ScoreFormatter -> com.scoreloop.client.android.core.model.ScoreFormatter:
    java.util.HashMap a -> a
    java.util.regex.Pattern b -> b
    java.util.regex.Pattern c -> c
    java.util.regex.Pattern d -> d
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.lang.String[] getDefinedModesNames(int,int) -> getDefinedModesNames
    java.lang.String formatScore(com.scoreloop.client.android.core.model.Score) -> formatScore
    java.lang.String formatScore(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey) -> formatScore
    java.lang.String a(double) -> a
    java.lang.String a(java.lang.String,double) -> a
    java.lang.String a(java.lang.String,com.scoreloop.client.android.core.model.Score) -> a
    java.util.List a(java.lang.String) -> a
    void b(java.lang.String) -> b
com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey -> com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey:
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey DefaultFormat -> DefaultFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey ScoresOnlyFormat -> ScoresOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey LevelAndModeFormat -> LevelAndModeFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey LevelOnlyFormat -> LevelOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey ModeOnlyFormat -> ModeOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey NoLevelFormat -> NoLevelFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey ScoresAndLevelFormat -> ScoresAndLevelFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a a -> a
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey[] b -> b
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey[] values() -> values
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey parse(java.lang.String) -> parse
    com.scoreloop.client.android.core.model.ScoreFormatter$a a() -> a
com.scoreloop.client.android.core.model.ScoreFormatter$a -> com.scoreloop.client.android.core.model.g:
    com.scoreloop.client.android.core.model.ScoreFormatter$a DefaultFormat -> a
    com.scoreloop.client.android.core.model.ScoreFormatter$a LevelAndModeFormat -> b
    com.scoreloop.client.android.core.model.ScoreFormatter$a LevelOnlyFormat -> c
    com.scoreloop.client.android.core.model.ScoreFormatter$a ModeOnlyFormat -> d
    com.scoreloop.client.android.core.model.ScoreFormatter$a NoLevelFormat -> e
    com.scoreloop.client.android.core.model.ScoreFormatter$a ScoresAndLevelFormat -> f
    com.scoreloop.client.android.core.model.ScoreFormatter$a ScoresOnlyFormat -> g
    com.scoreloop.client.android.core.model.ScoreFormatter$a ResultTimeConversion -> h
    com.scoreloop.client.android.core.model.ScoreFormatter$a LevelSymbol -> i
    com.scoreloop.client.android.core.model.ScoreFormatter$a ModeSymbol -> j
    com.scoreloop.client.android.core.model.ScoreFormatter$a ResultSymbol -> k
    com.scoreloop.client.android.core.model.ScoreFormatter$a MinorResultSymbol -> l
    com.scoreloop.client.android.core.model.ScoreFormatter$a Separator -> m
    com.scoreloop.client.android.core.model.ScoreFormatter$a[] a -> n
    com.scoreloop.client.android.core.model.ScoreFormatter$a[] values() -> values
    com.scoreloop.client.android.core.model.ScoreFormatter$a valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.model.ScoreFormatter$a parse(java.lang.String) -> a
com.scoreloop.client.android.core.model.ScoreSubmitException -> com.scoreloop.client.android.core.model.ScoreSubmitException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.model.SearchList -> com.scoreloop.client.android.core.model.SearchList:
    com.scoreloop.client.android.core.model.SearchList a -> a
    java.lang.String d -> d
    java.lang.String c -> c
    com.scoreloop.client.android.core.model.SearchList getBuddiesScoreSearchList() -> getBuddiesScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getDefaultScoreSearchList() -> getDefaultScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getGlobalScoreSearchList() -> getGlobalScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getLocalScoreSearchList() -> getLocalScoreSearchList
    com.scoreloop.client.android.core.model.SearchList a(java.lang.String) -> a
    com.scoreloop.client.android.core.model.SearchList getTwentyFourHourScoreSearchList() -> getTwentyFourHourScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getUserCountryLocationScoreSearchList() -> getUserCountryLocationScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getUserNationalityScoreSearchList() -> getUserNationalityScoreSearchList
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.json.JSONObject d() -> d
    java.lang.String toString() -> toString
    void a(org.json.JSONObject) -> a
    java.lang.String a() -> a
com.scoreloop.client.android.core.model.Session -> com.scoreloop.client.android.core.model.Session:
    com.scoreloop.client.android.core.model.Session a -> a
    com.scoreloop.client.android.core.model.Device b -> b
    com.scoreloop.client.android.core.model.Game c -> c
    com.scoreloop.client.android.core.model.SessionObserver d -> d
    com.scoreloop.client.android.core.server.Server e -> e
    java.lang.String f -> f
    com.scoreloop.client.android.core.model.Challenge g -> g
    java.util.List h -> h
    com.scoreloop.client.android.core.model.Session$State i -> i
    com.scoreloop.client.android.core.model.User j -> j
    android.content.Context k -> k
    java.lang.String l -> l
    long m -> m
    long n -> n
    com.scoreloop.client.android.core.model.Session getCurrentSession() -> getCurrentSession
    void a(com.scoreloop.client.android.core.model.Session) -> a
    com.scoreloop.client.android.core.model.Money getBalance() -> getBalance
    com.scoreloop.client.android.core.model.Challenge getChallenge() -> getChallenge
    java.util.List getChallengeStakes() -> getChallengeStakes
    com.scoreloop.client.android.core.model.Device a() -> a
    com.scoreloop.client.android.core.model.Game getGame() -> getGame
    com.scoreloop.client.android.core.server.Server b() -> b
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    boolean isOwnedByUser(com.scoreloop.client.android.core.model.User) -> isOwnedByUser
    java.lang.String getPaymentUrl() -> getPaymentUrl
    java.lang.String getScoreloopAppDownloadUrl() -> getScoreloopAppDownloadUrl
    boolean isAuthenticated() -> isAuthenticated
    void setChallenge(com.scoreloop.client.android.core.model.Challenge) -> setChallenge
    void a(java.util.List) -> a
    void a(com.scoreloop.client.android.core.model.Game) -> a
    void a(org.json.JSONObject) -> a
    com.scoreloop.client.android.core.model.Session$State c() -> c
    void a(com.scoreloop.client.android.core.model.Session$State) -> a
    java.util.List getScoreSearchLists() -> getScoreSearchLists
    android.content.Context d() -> d
    boolean f() -> f
    void e() -> e
    void a(android.content.Context) -> a
com.scoreloop.client.android.core.model.Session$State -> com.scoreloop.client.android.core.model.Session$State:
    com.scoreloop.client.android.core.model.Session$State AUTHENTICATED -> AUTHENTICATED
    com.scoreloop.client.android.core.model.Session$State AUTHENTICATING -> AUTHENTICATING
    com.scoreloop.client.android.core.model.Session$State TIMEOUT -> TIMEOUT
    com.scoreloop.client.android.core.model.Session$State DEVICE_KNOWN -> DEVICE_KNOWN
    com.scoreloop.client.android.core.model.Session$State DEVICE_UNKNOWN -> DEVICE_UNKNOWN
    com.scoreloop.client.android.core.model.Session$State DEVICE_VERIFIED -> DEVICE_VERIFIED
    com.scoreloop.client.android.core.model.Session$State FAILED -> FAILED
    com.scoreloop.client.android.core.model.Session$State INITIAL -> INITIAL
    com.scoreloop.client.android.core.model.Session$State READY -> READY
    com.scoreloop.client.android.core.model.Session$State[] a -> a
    com.scoreloop.client.android.core.model.Session$State[] values() -> values
    com.scoreloop.client.android.core.model.Session$State valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.model.SessionObserver -> com.scoreloop.client.android.core.model.SessionObserver:
com.scoreloop.client.android.core.model.SharedDeviceUuid -> com.scoreloop.client.android.core.model.SharedDeviceUuid:
    java.lang.String a -> a
    java.util.Date b -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.model.SharedDeviceUuidStore -> com.scoreloop.client.android.core.model.SharedDeviceUuidStore:
    java.lang.String a() -> a
    com.scoreloop.client.android.core.model.SharedDeviceUuid a(org.json.JSONObject) -> a
    org.json.JSONObject a(com.scoreloop.client.android.core.model.SharedDeviceUuid) -> a
    org.json.JSONObject a(java.lang.Object) -> a
    java.lang.Object b(org.json.JSONObject) -> b
com.scoreloop.client.android.core.model.SocialProvider -> com.scoreloop.client.android.core.model.SocialProvider:
    java.lang.String FACEBOOK_IDENTIFIER -> FACEBOOK_IDENTIFIER
    java.lang.String MYSPACE_IDENTIFIER -> MYSPACE_IDENTIFIER
    java.lang.String TWITTER_IDENTIFIER -> TWITTER_IDENTIFIER
    java.util.List a -> a
    java.lang.String[] b -> b
    com.scoreloop.client.android.core.model.SocialProvider getSocialProviderForIdentifier(java.lang.String) -> getSocialProviderForIdentifier
    java.util.List getSupportedProviders() -> getSupportedProviders
    void a(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> a
    void b(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> b
    void c(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> c
    java.lang.Class b() -> b
    java.lang.String a() -> a
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getName() -> getName
    java.lang.Integer getVersion() -> getVersion
    boolean isUserConnected(com.scoreloop.client.android.core.model.User) -> isUserConnected
    void a(com.scoreloop.client.android.core.model.User,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(com.scoreloop.client.android.core.model.User) -> a
    void d(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> d
    void e(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> e
    void f(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> f
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
    java.lang.String[] a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.model.User -> com.scoreloop.client.android.core.model.User:
    java.util.Map c -> c
    com.scoreloop.client.android.core.model.User$a d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.Integer i -> i
    java.lang.String j -> j
    java.util.List k -> k
    java.util.Map l -> l
    java.lang.Long m -> m
    com.scoreloop.client.android.core.model.User$Details n -> n
    java.util.Date o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    com.scoreloop.client.android.core.model.User$Gender r -> r
    com.scoreloop.client.android.core.model.User$a s -> s
    java.util.Date t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.Integer w -> w
    com.scoreloop.client.android.core.model.User$b x -> x
    com.scoreloop.client.android.core.model.User$a y -> y
    java.util.List z -> z
    java.util.List A -> A
    java.util.Map B -> B
    com.scoreloop.client.android.core.model.Activity C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.Integer I -> I
    java.lang.Integer J -> J
    java.lang.Integer K -> K
    boolean L -> L
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Entity a(com.scoreloop.client.android.core.model.Session,java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    com.scoreloop.client.android.core.model.Money c() -> c
    java.util.Map getContext() -> getContext
    com.scoreloop.client.android.core.model.User$Details getDetail() -> getDetail
    java.util.List getBuddyUsers() -> getBuddyUsers
    java.util.Date getDateOfBirth() -> getDateOfBirth
    java.lang.String e() -> e
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getEmailAddress() -> getEmailAddress
    void a(java.lang.Object) -> a
    java.lang.String getLogin() -> getLogin
    java.util.Date getLastActiveAt() -> getLastActiveAt
    com.scoreloop.client.android.core.model.Activity getLastActivity() -> getLastActivity
    java.util.List f() -> f
    java.lang.Integer getSkillValue() -> getSkillValue
    int hashCode() -> hashCode
    boolean isAuthenticated() -> isAuthenticated
    boolean isActive() -> isActive
    boolean isAnonymous() -> isAnonymous
    boolean isPassive() -> isPassive
    boolean isPending() -> isPending
    boolean isConnectedToSocialProviderWithIdentifier(java.lang.String) -> isConnectedToSocialProviderWithIdentifier
    boolean isChallengable() -> isChallengable
    void a(boolean) -> a
    void setContext(java.util.Map) -> setContext
    void setDateOfBirth(java.util.Date) -> setDateOfBirth
    void a(java.lang.String) -> a
    void setEmailAddress(java.lang.String) -> setEmailAddress
    void setLogin(java.lang.String) -> setLogin
    void setPassword(java.lang.String) -> setPassword
    boolean c(java.lang.String) -> c
    org.json.JSONObject d(java.lang.String) -> d
    void a(org.json.JSONObject,java.lang.String) -> a
    org.json.JSONObject g() -> g
    org.json.JSONObject d() -> d
    void a(org.json.JSONObject,boolean) -> a
    void a(org.json.JSONObject) -> a
    java.lang.Integer i() -> i
    java.lang.String j() -> j
    com.scoreloop.client.android.core.model.User$b k() -> k
    boolean ownsSession(com.scoreloop.client.android.core.model.Session) -> ownsSession
    com.scoreloop.client.android.core.model.ImageSource e(java.lang.String) -> e
    com.scoreloop.client.android.core.model.ImageSource getImageSource() -> getImageSource
    void setImageSource(java.lang.String) -> setImageSource
    void setImageSource(com.scoreloop.client.android.core.model.ImageSource) -> setImageSource
    java.lang.String getImageUrl() -> getImageUrl
    java.lang.Long h() -> h
    void a(java.lang.Long) -> a
    void b(java.lang.String) -> b
    java.lang.String a() -> a
    void setImageData(java.lang.String) -> setImageData
    void setImageMimeType(java.lang.String) -> setImageMimeType
    java.lang.Integer getGamesCounter() -> getGamesCounter
    java.lang.Integer getBuddiesCounter() -> getBuddiesCounter
    java.lang.Integer getGlobalAchievementsCounter() -> getGlobalAchievementsCounter
com.scoreloop.client.android.core.model.User$Details -> com.scoreloop.client.android.core.model.User$Details:
    java.lang.Double b -> b
    java.lang.Integer c -> c
    java.lang.Integer d -> d
    com.scoreloop.client.android.core.model.User a -> a
    void a(org.json.JSONObject) -> a
    java.lang.Double getWinningProbability() -> getWinningProbability
    java.lang.Integer getChallengesWon() -> getChallengesWon
    java.lang.Integer getChallengesLost() -> getChallengesLost
com.scoreloop.client.android.core.model.User$Gender -> com.scoreloop.client.android.core.model.User$Gender:
    com.scoreloop.client.android.core.model.User$Gender FEMALE -> FEMALE
    com.scoreloop.client.android.core.model.User$Gender MALE -> MALE
    com.scoreloop.client.android.core.model.User$Gender UNKNOWN -> UNKNOWN
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.User$Gender[] b -> b
    com.scoreloop.client.android.core.model.User$Gender[] values() -> values
    com.scoreloop.client.android.core.model.User$Gender valueOf(java.lang.String) -> valueOf
    java.lang.String getJSONString() -> getJSONString
com.scoreloop.client.android.core.model.User$a -> com.scoreloop.client.android.core.model.f:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.scoreloop.client.android.core.model.User$b -> com.scoreloop.client.android.core.model.e:
    com.scoreloop.client.android.core.model.User$b anonymous -> a
    com.scoreloop.client.android.core.model.User$b active -> b
    com.scoreloop.client.android.core.model.User$b deleted -> c
    com.scoreloop.client.android.core.model.User$b passive -> d
    com.scoreloop.client.android.core.model.User$b pending -> e
    com.scoreloop.client.android.core.model.User$b suspended -> f
    com.scoreloop.client.android.core.model.User$b[] a -> g
    com.scoreloop.client.android.core.model.User$b[] values() -> values
    com.scoreloop.client.android.core.model.User$b valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.model.a -> com.scoreloop.client.android.core.model.a:
    java.lang.Object a -> a
    java.lang.Object b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    java.util.regex.Pattern e -> e
    byte[] a(java.lang.String) -> a
    com.scoreloop.client.android.core.model.AwardList a(java.lang.String,java.lang.String) -> a
    android.graphics.Bitmap c(java.lang.String,java.lang.String) -> b
    java.io.InputStream d(java.lang.String,java.lang.String) -> c
    boolean b(java.lang.String) -> b
    int a(java.io.InputStream,byte[]) -> a
    void d(java.lang.String) -> c
com.scoreloop.client.android.core.model.b -> com.scoreloop.client.android.core.model.b:
    java.util.List b -> a
    android.content.Context a -> b
    long c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    void a(com.scoreloop.client.android.core.model.SharedDeviceUuidStore,com.scoreloop.client.android.core.model.SharedDeviceUuidStore,com.scoreloop.client.android.core.model.SharedDeviceUuid) -> a
    boolean c() -> c
    com.scoreloop.client.android.core.model.SharedDeviceUuid d() -> d
    java.lang.String f() -> e
com.scoreloop.client.android.core.model.c -> com.scoreloop.client.android.core.model.c:
    java.lang.String getName() -> getName
com.scoreloop.client.android.core.model.d -> com.scoreloop.client.android.core.model.d:
    java.lang.String getName() -> getName
com.scoreloop.client.android.core.persistence.DbAchievementsStore -> com.scoreloop.client.android.core.persistence.DbAchievementsStore:
    com.scoreloop.client.android.core.util.CryptoUtil a -> a
    com.scoreloop.client.android.core.persistence.DbAchievementsStore$a b -> b
    void a(com.scoreloop.client.android.core.model.Achievement) -> a
    void a(com.scoreloop.client.android.core.model.Achievement,android.database.sqlite.SQLiteDatabase) -> a
    boolean a() -> a
    void b() -> b
    void a(android.database.sqlite.SQLiteDatabase,boolean) -> a
    android.content.ContentValues b(com.scoreloop.client.android.core.model.Achievement) -> b
    java.util.List a(com.scoreloop.client.android.core.model.Award) -> a
    boolean a(com.scoreloop.client.android.core.model.Achievement,android.database.Cursor) -> a
    java.lang.Boolean a(int) -> a
    java.lang.Long c(com.scoreloop.client.android.core.model.Achievement) -> c
    boolean a(java.util.Date,java.util.Date) -> a
    boolean a(java.lang.Object,java.lang.Object) -> a
    com.scoreloop.client.android.core.model.Achievement a(java.lang.String,com.scoreloop.client.android.core.model.Award) -> a
    java.lang.String d(com.scoreloop.client.android.core.model.Achievement) -> d
    void a(com.scoreloop.client.android.core.persistence.DbAchievementsStore,com.scoreloop.client.android.core.model.Achievement,android.database.sqlite.SQLiteDatabase) -> a
    void a(com.scoreloop.client.android.core.persistence.DbAchievementsStore,android.database.sqlite.SQLiteDatabase,boolean) -> a
com.scoreloop.client.android.core.persistence.DbAchievementsStore$a -> com.scoreloop.client.android.core.persistence.b:
    android.content.Context b -> a
    com.scoreloop.client.android.core.model.AwardList c -> b
    java.lang.String d -> c
    com.scoreloop.client.android.core.persistence.a e -> d
    com.scoreloop.client.android.core.persistence.DbAchievementsStore a -> e
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void b(android.database.sqlite.SQLiteDatabase) -> a
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.scoreloop.client.android.core.persistence.LocalScoreStore -> com.scoreloop.client.android.core.persistence.LocalScoreStore:
    com.scoreloop.client.android.core.util.CryptoUtil a -> a
    com.scoreloop.client.android.core.persistence.LocalScoreStore$a b -> b
    android.database.sqlite.SQLiteDatabase c -> c
    com.scoreloop.client.android.core.model.User d -> d
    void a(com.scoreloop.client.android.core.model.Score) -> a
    void a() -> a
    android.content.ContentValues c(com.scoreloop.client.android.core.model.Score) -> c
    java.util.List a(java.lang.Integer) -> a
    void b() -> b
    void b(com.scoreloop.client.android.core.model.Score) -> b
com.scoreloop.client.android.core.persistence.LocalScoreStore$a -> com.scoreloop.client.android.core.persistence.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.scoreloop.client.android.core.persistence.a -> com.scoreloop.client.android.core.persistence.c:
    android.content.Context a -> a
    java.lang.String b -> b
    com.scoreloop.client.android.core.util.CryptoUtil c -> c
    void c() -> c
    boolean a() -> a
    java.lang.String d() -> d
    java.lang.String f() -> e
    void a(com.scoreloop.client.android.core.model.Achievement) -> a
    java.lang.String b(com.scoreloop.client.android.core.model.Achievement) -> b
    java.util.List a(com.scoreloop.client.android.core.model.Award) -> a
    com.scoreloop.client.android.core.model.Achievement a(java.lang.String,com.scoreloop.client.android.core.model.Award) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void b() -> b
com.scoreloop.client.android.core.server.BayeuxConnectionObserver -> com.scoreloop.client.android.core.server.BayeuxConnectionObserver:
    void a$31a6897e(java.lang.Integer,java.lang.Object,java.lang.String,int) -> a
    org.json.JSONObject b$381b0650(org.json.JSONObject) -> a
com.scoreloop.client.android.core.server.BayeuxConnectionObserver$SecureBayeuxConnectionObserver -> com.scoreloop.client.android.core.server.BayeuxConnectionObserver$SecureBayeuxConnectionObserver:
com.scoreloop.client.android.core.server.Request -> com.scoreloop.client.android.core.server.Request:
    int a -> a
    com.scoreloop.client.android.core.server.RequestCompletionCallback b -> b
    java.lang.String c -> c
    org.json.JSONObject d -> d
    java.lang.Exception e -> e
    org.json.JSONObject f -> f
    int h -> h
    com.scoreloop.client.android.core.server.RequestMethod i -> i
    com.scoreloop.client.android.core.server.Response j -> j
    com.scoreloop.client.android.core.server.Request$State k -> k
    long l -> l
    java.lang.Object m -> m
    boolean g -> g
    int e() -> e
    com.scoreloop.client.android.core.server.RequestCompletionCallback f() -> f
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    java.lang.Exception g() -> g
    org.json.JSONObject h() -> h
    int i() -> i
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
    com.scoreloop.client.android.core.server.Response j() -> j
    com.scoreloop.client.android.core.server.Request$State k() -> k
    java.lang.Object l() -> l
    boolean m() -> m
    void n() -> n
    void a(com.scoreloop.client.android.core.server.Response) -> a
    void a(java.lang.Exception) -> a
    void o() -> o
    void p() -> p
    void a(org.json.JSONObject) -> a
    void a(java.lang.Object) -> a
    java.lang.String q() -> q
    void a(long) -> a
    long r() -> r
com.scoreloop.client.android.core.server.Request$State -> com.scoreloop.client.android.core.server.Request$State:
    com.scoreloop.client.android.core.server.Request$State CANCELLED -> CANCELLED
    com.scoreloop.client.android.core.server.Request$State COMPLETED -> COMPLETED
    com.scoreloop.client.android.core.server.Request$State ENQUEUED -> ENQUEUED
    com.scoreloop.client.android.core.server.Request$State EXECUTING -> EXECUTING
    com.scoreloop.client.android.core.server.Request$State FAILED -> FAILED
    com.scoreloop.client.android.core.server.Request$State IDLE -> IDLE
    com.scoreloop.client.android.core.server.Request$State[] a -> a
    com.scoreloop.client.android.core.server.Request$State[] values() -> values
    com.scoreloop.client.android.core.server.Request$State valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.server.RequestCompletionCallback -> com.scoreloop.client.android.core.server.RequestCompletionCallback:
    void a(com.scoreloop.client.android.core.server.Request) -> a
    void b(com.scoreloop.client.android.core.server.Request) -> b
com.scoreloop.client.android.core.server.RequestMethod -> com.scoreloop.client.android.core.server.RequestMethod:
    com.scoreloop.client.android.core.server.RequestMethod DELETE -> DELETE
    com.scoreloop.client.android.core.server.RequestMethod GET -> GET
    com.scoreloop.client.android.core.server.RequestMethod POST -> POST
    com.scoreloop.client.android.core.server.RequestMethod PUT -> PUT
    java.lang.String a -> a
    com.scoreloop.client.android.core.server.RequestMethod[] b -> b
    com.scoreloop.client.android.core.server.RequestMethod[] values() -> values
    com.scoreloop.client.android.core.server.RequestMethod valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.server.Response -> com.scoreloop.client.android.core.server.Response:
    java.lang.String a -> a
    java.lang.Object b -> b
    int c -> c
    java.lang.Integer d -> d
    boolean e -> e
    java.lang.Object a() -> a
    java.lang.Integer b() -> b
    boolean c() -> c
    org.json.JSONArray d() -> d
    org.json.JSONObject e() -> e
    int f() -> f
com.scoreloop.client.android.core.server.Server -> com.scoreloop.client.android.core.server.Server:
    java.net.URL b -> b
    com.scoreloop.client.android.core.server.g c -> c
    com.scoreloop.client.android.core.server.Server$a d -> d
    com.scoreloop.client.android.core.server.a e -> e
    com.scoreloop.client.android.core.server.Request f -> f
    java.util.LinkedList g -> g
    com.scoreloop.client.android.core.util.Cache h -> h
    boolean i -> i
    boolean a -> a
    void a() -> a
    com.scoreloop.client.android.core.server.Request c(com.scoreloop.client.android.core.server.Request) -> c
    void a(com.scoreloop.client.android.core.server.Request) -> a
    void b(com.scoreloop.client.android.core.server.Request) -> b
    void a(org.json.JSONObject) -> a
    void c() -> c
    void d() -> d
    void d(com.scoreloop.client.android.core.server.Request) -> d
    java.net.URL b() -> b
    void finalize() -> finalize
    void a(java.lang.String) -> a
    com.scoreloop.client.android.core.server.Request a(com.scoreloop.client.android.core.server.Server) -> a
    com.scoreloop.client.android.core.server.Request a(com.scoreloop.client.android.core.server.Server,com.scoreloop.client.android.core.server.Request) -> a
    com.scoreloop.client.android.core.util.Cache b(com.scoreloop.client.android.core.server.Server) -> b
    void c(com.scoreloop.client.android.core.server.Server) -> c
com.scoreloop.client.android.core.server.Server$1 -> com.scoreloop.client.android.core.server.j:
    com.scoreloop.client.android.core.server.Request a -> a
    com.scoreloop.client.android.core.server.Server b -> b
    void run() -> run
com.scoreloop.client.android.core.server.Server$a -> com.scoreloop.client.android.core.server.i:
    com.scoreloop.client.android.core.server.Server a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.scoreloop.client.android.core.server.a -> com.scoreloop.client.android.core.server.h:
    java.lang.String a -> a
    java.lang.Boolean b -> b
    com.scoreloop.client.android.core.server.e c -> c
    com.scoreloop.client.android.core.server.BayeuxConnectionObserver d -> d
    java.lang.String e -> e
    java.net.URI f -> f
    void a(com.scoreloop.client.android.core.server.a$a,org.json.JSONObject) -> a
    void a(com.scoreloop.client.android.core.server.a$a) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    com.scoreloop.client.android.core.server.e a(com.scoreloop.client.android.core.server.a) -> a
com.scoreloop.client.android.core.server.a$a -> com.scoreloop.client.android.core.server.a:
    org.apache.http.client.methods.HttpPost f -> e
    int a -> a
    java.lang.String b -> b
    org.json.JSONObject c -> c
    org.json.JSONObject d -> d
    com.scoreloop.client.android.core.server.a e -> f
    org.apache.http.client.methods.HttpPost b() -> b
    void a(int,java.lang.String,org.json.JSONObject,org.json.JSONObject) -> a
    void a() -> a
    org.apache.http.client.methods.HttpPost a(com.scoreloop.client.android.core.server.a$a) -> a
com.scoreloop.client.android.core.server.b -> com.scoreloop.client.android.core.server.g:
com.scoreloop.client.android.core.server.c -> com.scoreloop.client.android.core.server.f:
com.scoreloop.client.android.core.server.d -> com.scoreloop.client.android.core.server.e:
com.scoreloop.client.android.core.server.e -> com.scoreloop.client.android.core.server.d:
    org.apache.http.client.HttpClient a -> a
    java.lang.String b -> b
    java.net.URI c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    org.json.JSONArray a(org.apache.http.client.methods.HttpPost,java.lang.Object) -> a
    void a(java.lang.String,java.lang.String) -> a
    org.apache.http.client.methods.HttpPost a() -> b
    byte[] a(org.apache.http.client.methods.HttpPost,byte[]) -> a
    java.lang.String a(org.apache.http.client.methods.HttpPost,java.lang.String) -> a
    org.json.JSONArray a(org.apache.http.client.methods.HttpPost,org.json.JSONArray) -> a
    java.lang.String b() -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
com.scoreloop.client.android.core.server.f -> com.scoreloop.client.android.core.server.c:
    javax.crypto.Cipher a -> a
    byte[] b -> b
    java.lang.String b() -> a
    java.lang.String a(org.apache.http.client.methods.HttpPost,java.lang.String) -> a
com.scoreloop.client.android.core.server.g -> com.scoreloop.client.android.core.server.b:
    boolean a -> a
    boolean b -> b
    android.os.Handler c -> c
    com.scoreloop.client.android.core.server.a d -> d
    com.scoreloop.client.android.core.server.Request e -> e
    com.scoreloop.client.android.core.server.a$a f -> f
    boolean g -> g
    org.json.JSONObject h -> h
    int i -> i
    void a() -> a
    void a$31a6897e(java.lang.Integer,java.lang.Object,java.lang.String,int) -> a
    org.json.JSONObject b$381b0650(org.json.JSONObject) -> a
    void run() -> run
    void a(com.scoreloop.client.android.core.server.Response,int,java.lang.Exception) -> a
    void b() -> b
    void a(com.scoreloop.client.android.core.server.a) -> a
    void a(org.json.JSONObject) -> b
    void a(com.scoreloop.client.android.core.server.Request) -> a
com.scoreloop.client.android.core.settings.CommonSettings -> com.scoreloop.client.android.core.settings.CommonSettings:
com.scoreloop.client.android.core.settings.Settings -> com.scoreloop.client.android.core.settings.Settings:
    java.lang.String a -> a
com.scoreloop.client.android.core.settings.Settings$Facebook -> com.scoreloop.client.android.core.settings.Settings$Facebook:
com.scoreloop.client.android.core.settings.Settings$Myspace -> com.scoreloop.client.android.core.settings.Settings$Myspace:
com.scoreloop.client.android.core.settings.Settings$Twitter -> com.scoreloop.client.android.core.settings.Settings$Twitter:
com.scoreloop.client.android.core.spi.AuthRequest -> com.scoreloop.client.android.core.spi.AuthRequest:
    com.scoreloop.client.android.core.spi.AuthRequestDelegate a -> a
    com.scoreloop.client.android.core.spi.AuthRequestDelegate a() -> a
    void a(org.apache.http.client.methods.HttpUriRequest) -> a
    void a(org.apache.http.HttpResponse) -> a
    void a(org.apache.http.HttpResponse,java.lang.Throwable) -> a
com.scoreloop.client.android.core.spi.AuthRequestDelegate -> com.scoreloop.client.android.core.spi.AuthRequestDelegate:
    void a(com.scoreloop.client.android.core.spi.AuthRequest) -> a
    void a(com.scoreloop.client.android.core.spi.AuthRequest,java.lang.Throwable) -> a
com.scoreloop.client.android.core.spi.AuthViewController -> com.scoreloop.client.android.core.spi.AuthViewController:
    com.scoreloop.client.android.core.spi.AuthViewController$Observer a -> a
    com.scoreloop.client.android.core.model.Session b -> b
    com.scoreloop.client.android.core.spi.AuthViewController$Observer a() -> a
com.scoreloop.client.android.core.spi.AuthViewController$Observer -> com.scoreloop.client.android.core.spi.AuthViewController$Observer:
    void a(java.lang.Throwable) -> a
    void b() -> b
    void c() -> c
    void b_() -> b_
com.scoreloop.client.android.core.spi.BaseAuthActivity -> com.scoreloop.client.android.core.spi.BaseAuthActivity:
com.scoreloop.client.android.core.spi.myspace.MySpaceSocialProvider -> com.scoreloop.client.android.core.spi.myspace.MySpaceSocialProvider:
    java.lang.Class b() -> b
    java.lang.String getIdentifier() -> getIdentifier
com.scoreloop.client.android.core.spi.myspace.MySpaceSocialProviderController -> com.scoreloop.client.android.core.spi.myspace.MySpaceSocialProviderController:
    com.scoreloop.client.android.core.spi.myspace.a b -> b
    void a() -> a
    void b_() -> b_
    void c() -> c
    void a(java.lang.Throwable) -> a
    void b() -> b
com.scoreloop.client.android.core.spi.myspace.a -> com.scoreloop.client.android.core.spi.myspace.i:
    android.app.Activity a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.scoreloop.client.android.core.spi.myspace.c e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a(android.app.Activity) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void a(java.lang.String,java.lang.String,org.apache.http.client.methods.HttpPut) -> a
    void a(java.lang.Exception) -> a
    org.apache.http.client.methods.HttpPut b(java.lang.String) -> b
    org.apache.http.client.methods.HttpPut a$28a49eae(java.lang.String) -> a
    void a(com.scoreloop.client.android.core.spi.myspace.a,java.lang.String,java.lang.String,org.apache.http.client.methods.HttpPut) -> a
    com.scoreloop.client.android.core.spi.myspace.c a(com.scoreloop.client.android.core.spi.myspace.a) -> a
    void b(com.scoreloop.client.android.core.spi.myspace.a,java.lang.String) -> a
com.scoreloop.client.android.core.spi.myspace.a$1 -> com.scoreloop.client.android.core.spi.myspace.d:
    com.scoreloop.client.android.core.spi.myspace.a a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
com.scoreloop.client.android.core.spi.myspace.a$2 -> com.scoreloop.client.android.core.spi.myspace.e:
    com.scoreloop.client.android.core.spi.myspace.a a -> a
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.spi.myspace.b -> com.scoreloop.client.android.core.spi.myspace.h:
    java.lang.String a -> a
    com.scoreloop.client.android.core.spi.myspace.b$a b -> b
    void onStart() -> onStart
    com.scoreloop.client.android.core.spi.myspace.b$a a(com.scoreloop.client.android.core.spi.myspace.b) -> a
com.scoreloop.client.android.core.spi.myspace.b$1 -> com.scoreloop.client.android.core.spi.myspace.g:
    android.widget.EditText a -> a
    com.scoreloop.client.android.core.spi.myspace.b b -> b
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.core.spi.myspace.b$a -> com.scoreloop.client.android.core.spi.myspace.f:
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.spi.myspace.c -> com.scoreloop.client.android.core.spi.myspace.j:
    com.scoreloop.client.android.core.spi.myspace.c$a a -> a
    void onStart() -> onStart
    com.scoreloop.client.android.core.spi.myspace.c$a a(com.scoreloop.client.android.core.spi.myspace.c) -> a
com.scoreloop.client.android.core.spi.myspace.c$1 -> com.scoreloop.client.android.core.spi.myspace.a:
    com.scoreloop.client.android.core.spi.myspace.c a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.scoreloop.client.android.core.spi.myspace.c$2 -> com.scoreloop.client.android.core.spi.myspace.b:
    android.widget.EditText a -> a
    android.widget.EditText b -> b
    com.scoreloop.client.android.core.spi.myspace.c c -> c
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.core.spi.myspace.c$a -> com.scoreloop.client.android.core.spi.myspace.c:
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProvider -> com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProvider:
    java.lang.Class b() -> b
    java.lang.String getIdentifier() -> getIdentifier
com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController -> com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController:
    java.lang.String[] b -> b
    void a() -> a
    com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProvider f() -> f
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver a(com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController) -> a
    com.scoreloop.client.android.core.model.User b(com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController) -> b
    com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProvider c(com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController) -> c
    void a(com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController,com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode) -> a
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver d(com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController) -> d
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver e(com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController) -> e
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver f(com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController) -> f
com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController$1 -> com.scoreloop.client.android.core.spi.oauthfacebook.a:
    com.facebook.android.b a -> a
    com.scoreloop.client.android.core.spi.oauthfacebook.OAuthFacebookSocialProviderController b -> b
    void a() -> a
    void a(android.os.Bundle) -> a
    void a(com.facebook.android.a) -> a
    void a(com.facebook.android.c) -> a
com.scoreloop.client.android.core.spi.twitter.TwitterSocialProvider -> com.scoreloop.client.android.core.spi.twitter.TwitterSocialProvider:
    java.lang.Class b() -> b
    java.lang.String getIdentifier() -> getIdentifier
com.scoreloop.client.android.core.spi.twitter.TwitterSocialProviderController -> com.scoreloop.client.android.core.spi.twitter.TwitterSocialProviderController:
    com.scoreloop.client.android.core.spi.twitter.b b -> b
    com.scoreloop.client.android.core.spi.twitter.c c -> c
    com.scoreloop.client.android.core.spi.twitter.b d -> d
    void a() -> a
    void a(com.scoreloop.client.android.core.spi.AuthRequest) -> a
    void a(com.scoreloop.client.android.core.spi.AuthRequest,java.lang.Throwable) -> a
    void b() -> b
    void a(java.lang.Throwable) -> a
    void c() -> c
    void b_() -> b_
com.scoreloop.client.android.core.spi.twitter.a -> com.scoreloop.client.android.core.spi.twitter.a:
    com.scoreloop.client.android.core.spi.twitter.c a -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void c() -> c
    void d() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.scoreloop.client.android.core.spi.twitter.b -> com.scoreloop.client.android.core.spi.twitter.c:
    org.json.JSONObject a -> a
    void b() -> b
    void a(org.apache.http.HttpResponse,java.lang.Throwable) -> a
    void a(org.apache.http.HttpResponse) -> a
    void a(int,java.lang.String) -> a
    void a(java.lang.Throwable) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    void a(java.lang.String,java.lang.String) -> a
com.scoreloop.client.android.core.spi.twitter.c -> com.scoreloop.client.android.core.spi.twitter.b:
    java.lang.String b -> a
    com.scoreloop.client.android.core.spi.twitter.a a -> b
    java.lang.String b() -> b
    void a(android.app.Activity) -> a
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.spi.twitter.c$1 -> com.scoreloop.client.android.core.spi.twitter.e:
    com.scoreloop.client.android.core.spi.twitter.c a -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.scoreloop.client.android.core.spi.twitter.c$2 -> com.scoreloop.client.android.core.spi.twitter.d:
    com.scoreloop.client.android.core.spi.twitter.c a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.scoreloop.client.android.core.ui.PaymentDialog -> com.scoreloop.client.android.core.ui.PaymentDialog:
    java.lang.String a -> a
    void onStart() -> onStart
    void a(android.webkit.WebView,java.lang.String) -> a
com.scoreloop.client.android.core.ui.ScoreloopCustomDialog -> com.scoreloop.client.android.core.ui.ScoreloopCustomDialog:
com.scoreloop.client.android.core.ui.WebViewDialog -> com.scoreloop.client.android.core.ui.WebViewDialog:
    android.webkit.WebView a -> a
    android.webkit.WebViewClient b -> b
    void c() -> c
    void a(java.lang.String) -> a
    void a() -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View a(android.content.Context,android.view.View) -> a
    void b() -> b
    void a(android.webkit.WebSettings) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
com.scoreloop.client.android.core.ui.WebViewDialog$a -> com.scoreloop.client.android.core.ui.a:
    com.scoreloop.client.android.core.ui.WebViewDialog a -> a
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
com.scoreloop.client.android.core.util.Base64 -> com.scoreloop.client.android.core.util.Base64:
    byte[] b -> b
    byte[] c -> c
    byte[] d -> d
    byte[] e -> e
    byte[] f -> f
    byte[] g -> g
    boolean a -> a
    byte[] a(byte[],int,int,int) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(java.lang.String,int) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[],int,int,int) -> b
    byte[] c(byte[],int,int,int) -> c
    int b(byte[],int,byte[],int,int) -> b
    byte[] b(byte[],byte[],int,int) -> b
    byte[] a(byte[],int,int,byte[],int,int) -> a
    byte[] b(int) -> b
    byte[] c(int) -> c
    byte[] a(int) -> a
    int a(byte[],int,byte[],int,int) -> a
    byte[] a(byte[],byte[],int,int) -> a
com.scoreloop.client.android.core.util.Base64$a -> com.scoreloop.client.android.core.util.b:
    byte[] a -> a
    boolean b -> b
    byte[] c -> c
    int d -> d
    byte[] e -> e
    boolean f -> f
    int g -> g
    int h -> h
    int i -> i
    boolean j -> j
    void close() -> close
    void write(byte[],int,int) -> write
    void write(int) -> write
com.scoreloop.client.android.core.util.Cache -> com.scoreloop.client.android.core.util.Cache:
    int a -> a
    long b -> b
    java.util.HashMap c -> c
    java.util.concurrent.ConcurrentHashMap d -> d
    android.os.Handler e -> e
    java.lang.Runnable f -> f
    void c() -> c
    void d() -> d
    void a() -> a
    void a(long) -> a
    void a(java.lang.Object,java.lang.Object,long) -> a
    java.lang.Object a(java.lang.Object) -> a
    void b() -> b
    int a(com.scoreloop.client.android.core.util.Cache) -> a
    java.util.concurrent.ConcurrentHashMap b(com.scoreloop.client.android.core.util.Cache) -> b
com.scoreloop.client.android.core.util.Cache$1 -> com.scoreloop.client.android.core.util.d:
    com.scoreloop.client.android.core.util.Cache a -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.scoreloop.client.android.core.util.Cache$a -> com.scoreloop.client.android.core.util.c:
    long b -> a
    long c -> b
    java.lang.Object d -> c
    com.scoreloop.client.android.core.util.Cache a -> d
    long a() -> a
    long b() -> b
    java.lang.Object c() -> c
com.scoreloop.client.android.core.util.CryptoUtil -> com.scoreloop.client.android.core.util.CryptoUtil:
    javax.crypto.Cipher a -> a
    byte[] b -> b
    javax.crypto.spec.SecretKeySpec c -> c
    byte[] a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(byte[]) -> a
    javax.crypto.Cipher a() -> a
com.scoreloop.client.android.core.util.FileStore -> com.scoreloop.client.android.core.util.FileStore:
    android.content.Context a -> a
    com.scoreloop.client.android.core.util.CryptoUtil b -> b
    java.lang.String a() -> a
    java.lang.Object b(org.json.JSONObject) -> b
    org.json.JSONObject a(java.lang.Object) -> a
    com.scoreloop.client.android.core.util.CryptoUtil c() -> c
    java.io.File d() -> d
    java.lang.Object b() -> b
    boolean b(java.lang.Object) -> b
    boolean a(byte[]) -> a
    boolean a(java.io.File) -> a
    byte[] e() -> e
com.scoreloop.client.android.core.util.Formats -> com.scoreloop.client.android.core.util.Formats:
    java.text.SimpleDateFormat a -> a
    java.text.SimpleDateFormat b -> b
com.scoreloop.client.android.core.util.HTTPUtils -> com.scoreloop.client.android.core.util.HTTPUtils:
    java.lang.String a(org.apache.http.HttpResponse) -> a
    java.io.InputStream b(org.apache.http.HttpResponse) -> b
    java.io.InputStream a(java.lang.String) -> a
    java.io.InputStream a(java.net.URL) -> a
com.scoreloop.client.android.core.util.JSONUtils -> com.scoreloop.client.android.core.util.JSONUtils:
    java.util.Map a(org.json.JSONObject) -> a
    org.json.JSONObject a(java.util.Map) -> a
    java.util.Map b(org.json.JSONObject) -> b
    java.util.List a(org.json.JSONArray) -> a
    java.lang.Object a(java.lang.Object) -> a
    java.lang.String a(java.lang.Double) -> a
com.scoreloop.client.android.core.util.Logger -> com.scoreloop.client.android.core.util.Logger:
    java.lang.String a -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Object) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.String) -> b
    void a(org.json.JSONArray) -> a
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
com.scoreloop.client.android.core.util.OAuthBuilder -> com.scoreloop.client.android.core.util.OAuthBuilder:
    java.util.Random a -> a
    java.lang.String b -> b
    java.net.URL c -> c
    java.lang.String d -> d
    java.util.Map e -> e
    java.lang.String f -> f
    java.lang.String a(byte[],byte[]) -> a
    java.util.List a(java.util.Map) -> a
    java.lang.String c(java.lang.String) -> c
    org.apache.http.client.methods.HttpGet a(java.lang.String,java.lang.String) -> a
    org.apache.http.client.methods.HttpPut b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String) -> a
    void d(java.lang.String) -> d
    void a(java.net.URL) -> a
    void b(java.lang.String) -> b
    java.net.URL a(java.lang.String,java.util.Map) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.util.Map e() -> e
    java.net.URL f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    void c(java.lang.String,java.lang.String) -> c
    void i() -> i
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
com.scoreloop.client.android.core.util.PlistParser -> com.scoreloop.client.android.core.util.PlistParser:
    java.lang.Integer a(java.lang.Object) -> a
    java.util.List b(java.lang.Object) -> b
    java.util.Map c(java.lang.Object) -> c
    java.lang.String d(java.lang.Object) -> d
    java.lang.Object a(java.io.InputStream) -> a
    java.util.List a(org.w3c.dom.Node) -> a
    java.lang.Object b(org.w3c.dom.Node) -> b
    java.lang.Integer c(org.w3c.dom.Node) -> c
    java.lang.Object d(org.w3c.dom.Node) -> d
    java.lang.String e(org.w3c.dom.Node) -> e
com.scoreloop.client.android.core.util.SetterIntent -> com.scoreloop.client.android.core.util.SetterIntent:
    boolean a -> a
    boolean b -> b
    java.lang.Object c -> c
    java.lang.Boolean d -> d
    boolean a(org.json.JSONObject,java.lang.String) -> a
    boolean b(org.json.JSONObject,java.lang.String) -> b
    java.lang.Integer a(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$KeyMode,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> a
    org.json.JSONObject b(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$KeyMode,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> b
    java.lang.Object a(com.scoreloop.client.android.core.util.SetterIntent$KeyMode,java.lang.Object) -> a
    java.lang.Long c(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$KeyMode,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> c
    java.lang.String d(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$KeyMode,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> d
    java.lang.Object a() -> a
    void c() -> c
    void a(java.lang.Object) -> a
    void a(java.lang.Object,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> a
    void a(boolean,boolean,java.lang.Boolean,java.lang.Object) -> a
    boolean a(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> a
    boolean b(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> b
    boolean c(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> c
    boolean d(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> d
    boolean e(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> e
    boolean f(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> f
    boolean g(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> g
    boolean h(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> h
    java.lang.Boolean b() -> b
com.scoreloop.client.android.core.util.SetterIntent$KeyMode -> com.scoreloop.client.android.core.util.SetterIntent$KeyMode:
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode COERCE_NULL_WHEN_NO_KEY -> COERCE_NULL_WHEN_NO_KEY
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode THROWS_WHEN_NO_KEY -> THROWS_WHEN_NO_KEY
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode USE_NULL_WHEN_NO_KEY -> USE_NULL_WHEN_NO_KEY
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode[] a -> a
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode[] values() -> values
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.util.SetterIntent$ValueMode -> com.scoreloop.client.android.core.util.SetterIntent$ValueMode:
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode ALLOWS_AND_COERCES_NULL_VALUE -> ALLOWS_AND_COERCES_NULL_VALUE
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode ALLOWS_NULL_VALUE -> ALLOWS_NULL_VALUE
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode REQUIRES_NON_NULL_VALUE -> REQUIRES_NON_NULL_VALUE
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode[] a -> a
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode[] values() -> values
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.util.StringsParser -> com.scoreloop.client.android.core.util.StringsParser:
    java.util.Map a(java.io.InputStream) -> a
com.scoreloop.client.android.core.util.a -> com.scoreloop.client.android.core.util.a:
    com.scoreloop.client.android.core.util.Cache a -> a
    void run() -> run
com.scoreloop.client.android.ui.AchievementsScreenActivity -> com.scoreloop.client.android.ui.AchievementsScreenActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.BuddiesScreenActivity -> com.scoreloop.client.android.ui.BuddiesScreenActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.ChallengesScreenActivity -> com.scoreloop.client.android.ui.ChallengesScreenActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.EntryScreenActivity -> com.scoreloop.client.android.ui.EntryScreenActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.LeaderboardsScreenActivity -> com.scoreloop.client.android.ui.LeaderboardsScreenActivity:
    java.lang.String LEADERBOARD -> LEADERBOARD
    int LEADERBOARD_24h -> LEADERBOARD_24h
    int LEADERBOARD_FRIENDS -> LEADERBOARD_FRIENDS
    int LEADERBOARD_GLOBAL -> LEADERBOARD_GLOBAL
    int LEADERBOARD_LOCAL -> LEADERBOARD_LOCAL
    java.lang.String MODE -> MODE
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.OnCanStartGamePlayObserver -> com.scoreloop.client.android.ui.OnCanStartGamePlayObserver:
    boolean onCanStartGamePlay() -> onCanStartGamePlay
com.scoreloop.client.android.ui.OnScoreSubmitObserver -> com.scoreloop.client.android.ui.OnScoreSubmitObserver:
    int STATUS_ERROR_BALANCE -> STATUS_ERROR_BALANCE
    int STATUS_ERROR_NETWORK -> STATUS_ERROR_NETWORK
    int STATUS_SUCCESS_CHALLENGE -> STATUS_SUCCESS_CHALLENGE
    int STATUS_SUCCESS_LOCAL_SCORE -> STATUS_SUCCESS_LOCAL_SCORE
    int STATUS_SUCCESS_SCORE -> STATUS_SUCCESS_SCORE
    int STATUS_UNDEFINED -> STATUS_UNDEFINED
    void onScoreSubmit(int,java.lang.Exception) -> onScoreSubmit
com.scoreloop.client.android.ui.OnStartGamePlayRequestObserver -> com.scoreloop.client.android.ui.OnStartGamePlayRequestObserver:
    void onStartGamePlayRequest(java.lang.Integer) -> onStartGamePlayRequest
com.scoreloop.client.android.ui.PostScoreOverlayActivity -> com.scoreloop.client.android.ui.PostScoreOverlayActivity:
    com.scoreloop.client.android.core.model.Entity getMessageTarget() -> getMessageTarget
    java.lang.String getPostText() -> getPostText
com.scoreloop.client.android.ui.ProfileScreenActivity -> com.scoreloop.client.android.ui.ProfileScreenActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.R -> com.scoreloop.client.android.ui.R:
com.scoreloop.client.android.ui.R$anim -> com.scoreloop.client.android.ui.R$anim:
    int rotate_in -> rotate_in
    int rotate_infinitely -> rotate_infinitely
    int rotate_out -> rotate_out
    int sl_next_in -> sl_next_in
    int sl_next_out -> sl_next_out
    int sl_previous_in -> sl_previous_in
    int sl_previous_out -> sl_previous_out
    int slide_in_right -> slide_in_right
    int slide_out_left -> slide_out_left
com.scoreloop.client.android.ui.R$attr -> com.scoreloop.client.android.ui.R$attr:
com.scoreloop.client.android.ui.R$color -> com.scoreloop.client.android.ui.R$color:
    int bg_center -> bg_center
    int bg_start -> bg_start
    int button_focused_stroke -> button_focused_stroke
    int button_normal_center -> button_normal_center
    int button_normal_end -> button_normal_end
    int button_normal_start -> button_normal_start
    int button_normal_stroke -> button_normal_stroke
    int button_pressed_center -> button_pressed_center
    int button_pressed_end -> button_pressed_end
    int button_pressed_start -> button_pressed_start
    int button_pressed_stroke -> button_pressed_stroke
    int normal_text -> normal_text
    int sl_color_background -> sl_color_background
    int sl_color_background_caption -> sl_color_background_caption
    int sl_color_background_footer -> sl_color_background_footer
    int sl_color_background_header -> sl_color_background_header
    int sl_color_background_status -> sl_color_background_status
    int sl_color_divider -> sl_color_divider
    int sl_color_foreground -> sl_color_foreground
    int sl_color_foreground_inverted -> sl_color_foreground_inverted
    int sl_color_scoreloop -> sl_color_scoreloop
    int transparent -> transparent
com.scoreloop.client.android.ui.R$dimen -> com.scoreloop.client.android.ui.R$dimen:
    int sl_clickable_height -> sl_clickable_height
    int sl_header_image_size -> sl_header_image_size
    int sl_margin_default -> sl_margin_default
    int sl_margin_shortcut -> sl_margin_shortcut
    int sl_margin_small -> sl_margin_small
com.scoreloop.client.android.ui.R$drawable -> com.scoreloop.client.android.ui.R$drawable:
    int background_linear -> background_linear
    int button -> button
    int button_normal -> button_normal
    int button_pressed -> button_pressed
    int facebook -> facebook
    int facebook_bright -> facebook_bright
    int fb_button -> fb_button
    int icon -> icon
    int scoreloop -> scoreloop
    int scoreloop_bright -> scoreloop_bright
    int sl_border_gradient -> sl_border_gradient
    int sl_button -> sl_button
    int sl_button_account_settings -> sl_button_account_settings
    int sl_button_add_coins -> sl_button_add_coins
    int sl_button_add_friend -> sl_button_add_friend
    int sl_button_arrow -> sl_button_arrow
    int sl_button_close -> sl_button_close
    int sl_button_more -> sl_button_more
    int sl_challenge_participants_background -> sl_challenge_participants_background
    int sl_challenge_seekbar -> sl_challenge_seekbar
    int sl_challenge_seekbar_background -> sl_challenge_seekbar_background
    int sl_challenge_seekbar_progress -> sl_challenge_seekbar_progress
    int sl_challenge_seekbar_thumb -> sl_challenge_seekbar_thumb
    int sl_challenge_settings_background -> sl_challenge_settings_background
    int sl_challenge_settings_background_image -> sl_challenge_settings_background_image
    int sl_challenge_vs_background -> sl_challenge_vs_background
    int sl_checkbox_checked -> sl_checkbox_checked
    int sl_checkbox_checked_disabled -> sl_checkbox_checked_disabled
    int sl_checkbox_selector -> sl_checkbox_selector
    int sl_checkbox_unchecked -> sl_checkbox_unchecked
    int sl_checkbox_unchecked_disabled -> sl_checkbox_unchecked_disabled
    int sl_dialog_background -> sl_dialog_background
    int sl_dialog_button_background -> sl_dialog_button_background
    int sl_dialog_button_background_pressed -> sl_dialog_button_background_pressed
    int sl_dialog_button_background_selector -> sl_dialog_button_background_selector
    int sl_dialog_input_background -> sl_dialog_input_background
    int sl_header_background -> sl_header_background
    int sl_header_button_background -> sl_header_button_background
    int sl_header_button_background_selector -> sl_header_button_background_selector
    int sl_header_caption_background -> sl_header_caption_background
    int sl_header_icon_achievements -> sl_header_icon_achievements
    int sl_header_icon_add_coins -> sl_header_icon_add_coins
    int sl_header_icon_challenges -> sl_header_icon_challenges
    int sl_header_icon_leaderboards -> sl_header_icon_leaderboards
    int sl_header_icon_market -> sl_header_icon_market
    int sl_header_icon_news_closed -> sl_header_icon_news_closed
    int sl_header_icon_news_opened -> sl_header_icon_news_opened
    int sl_header_icon_user -> sl_header_icon_user
    int sl_header_market_background -> sl_header_market_background
    int sl_highlighted_background -> sl_highlighted_background
    int sl_icon_achievements -> sl_icon_achievements
    int sl_icon_add_friends -> sl_icon_add_friends
    int sl_icon_addressbook -> sl_icon_addressbook
    int sl_icon_challenge_anyone -> sl_icon_challenge_anyone
    int sl_icon_challenge_lost -> sl_icon_challenge_lost
    int sl_icon_challenge_won -> sl_icon_challenge_won
    int sl_icon_challenges -> sl_icon_challenges
    int sl_icon_change_email -> sl_icon_change_email
    int sl_icon_change_picture -> sl_icon_change_picture
    int sl_icon_change_username -> sl_icon_change_username
    int sl_icon_device -> sl_icon_device
    int sl_icon_facebook -> sl_icon_facebook
    int sl_icon_flag_inappropriate -> sl_icon_flag_inappropriate
    int sl_icon_friends -> sl_icon_friends
    int sl_icon_games -> sl_icon_games
    int sl_icon_games_loading -> sl_icon_games_loading
    int sl_icon_leaderboards -> sl_icon_leaderboards
    int sl_icon_market -> sl_icon_market
    int sl_icon_menu_account_settings -> sl_icon_menu_account_settings
    int sl_icon_merge_account -> sl_icon_merge_account
    int sl_icon_myspace -> sl_icon_myspace
    int sl_icon_news_closed -> sl_icon_news_closed
    int sl_icon_news_opened -> sl_icon_news_opened
    int sl_icon_next -> sl_icon_next
    int sl_icon_plus_content -> sl_icon_plus_content
    int sl_icon_previous -> sl_icon_previous
    int sl_icon_recommend -> sl_icon_recommend
    int sl_icon_remove_friend -> sl_icon_remove_friend
    int sl_icon_scoreloop -> sl_icon_scoreloop
    int sl_icon_see_more -> sl_icon_see_more
    int sl_icon_socialproviders -> sl_icon_socialproviders
    int sl_icon_top -> sl_icon_top
    int sl_icon_twitter -> sl_icon_twitter
    int sl_icon_user -> sl_icon_user
    int sl_list_item_caption_background -> sl_list_item_caption_background
    int sl_list_item_normal_normal -> sl_list_item_normal_normal
    int sl_list_item_normal_selected -> sl_list_item_normal_selected
    int sl_logo -> sl_logo
    int sl_score_divider -> sl_score_divider
    int sl_screen_background -> sl_screen_background
    int sl_screen_background_pattern -> sl_screen_background_pattern
    int sl_selector_list_item -> sl_selector_list_item
    int sl_shortcut_background -> sl_shortcut_background
    int sl_shortcut_friends_active -> sl_shortcut_friends_active
    int sl_shortcut_friends_default -> sl_shortcut_friends_default
    int sl_shortcut_highlight -> sl_shortcut_highlight
    int sl_shortcut_home_active -> sl_shortcut_home_active
    int sl_shortcut_home_default -> sl_shortcut_home_default
    int sl_shortcut_market_active -> sl_shortcut_market_active
    int sl_shortcut_market_default -> sl_shortcut_market_default
    int sl_spinner_background -> sl_spinner_background
    int sl_status_background -> sl_status_background
    int sl_tab_active -> sl_tab_active
    int sl_tab_default_left_border -> sl_tab_default_left_border
    int sl_tab_default_right_border -> sl_tab_default_right_border
    int splash -> splash
    int t_button -> t_button
    int twitter -> twitter
    int twitter_bright -> twitter_bright
com.scoreloop.client.android.ui.R$id -> com.scoreloop.client.android.ui.R$id:
    int SecondaryProgress -> SecondaryProgress
    int background -> background
    int button_achievements -> button_achievements
    int button_facebook -> button_facebook
    int button_ok -> button_ok
    int button_play -> button_play
    int button_twitter -> button_twitter
    int cancel_button -> cancel_button
    int contender_icon -> contender_icon
    int contender_name -> contender_name
    int contender_stats -> contender_stats
    int contestant_icon -> contestant_icon
    int contestant_name -> contestant_name
    int contestant_stats -> contestant_stats
    int control1 -> control1
    int control2 -> control2
    int edit_login -> edit_login
    int enclosing_rl -> enclosing_rl
    int enclosing_vf -> enclosing_vf
    int facebook_checkbox -> facebook_checkbox
    int gallery_ll -> gallery_ll
    int icon -> icon
    int logo_iv -> logo_iv
    int logo_rl -> logo_rl
    int mainmenu_rl -> mainmenu_rl
    int mainmenu_tv -> mainmenu_tv
    int message -> message
    int message_edittext -> message_edittext
    int mode -> mode
    int mode_selector -> mode_selector
    int myspace_checkbox -> myspace_checkbox
    int ok_button -> ok_button
    int rsv -> rsv
    int sl_body -> sl_body
    int sl_button -> sl_button
    int sl_button_cancel -> sl_button_cancel
    int sl_button_ok -> sl_button_ok
    int sl_caption_container -> sl_caption_container
    int sl_contender_name -> sl_contender_name
    int sl_contender_score -> sl_contender_score
    int sl_contestant_name -> sl_contestant_name
    int sl_contestant_score -> sl_contestant_score
    int sl_control_button -> sl_control_button
    int sl_control_header -> sl_control_header
    int sl_control_icon -> sl_control_icon
    int sl_description -> sl_description
    int sl_dialog_error_layout -> sl_dialog_error_layout
    int sl_dialog_hint -> sl_dialog_hint
    int sl_dialog_profile_edit_initial_layout -> sl_dialog_profile_edit_initial_layout
    int sl_dialog_profile_edit_layout -> sl_dialog_profile_edit_layout
    int sl_error_message -> sl_error_message
    int sl_footer -> sl_footer
    int sl_header -> sl_header
    int sl_header_achievements -> sl_header_achievements
    int sl_header_caption -> sl_header_caption
    int sl_header_caption_land -> sl_header_caption_land
    int sl_header_friends -> sl_header_friends
    int sl_header_games -> sl_header_games
    int sl_header_image -> sl_header_image
    int sl_header_layout -> sl_header_layout
    int sl_header_number_achievements -> sl_header_number_achievements
    int sl_header_number_friends -> sl_header_number_friends
    int sl_header_number_games -> sl_header_number_games
    int sl_header_subtitle -> sl_header_subtitle
    int sl_header_title -> sl_header_title
    int sl_icon -> sl_icon
    int sl_image_tab_layout -> sl_image_tab_layout
    int sl_image_tab_view -> sl_image_tab_view
    int sl_item_account_settings -> sl_item_account_settings
    int sl_list -> sl_list
    int sl_list_item_achievement_accessory -> sl_list_item_achievement_accessory
    int sl_list_item_achievement_description -> sl_list_item_achievement_description
    int sl_list_item_achievement_icon -> sl_list_item_achievement_icon
    int sl_list_item_achievement_title -> sl_list_item_achievement_title
    int sl_list_item_caption_title -> sl_list_item_caption_title
    int sl_list_item_game_detail_text -> sl_list_item_game_detail_text
    int sl_list_item_main_icon -> sl_list_item_main_icon
    int sl_list_item_main_subtitle -> sl_list_item_main_subtitle
    int sl_list_item_main_title -> sl_list_item_main_title
    int sl_list_item_news_accessory -> sl_list_item_news_accessory
    int sl_list_item_news_description -> sl_list_item_news_description
    int sl_list_item_news_icon -> sl_list_item_news_icon
    int sl_list_item_news_title -> sl_list_item_news_title
    int sl_list_item_score_percent -> sl_list_item_score_percent
    int sl_list_item_score_result -> sl_list_item_score_result
    int sl_list_item_score_title -> sl_list_item_score_title
    int sl_number -> sl_number
    int sl_post_text -> sl_post_text
    int sl_prize -> sl_prize
    int sl_scores -> sl_scores
    int sl_shortcuts -> sl_shortcuts
    int sl_spinner_bar -> sl_spinner_bar
    int sl_spinner_view -> sl_spinner_view
    int sl_status -> sl_status
    int sl_status_close_button -> sl_status_close_button
    int sl_status_logo -> sl_status_logo
    int sl_submit_local_score_button -> sl_submit_local_score_button
    int sl_subtitle -> sl_subtitle
    int sl_subtitle2 -> sl_subtitle2
    int sl_tab -> sl_tab
    int sl_tabs_body -> sl_tabs_body
    int sl_tabs_segments -> sl_tabs_segments
    int sl_text -> sl_text
    int sl_title -> sl_title
    int sl_user_profile_edit_current_label -> sl_user_profile_edit_current_label
    int sl_user_profile_edit_current_text -> sl_user_profile_edit_current_text
    int sl_user_profile_edit_initial_current_label -> sl_user_profile_edit_initial_current_label
    int sl_user_profile_edit_initial_current_text -> sl_user_profile_edit_initial_current_text
    int sl_user_profile_edit_initial_email_label -> sl_user_profile_edit_initial_email_label
    int sl_user_profile_edit_initial_email_text -> sl_user_profile_edit_initial_email_text
    int sl_user_profile_edit_initial_username_label -> sl_user_profile_edit_initial_username_label
    int sl_user_profile_edit_initial_username_text -> sl_user_profile_edit_initial_username_text
    int sl_user_profile_edit_layout -> sl_user_profile_edit_layout
    int sl_user_profile_edit_new_label -> sl_user_profile_edit_new_label
    int sl_user_profile_edit_new_text -> sl_user_profile_edit_new_text
    int sl_webview -> sl_webview
    int stake -> stake
    int stake_selector -> stake_selector
    int stake_text -> stake_text
    int twitter_checkbox -> twitter_checkbox
com.scoreloop.client.android.ui.R$layout -> com.scoreloop.client.android.ui.R$layout:
    int gallery -> gallery
    int main -> main
    int sl_challenge_payment -> sl_challenge_payment
    int sl_dialog_custom -> sl_dialog_custom
    int sl_dialog_error -> sl_dialog_error
    int sl_dialog_login -> sl_dialog_login
    int sl_dialog_ok_cancel -> sl_dialog_ok_cancel
    int sl_dialog_profile_edit -> sl_dialog_profile_edit
    int sl_dialog_profile_edit_initial -> sl_dialog_profile_edit_initial
    int sl_dialog_text_button -> sl_dialog_text_button
    int sl_dialog_toast -> sl_dialog_toast
    int sl_header_caption -> sl_header_caption
    int sl_header_default -> sl_header_default
    int sl_header_game -> sl_header_game
    int sl_header_market -> sl_header_market
    int sl_header_user -> sl_header_user
    int sl_list_item_achievement -> sl_list_item_achievement
    int sl_list_item_caption -> sl_list_item_caption
    int sl_list_item_challenge_controls -> sl_list_item_challenge_controls
    int sl_list_item_challenge_history -> sl_list_item_challenge_history
    int sl_list_item_challenge_open -> sl_list_item_challenge_open
    int sl_list_item_challenge_participants -> sl_list_item_challenge_participants
    int sl_list_item_challenge_settings -> sl_list_item_challenge_settings
    int sl_list_item_challenge_settings_edit -> sl_list_item_challenge_settings_edit
    int sl_list_item_empty -> sl_list_item_empty
    int sl_list_item_game_detail -> sl_list_item_game_detail
    int sl_list_item_icon_title_small -> sl_list_item_icon_title_small
    int sl_list_item_icon_title_subtitle -> sl_list_item_icon_title_subtitle
    int sl_list_item_main -> sl_list_item_main
    int sl_list_item_market -> sl_list_item_market
    int sl_list_item_news -> sl_list_item_news
    int sl_list_item_score -> sl_list_item_score
    int sl_list_item_score_excluded -> sl_list_item_score_excluded
    int sl_list_item_score_highlighted -> sl_list_item_score_highlighted
    int sl_list_item_score_submit_local -> sl_list_item_score_submit_local
    int sl_list_item_user -> sl_list_item_user
    int sl_list_item_user_add_buddies -> sl_list_item_user_add_buddies
    int sl_list_view -> sl_list_view
    int sl_post -> sl_post
    int sl_result -> sl_result
    int sl_screen -> sl_screen
    int sl_spinner_item -> sl_spinner_item
    int sl_spinner_view -> sl_spinner_view
    int sl_tab_caption -> sl_tab_caption
    int sl_tab_shortcut -> sl_tab_shortcut
    int sl_tabs -> sl_tabs
com.scoreloop.client.android.ui.R$menu -> com.scoreloop.client.android.ui.R$menu:
    int sl_options_menu -> sl_options_menu
com.scoreloop.client.android.ui.R$string -> com.scoreloop.client.android.ui.R$string:
    int app_name -> app_name
    int button_achievements -> button_achievements
    int button_gallery -> button_gallery
    int button_play -> button_play
    int loading -> loading
    int sl_abuse_report_sent -> sl_abuse_report_sent
    int sl_abuse_report_title -> sl_abuse_report_title
    int sl_accept_challenge -> sl_accept_challenge
    int sl_accept_start_challenge -> sl_accept_start_challenge
    int sl_account_settings -> sl_account_settings
    int sl_account_settings_shortcut -> sl_account_settings_shortcut
    int sl_achievements -> sl_achievements
    int sl_achievements_capitalized -> sl_achievements_capitalized
    int sl_achievements_no_awards -> sl_achievements_no_awards
    int sl_add_coins -> sl_add_coins
    int sl_add_friend -> sl_add_friend
    int sl_add_friends -> sl_add_friends
    int sl_addressbook -> sl_addressbook
    int sl_against -> sl_against
    int sl_against_anyone -> sl_against_anyone
    int sl_anyone -> sl_anyone
    int sl_balance_too_low -> sl_balance_too_low
    int sl_cancel -> sl_cancel
    int sl_challenge_this_friend -> sl_challenge_this_friend
    int sl_challenges -> sl_challenges
    int sl_challenges_history -> sl_challenges_history
    int sl_change_email -> sl_change_email
    int sl_change_picture -> sl_change_picture
    int sl_change_picture_details -> sl_change_picture_details
    int sl_change_username -> sl_change_username
    int sl_choose_photo -> sl_choose_photo
    int sl_community -> sl_community
    int sl_create_challenge -> sl_create_challenge
    int sl_current -> sl_current
    int sl_details -> sl_details
    int sl_device_library -> sl_device_library
    int sl_email -> sl_email
    int sl_error_message_challenge_accept -> sl_error_message_challenge_accept
    int sl_error_message_challenge_balance -> sl_error_message_challenge_balance
    int sl_error_message_challenge_game_not_ready -> sl_error_message_challenge_game_not_ready
    int sl_error_message_challenge_ongoing -> sl_error_message_challenge_ongoing
    int sl_error_message_challenge_reject -> sl_error_message_challenge_reject
    int sl_error_message_connect_failed -> sl_error_message_connect_failed
    int sl_error_message_email_already_taken -> sl_error_message_email_already_taken
    int sl_error_message_email_already_taken_title -> sl_error_message_email_already_taken_title
    int sl_error_message_invalid_email -> sl_error_message_invalid_email
    int sl_error_message_network -> sl_error_message_network
    int sl_error_message_username_already_taken -> sl_error_message_username_already_taken
    int sl_facebook -> sl_facebook
    int sl_featured_game_capitalized -> sl_featured_game_capitalized
    int sl_find -> sl_find
    int sl_find_match -> sl_find_match
    int sl_format_achievements -> sl_format_achievements
    int sl_format_achievements_extended -> sl_format_achievements_extended
    int sl_format_added_as_friend -> sl_format_added_as_friend
    int sl_format_balance -> sl_format_balance
    int sl_format_challenge_stats -> sl_format_challenge_stats
    int sl_format_challenges_subtitle -> sl_format_challenges_subtitle
    int sl_format_challenges_title -> sl_format_challenges_title
    int sl_format_connect_failed -> sl_format_connect_failed
    int sl_format_found_many_users -> sl_format_found_many_users
    int sl_format_friend_already_added -> sl_format_friend_already_added
    int sl_format_friend_already_removed -> sl_format_friend_already_removed
    int sl_format_friends_added -> sl_format_friends_added
    int sl_format_friends_playing -> sl_format_friends_playing
    int sl_format_leaderboards_percent -> sl_format_leaderboards_percent
    int sl_format_new_news_items -> sl_format_new_news_items
    int sl_format_number_friends -> sl_format_number_friends
    int sl_format_number_games -> sl_format_number_games
    int sl_format_one_friend_added -> sl_format_one_friend_added
    int sl_format_playing -> sl_format_playing
    int sl_format_post -> sl_format_post
    int sl_format_posted -> sl_format_posted
    int sl_format_recommend_subtitle -> sl_format_recommend_subtitle
    int sl_format_recommend_title -> sl_format_recommend_title
    int sl_format_removed_as_friend -> sl_format_removed_as_friend
    int sl_format_score_title -> sl_format_score_title
    int sl_format_stake -> sl_format_stake
    int sl_format_unlocked -> sl_format_unlocked
    int sl_format_welcome_back -> sl_format_welcome_back
    int sl_found_no_user -> sl_found_no_user
    int sl_found_too_many_users -> sl_found_too_many_users
    int sl_friends -> sl_friends
    int sl_friends_capitalized -> sl_friends_capitalized
    int sl_friends_games -> sl_friends_games
    int sl_friends_games_subtitle -> sl_friends_games_subtitle
    int sl_games -> sl_games
    int sl_games_capitalized -> sl_games_capitalized
    int sl_games_subtitle -> sl_games_subtitle
    int sl_get -> sl_get
    int sl_global -> sl_global
    int sl_home -> sl_home
    int sl_images -> sl_images
    int sl_launch -> sl_launch
    int sl_leaderboards -> sl_leaderboards
    int sl_leave_accept_challenge -> sl_leave_accept_challenge
    int sl_leave_accept_game_recommendation -> sl_leave_accept_game_recommendation
    int sl_leave_accept_game_recommendation_ok -> sl_leave_accept_game_recommendation_ok
    int sl_leave_accept_match_buddies -> sl_leave_accept_match_buddies
    int sl_leave_accept_match_buddies_ok -> sl_leave_accept_match_buddies_ok
    int sl_leave_payment -> sl_leave_payment
    int sl_local_leaderboard -> sl_local_leaderboard
    int sl_market -> sl_market
    int sl_market_description -> sl_market_description
    int sl_merge_account_description -> sl_merge_account_description
    int sl_merge_account_email_current -> sl_merge_account_email_current
    int sl_merge_account_not_found -> sl_merge_account_not_found
    int sl_merge_account_subtitle -> sl_merge_account_subtitle
    int sl_merge_account_success -> sl_merge_account_success
    int sl_merge_account_success_title -> sl_merge_account_success_title
    int sl_merge_account_title -> sl_merge_account_title
    int sl_my_games -> sl_my_games
    int sl_myspace -> sl_myspace
    int sl_new -> sl_new
    int sl_new_challenge -> sl_new_challenge
    int sl_new_games -> sl_new_games
    int sl_new_games_subtitle -> sl_new_games_subtitle
    int sl_news -> sl_news
    int sl_next -> sl_next
    int sl_no_friends -> sl_no_friends
    int sl_no_friends_playing -> sl_no_friends_playing
    int sl_no_games -> sl_no_games
    int sl_no_history_challenges -> sl_no_history_challenges
    int sl_no_news -> sl_no_news
    int sl_no_news_items -> sl_no_news_items
    int sl_no_open_challenges -> sl_no_open_challenges
    int sl_no_scores -> sl_no_scores
    int sl_no_thanks -> sl_no_thanks
    int sl_not_on_highscore_list -> sl_not_on_highscore_list
    int sl_ok -> sl_ok
    int sl_one_news_item -> sl_one_news_item
    int sl_open_challenges -> sl_open_challenges
    int sl_pending -> sl_pending
    int sl_playing -> sl_playing
    int sl_please_email_address -> sl_please_email_address
    int sl_please_email_valid -> sl_please_email_valid
    int sl_popular_games -> sl_popular_games
    int sl_popular_games_subtitle -> sl_popular_games_subtitle
    int sl_post -> sl_post
    int sl_previous -> sl_previous
    int sl_recommend_sent -> sl_recommend_sent
    int sl_register_username -> sl_register_username
    int sl_reject_challenge -> sl_reject_challenge
    int sl_rejected -> sl_rejected
    int sl_remove_friend -> sl_remove_friend
    int sl_scoreloop_username -> sl_scoreloop_username
    int sl_see_more -> sl_see_more
    int sl_select_stake -> sl_select_stake
    int sl_set_default -> sl_set_default
    int sl_slapp_subtitle -> sl_slapp_subtitle
    int sl_slapp_title -> sl_slapp_title
    int sl_status_error_balance -> sl_status_error_balance
    int sl_status_error_network -> sl_status_error_network
    int sl_status_success_challenge_created -> sl_status_success_challenge_created
    int sl_status_success_challenge_lost -> sl_status_success_challenge_lost
    int sl_status_success_challenge_won -> sl_status_success_challenge_won
    int sl_status_success_local_score -> sl_status_success_local_score
    int sl_status_success_score -> sl_status_success_score
    int sl_submit_local_scores -> sl_submit_local_scores
    int sl_top -> sl_top
    int sl_try_again -> sl_try_again
    int sl_twentyfour -> sl_twentyfour
    int sl_twitter -> sl_twitter
    int sl_update -> sl_update
    int sl_username -> sl_username
com.scoreloop.client.android.ui.R$style -> com.scoreloop.client.android.ui.R$style:
    int candyButton -> candyButton
    int menuButton -> menuButton
    int sl_dialog -> sl_dialog
    int sl_font_size_big -> sl_font_size_big
    int sl_font_size_giant -> sl_font_size_giant
    int sl_font_size_huge -> sl_font_size_huge
    int sl_font_size_large -> sl_font_size_large
    int sl_font_size_normal -> sl_font_size_normal
    int sl_font_size_small -> sl_font_size_small
    int sl_list_view -> sl_list_view
    int sl_text_big_bold -> sl_text_big_bold
    int sl_text_big_bold_blue -> sl_text_big_bold_blue
    int sl_text_big_bold_inverted -> sl_text_big_bold_inverted
    int sl_text_giant_bold -> sl_text_giant_bold
    int sl_text_huge_bold -> sl_text_huge_bold
    int sl_text_large_bold -> sl_text_large_bold
    int sl_text_large_bold_inverted -> sl_text_large_bold_inverted
    int sl_text_large_normal -> sl_text_large_normal
    int sl_text_large_normal_inverted -> sl_text_large_normal_inverted
    int sl_text_normal_bold -> sl_text_normal_bold
    int sl_text_normal_bold_inverted -> sl_text_normal_bold_inverted
    int sl_text_normal_normal -> sl_text_normal_normal
    int sl_text_normal_normal_inverted -> sl_text_normal_normal_inverted
    int sl_text_small_bold -> sl_text_small_bold
    int sl_text_small_bold_inverted -> sl_text_small_bold_inverted
    int sl_text_small_normal -> sl_text_small_normal
    int sl_text_small_normal_inverted -> sl_text_small_normal_inverted
com.scoreloop.client.android.ui.ScoreloopManager -> com.scoreloop.client.android.ui.ScoreloopManager:
    void achieveAward(java.lang.String,boolean,boolean) -> achieveAward
    void destroy() -> destroy
    com.scoreloop.client.android.core.model.Achievement getAchievement(java.lang.String) -> getAchievement
    java.util.List getAchievements() -> getAchievements
    com.scoreloop.client.android.core.model.AwardList getAwardList() -> getAwardList
    java.lang.String getInfoString() -> getInfoString
    boolean hasLoadedAchievements() -> hasLoadedAchievements
    boolean isAwardAchieved(java.lang.String) -> isAwardAchieved
    void loadAchievements(java.lang.Runnable) -> loadAchievements
    void onGamePlayEnded(java.lang.Double,java.lang.Integer) -> onGamePlayEnded
    void onGamePlayEnded(com.scoreloop.client.android.core.model.Score,java.lang.Boolean) -> onGamePlayEnded
    void setOnCanStartGamePlayObserver(com.scoreloop.client.android.ui.OnCanStartGamePlayObserver) -> setOnCanStartGamePlayObserver
    void setOnScoreSubmitObserver(com.scoreloop.client.android.ui.OnScoreSubmitObserver) -> setOnScoreSubmitObserver
    void setOnStartGamePlayRequestObserver(com.scoreloop.client.android.ui.OnStartGamePlayRequestObserver) -> setOnStartGamePlayRequestObserver
    void showWelcomeBackToast(long) -> showWelcomeBackToast
    void submitAchievements(java.lang.Runnable) -> submitAchievements
    void submitLocalScores(java.lang.Runnable) -> submitLocalScores
    java.lang.String[] getModeNames() -> getModeNames
com.scoreloop.client.android.ui.ScoreloopManagerSingleton -> com.scoreloop.client.android.ui.ScoreloopManagerSingleton:
    com.scoreloop.client.android.ui.ScoreloopManager _singleton -> _singleton
    com.scoreloop.client.android.ui.ScoreloopManager get() -> get
    com.scoreloop.client.android.ui.ScoreloopManager init(android.content.Context,java.lang.String) -> init
    com.scoreloop.client.android.ui.ScoreloopManager init(com.scoreloop.client.android.ui.ScoreloopManager) -> init
    void destroy() -> destroy
com.scoreloop.client.android.ui.ShowResultOverlayActivity -> com.scoreloop.client.android.ui.ShowResultOverlayActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.ShowResultOverlayActivity$1 -> com.scoreloop.client.android.ui.d:
    com.scoreloop.client.android.ui.ShowResultOverlayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.ui.SocialMarketScreenActivity -> com.scoreloop.client.android.ui.SocialMarketScreenActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.StandardScoreloopManager -> com.scoreloop.client.android.ui.c:
    com.scoreloop.client.android.ui.component.achievement.AchievementsEngine _achievementsEngine -> a
    com.scoreloop.client.android.ui.framework.ValueStore _cachedUserValueStore -> b
    com.scoreloop.client.android.core.controller.ChallengeController _challengeController -> c
    boolean _challengeOngoing -> d
    com.scoreloop.client.android.core.model.Client _client -> e
    com.scoreloop.client.android.ui.component.base.Configuration _configuration -> f
    android.content.Context _context -> g
    android.os.Handler _handler -> h
    com.scoreloop.client.android.core.model.Challenge _lastChallenge -> i
    com.scoreloop.client.android.core.model.Score _lastScore -> j
    int _lastStatus -> k
    com.scoreloop.client.android.ui.OnCanStartGamePlayObserver _onCanStartGamePlayObserver -> l
    com.scoreloop.client.android.ui.OnScoreSubmitObserver _onScoreSubmitObserver -> m
    com.scoreloop.client.android.ui.OnStartGamePlayRequestObserver _onStartGamePlayRequestObserver -> n
    com.scoreloop.client.android.core.controller.ScoreController _scoreController -> o
    com.scoreloop.client.android.ui.framework.ValueStore _sessionGameValueStore -> p
    com.scoreloop.client.android.ui.framework.ValueStore _sessionUserValueStore -> q
    java.util.List _submitLocalScoresContinuations -> r
    boolean containsKey(java.lang.String[],java.lang.String) -> a
    void achieveAward(java.lang.String,boolean,boolean) -> achieveAward
    boolean canStartGamePlay() -> canStartGamePlay
    void challengeControllerDidFailOnInsufficientBalance(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailOnInsufficientBalance
    void challengeControllerDidFailToAcceptChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToAcceptChallenge
    void challengeControllerDidFailToRejectChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToRejectChallenge
    void checkHasAwards() -> f
    void checkHasLoadedAchievements() -> g
    com.scoreloop.client.android.ui.framework.ScreenDescription createAchievementScreenDescription(com.scoreloop.client.android.core.model.User) -> createAchievementScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createChallengeAcceptScreenDescription(com.scoreloop.client.android.core.model.Challenge) -> createChallengeAcceptScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createChallengeCreateScreenDescription(com.scoreloop.client.android.core.model.User,java.lang.Integer) -> createChallengeCreateScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createChallengePaymentScreenDescription() -> createChallengePaymentScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createChallengeScreenDescription(com.scoreloop.client.android.core.model.User) -> createChallengeScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createEntryScreenDescription() -> createEntryScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createGameDetailScreenDescription(com.scoreloop.client.android.core.model.Game) -> createGameDetailScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createGameScreenDescription(com.scoreloop.client.android.core.model.User,int) -> createGameScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createMarketScreenDescription(com.scoreloop.client.android.core.model.User) -> createMarketScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createNewsScreenDescription() -> createNewsScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createProfileSettingsPictureScreenDescription(com.scoreloop.client.android.core.model.User) -> createProfileSettingsPictureScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createProfileSettingsScreenDescription(com.scoreloop.client.android.core.model.User) -> createProfileSettingsScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createScoreScreenDescription(com.scoreloop.client.android.core.model.Game,java.lang.Integer,java.lang.Integer) -> createScoreScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createScreenDescription$4b5235a0(com.scoreloop.client.android.core.model.User,com.scoreloop.client.android.core.model.Game) -> a
    com.scoreloop.client.android.ui.framework.ScreenDescription createUserAddBuddyScreenDescription() -> createUserAddBuddyScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createUserDetailScreenDescription(com.scoreloop.client.android.core.model.User,java.lang.Boolean) -> createUserDetailScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createUserScreenDescription(com.scoreloop.client.android.core.model.User) -> createUserScreenDescription
    void destroy() -> destroy
    void displayWithEmptyStack(com.scoreloop.client.android.ui.framework.ScreenDescription) -> a
    com.scoreloop.client.android.core.model.Game ensureGame(com.scoreloop.client.android.core.model.Game) -> a
    com.scoreloop.client.android.core.model.User ensureUser(com.scoreloop.client.android.core.model.User) -> a
    java.util.Map extractActivityInfo(android.content.pm.PackageInfo) -> a
    java.util.Map extractPermissionInfo(android.content.pm.PackageInfo) -> b
    com.scoreloop.client.android.core.model.Achievement getAchievement(java.lang.String) -> getAchievement
    java.util.List getAchievements() -> getAchievements
    com.scoreloop.client.android.ui.component.achievement.AchievementsEngine getAchievementsEngine() -> h
    com.scoreloop.client.android.core.model.AwardList getAwardList() -> getAwardList
    com.scoreloop.client.android.ui.component.base.Configuration getConfiguration() -> a
    java.lang.String getInfoString() -> getInfoString
    com.scoreloop.client.android.core.model.Challenge getLastChallenge() -> b
    com.scoreloop.client.android.core.model.Score getLastScore() -> c
    int getLastStatus() -> d
    java.lang.String[] getModeNames() -> getModeNames
    java.lang.String getPersistedUserName() -> i
    com.scoreloop.client.android.core.controller.ScoreController getScoreController() -> j
    com.scoreloop.client.android.core.model.Session getSession() -> e
    com.scoreloop.client.android.ui.framework.ValueStore getSessionGameValues() -> k
    com.scoreloop.client.android.ui.framework.ValueStore getSessionUserValues() -> l
    com.scoreloop.client.android.ui.framework.ValueStore$ValueSource getValueSourceForKeyInStore(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore) -> getValueSourceForKeyInStore
    boolean hasLoadedAchievements() -> hasLoadedAchievements
    boolean isAwardAchieved(java.lang.String) -> isAwardAchieved
    boolean isChallengeOngoing() -> isChallengeOngoing
    void loadAchievements(java.lang.Runnable) -> loadAchievements
    void onGamePlayEnded(java.lang.Double,java.lang.Integer) -> onGamePlayEnded
    void onGamePlayEnded(com.scoreloop.client.android.core.model.Score,java.lang.Boolean) -> onGamePlayEnded
    void onShortcut(int) -> onShortcut
    void persistSessionUserName() -> persistSessionUserName
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void run() -> run
    void runSubmitLocalScoresContinuations() -> m
    void screenManagerDidLeaveFramework(com.scoreloop.client.android.ui.framework.ScreenManager) -> screenManagerDidLeaveFramework
    boolean screenManagerWantsNewScreen(com.scoreloop.client.android.ui.framework.ScreenManager,com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenDescription) -> screenManagerWantsNewScreen
    void screenManagerWillEnterFramework(com.scoreloop.client.android.ui.framework.ScreenManager) -> screenManagerWillEnterFramework
    void screenManagerWillShowOptionsMenu() -> screenManagerWillShowOptionsMenu
    void screenManagerWillShowScreenDescription(com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction) -> screenManagerWillShowScreenDescription
    void setOnCanStartGamePlayObserver(com.scoreloop.client.android.ui.OnCanStartGamePlayObserver) -> setOnCanStartGamePlayObserver
    void setOnScoreSubmitObserver(com.scoreloop.client.android.ui.OnScoreSubmitObserver) -> setOnScoreSubmitObserver
    void setOnStartGamePlayRequestObserver(com.scoreloop.client.android.ui.OnStartGamePlayRequestObserver) -> setOnStartGamePlayRequestObserver
    void showWelcomeBackToast(long) -> showWelcomeBackToast
    void startGamePlay(java.lang.Integer,com.scoreloop.client.android.core.model.Challenge) -> startGamePlay
    void submitAchievements(java.lang.Runnable) -> submitAchievements
    void submitLocalScores(java.lang.Runnable) -> submitLocalScores
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> trackEvent
    void trackPageView(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore) -> trackPageView
    com.scoreloop.client.android.ui.component.base.Configuration access$0(com.scoreloop.client.android.ui.StandardScoreloopManager) -> a
    android.content.Context access$1(com.scoreloop.client.android.ui.StandardScoreloopManager) -> b
    void access$2(com.scoreloop.client.android.ui.StandardScoreloopManager) -> c
com.scoreloop.client.android.ui.StandardScoreloopManager$1 -> com.scoreloop.client.android.ui.b:
    com.scoreloop.client.android.ui.StandardScoreloopManager this$0 -> a
    java.util.ListIterator val$scoresIterator -> b
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void submitNextScore(com.scoreloop.client.android.core.controller.ScoreController) -> a
com.scoreloop.client.android.ui.StandardScoreloopManager$Checker -> com.scoreloop.client.android.ui.e:
    int _counter -> a
    java.util.Map _infos -> b
    java.lang.String _kind -> c
    java.util.List _missing -> d
    boolean _shouldBail -> e
    com.scoreloop.client.android.ui.StandardScoreloopManager this$0 -> f
    void add(java.lang.String,com.scoreloop.client.android.ui.component.base.Configuration$Feature) -> a
    void add(java.lang.String,java.lang.Object[]) -> a
    void check() -> a
    java.lang.String format(java.lang.String,java.lang.Object[]) -> b
    void informDeveloper$552c4e01() -> d
    void reportOptional() -> b
    void reportRequired() -> c
com.scoreloop.client.android.ui.StandardScoreloopManager$VerifyException -> com.scoreloop.client.android.ui.a:
com.scoreloop.client.android.ui.component.achievement.AchievementHeaderActivity -> com.scoreloop.client.android.ui.component.achievement.AchievementHeaderActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
com.scoreloop.client.android.ui.component.achievement.AchievementListActivity -> com.scoreloop.client.android.ui.component.achievement.AchievementListActivity:
    com.scoreloop.client.android.core.controller.AchievementsController _achievementsController -> _achievementsController
    void onAchievements() -> onAchievements
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(com.scoreloop.client.android.ui.component.achievement.AchievementListItem) -> onListItemClick
    void onRefresh(int) -> onRefresh
    void onStart() -> onStart
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void access$1(com.scoreloop.client.android.ui.component.achievement.AchievementListActivity) -> access$1
    void access$2(com.scoreloop.client.android.ui.component.achievement.AchievementListActivity) -> access$2
com.scoreloop.client.android.ui.component.achievement.AchievementListActivity$1 -> com.scoreloop.client.android.ui.component.achievement.a:
    com.scoreloop.client.android.ui.component.achievement.AchievementListActivity this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.component.achievement.AchievementListItem -> com.scoreloop.client.android.ui.component.achievement.AchievementListItem:
    com.scoreloop.client.android.core.model.Achievement _achievement -> _achievement
    boolean _belongsToSessionUser -> _belongsToSessionUser
    java.lang.String _description -> _description
    java.lang.String getDescriptionText(com.scoreloop.client.android.core.model.Achievement,com.scoreloop.client.android.ui.component.base.Configuration) -> getDescriptionText
    java.lang.String getTitleText(com.scoreloop.client.android.core.model.Achievement) -> getTitleText
    com.scoreloop.client.android.core.model.Achievement getAchievement() -> getAchievement
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.achievement.AchievementsEngine -> com.scoreloop.client.android.ui.component.achievement.AchievementsEngine:
    com.scoreloop.client.android.core.controller.AchievementController _achievementController -> _achievementController
    com.scoreloop.client.android.core.controller.AchievementsController _achievementsController -> _achievementsController
    boolean _isLoading -> _isLoading
    boolean _isSubmitting -> _isSubmitting
    java.util.List _loadContinuations -> _loadContinuations
    java.util.List _submitContinuations -> _submitContinuations
    com.scoreloop.client.android.core.controller.AchievementController getAchievementController() -> getAchievementController
    com.scoreloop.client.android.core.controller.AchievementsController getAchievementsController() -> getAchievementsController
    boolean hadInitialSync() -> hadInitialSync
    boolean hasLoadedAchievements() -> hasLoadedAchievements
    void invokeLoadContinuations() -> invokeLoadContinuations
    void invokeSubmitContinuations() -> invokeSubmitContinuations
    void loadAchievements(boolean,java.lang.Runnable) -> loadAchievements
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void submitAchievements(boolean,java.lang.Runnable) -> submitAchievements
    void submitNextAchievement() -> submitNextAchievement
    java.util.List access$0(com.scoreloop.client.android.ui.component.achievement.AchievementsEngine) -> access$0
    void access$1(com.scoreloop.client.android.ui.component.achievement.AchievementsEngine) -> access$1
com.scoreloop.client.android.ui.component.achievement.AchievementsEngine$1 -> com.scoreloop.client.android.ui.component.achievement.b:
    com.scoreloop.client.android.ui.component.achievement.AchievementsEngine this$0 -> a
    boolean val$forceInitialSync -> b
    java.lang.Runnable val$continuation -> c
    void run() -> run
com.scoreloop.client.android.ui.component.agent.BaseAgent -> com.scoreloop.client.android.ui.component.agent.BaseAgent:
    boolean _isRetrieving -> _isRetrieving
    java.lang.String[] _keys -> _keys
    com.scoreloop.client.android.ui.framework.ValueStore _valueStore -> _valueStore
    boolean isRetrieving() -> isRetrieving
    void onFinishRetrieve(com.scoreloop.client.android.core.controller.RequestController,com.scoreloop.client.android.ui.framework.ValueStore) -> onFinishRetrieve
    void onStartRetrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> onStartRetrieve
    void putValue(java.lang.String,java.lang.Object) -> putValue
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void retrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> retrieve
    void supportedKeys(java.util.Set) -> supportedKeys
com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask -> com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask:
    com.scoreloop.client.android.ui.framework.BaseActivity _activity -> _activity
    com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$ManageBuddiesContinuation _continuation -> _continuation
    com.scoreloop.client.android.core.controller.UserController _controller -> _controller
    int _count -> _count
    com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$Mode _mode -> _mode
    com.scoreloop.client.android.ui.framework.ValueStore _sessionUserValues -> _sessionUserValues
    java.util.List _users -> _users
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$component$agent$ManageBuddiesTask$Mode -> $SWITCH_TABLE$com$scoreloop$client$android$ui$component$agent$ManageBuddiesTask$Mode
    void addBuddies(com.scoreloop.client.android.ui.framework.BaseActivity,java.util.List,com.scoreloop.client.android.ui.framework.ValueStore,com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$ManageBuddiesContinuation) -> addBuddies
    void addBuddy(com.scoreloop.client.android.ui.framework.BaseActivity,com.scoreloop.client.android.core.model.User,com.scoreloop.client.android.ui.framework.ValueStore,com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$ManageBuddiesContinuation) -> addBuddy
    void removeBuddy(com.scoreloop.client.android.ui.framework.BaseActivity,com.scoreloop.client.android.core.model.User,com.scoreloop.client.android.ui.framework.ValueStore,com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$ManageBuddiesContinuation) -> removeBuddy
    com.scoreloop.client.android.core.model.User popUser() -> popUser
    void processNextOrFinish() -> processNextOrFinish
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$component$agent$ManageBuddiesTask$Mode() -> $SWITCH_TABLE$com$scoreloop$client$android$ui$component$agent$ManageBuddiesTask$Mode
com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$ManageBuddiesContinuation -> com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$ManageBuddiesContinuation:
    void withAddedOrRemovedBuddies(int) -> withAddedOrRemovedBuddies
com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$Mode -> com.scoreloop.client.android.ui.component.agent.b:
    com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$Mode ADD -> a
    com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$Mode REMOVE -> b
    com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$Mode[] ENUM$VALUES -> c
    com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$Mode[] values() -> values
    com.scoreloop.client.android.ui.component.agent.ManageBuddiesTask$Mode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.component.agent.NewsAgent -> com.scoreloop.client.android.ui.component.agent.NewsAgent:
    java.lang.String[] SUPPORTED_KEYS -> SUPPORTED_KEYS
    com.scoreloop.client.android.core.addon.RSSFeed _feed -> _feed
    boolean isRetrieving() -> isRetrieving
    void retrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> retrieve
    void supportedKeys(java.util.Set) -> supportedKeys
com.scoreloop.client.android.ui.component.agent.NewsAgent$1 -> com.scoreloop.client.android.ui.component.agent.a:
    com.scoreloop.client.android.ui.component.agent.NewsAgent this$0 -> a
    com.scoreloop.client.android.ui.framework.ValueStore val$valueStore -> b
    void withLoadedFeed(java.util.List,java.lang.Exception) -> withLoadedFeed
com.scoreloop.client.android.ui.component.agent.NumberAchievementsAgent -> com.scoreloop.client.android.ui.component.agent.NumberAchievementsAgent:
    java.lang.String[] SUPPORTED_KEYS -> SUPPORTED_KEYS
    com.scoreloop.client.android.core.controller.AchievementsController _achievementsController -> _achievementsController
    void onFinishRetrieve(com.scoreloop.client.android.core.controller.RequestController,com.scoreloop.client.android.ui.framework.ValueStore) -> onFinishRetrieve
    void onStartRetrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> onStartRetrieve
com.scoreloop.client.android.ui.component.agent.UserAgent -> com.scoreloop.client.android.ui.component.agent.UserAgent:
    java.lang.String[] SUPPORTED_KEYS -> SUPPORTED_KEYS
    com.scoreloop.client.android.core.controller.UserController _userController -> _userController
    void onFinishRetrieve(com.scoreloop.client.android.core.controller.RequestController,com.scoreloop.client.android.ui.framework.ValueStore) -> onFinishRetrieve
    void onStartRetrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> onStartRetrieve
    void retrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> retrieve
com.scoreloop.client.android.ui.component.agent.UserBuddiesAgent -> com.scoreloop.client.android.ui.component.agent.UserBuddiesAgent:
    java.lang.String[] SUPPORTED_KEYS -> SUPPORTED_KEYS
    com.scoreloop.client.android.core.controller.UserController _userController -> _userController
    void onFinishRetrieve(com.scoreloop.client.android.core.controller.RequestController,com.scoreloop.client.android.ui.framework.ValueStore) -> onFinishRetrieve
    void onStartRetrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> onStartRetrieve
com.scoreloop.client.android.ui.component.agent.UserDetailsAgent -> com.scoreloop.client.android.ui.component.agent.UserDetailsAgent:
    java.lang.String[] SUPPORTED_KEYS -> SUPPORTED_KEYS
    com.scoreloop.client.android.core.controller.UserController _userController -> _userController
    void onFinishRetrieve(com.scoreloop.client.android.core.controller.RequestController,com.scoreloop.client.android.ui.framework.ValueStore) -> onFinishRetrieve
    void onStartRetrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> onStartRetrieve
com.scoreloop.client.android.ui.component.base.CaptionListItem -> com.scoreloop.client.android.ui.component.base.CaptionListItem:
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.base.ComponentActivity -> com.scoreloop.client.android.ui.component.base.ComponentActivity:
    com.scoreloop.client.android.core.controller.RequestControllerObserver _requestControllerObserver -> _requestControllerObserver
    android.app.Activity getTopParent() -> getTopParent
    android.app.Dialog createErrorDialog(int) -> createErrorDialog
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void showDialogForExceptionSafe(java.lang.Exception) -> showDialogForExceptionSafe
    boolean isValueChangedFor(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> isValueChangedFor
    com.scoreloop.client.android.ui.component.base.Configuration getConfiguration() -> getConfiguration
    com.scoreloop.client.android.ui.framework.ValueStore getUserValues() -> getUserValues
    com.scoreloop.client.android.ui.framework.ValueStore getGameValues() -> getGameValues
    com.scoreloop.client.android.ui.framework.ValueStore getSessionUserValues() -> getSessionUserValues
    com.scoreloop.client.android.ui.framework.ValueStore getSessionGameValues() -> getSessionGameValues
    com.scoreloop.client.android.ui.component.base.Factory getFactory() -> getFactory
    com.scoreloop.client.android.ui.component.base.Tracker getTracker() -> getTracker
    com.scoreloop.client.android.core.model.Game getGame() -> getGame
    com.scoreloop.client.android.ui.component.base.Manager getManager() -> getManager
    int getModeForPosition(int) -> getModeForPosition
    java.lang.String getModeString(int) -> getModeString
    int getPositionForMode(int) -> getPositionForMode
    com.scoreloop.client.android.core.controller.RequestControllerObserver getRequestControllerObserver() -> getRequestControllerObserver
    com.scoreloop.client.android.core.model.Session getSession() -> getSession
    com.scoreloop.client.android.core.model.User getSessionUser() -> getSessionUser
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    boolean isSessionGame() -> isSessionGame
    boolean isSessionUser() -> isSessionUser
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidFailSafe(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFailSafe
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void showDialogSafe(int,boolean) -> showDialogSafe
com.scoreloop.client.android.ui.component.base.ComponentActivity$StandardRequestControllerObserver -> com.scoreloop.client.android.ui.component.base.b:
    com.scoreloop.client.android.ui.component.base.ComponentActivity this$0 -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.ui.component.base.ComponentActivityHooks -> com.scoreloop.client.android.ui.component.base.ComponentActivityHooks:
    void onCreate(android.os.Bundle) -> onCreate
    void onRefresh(int) -> onRefresh
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
com.scoreloop.client.android.ui.component.base.ComponentHeaderActivity -> com.scoreloop.client.android.ui.component.base.ComponentHeaderActivity:
    android.widget.TextView _caption -> _caption
    android.widget.ImageView getImageView() -> getImageView
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle,int) -> onCreate
    void onSpinnerShow(boolean) -> onSpinnerShow
    void setCaption(java.lang.String) -> setCaption
    void setSubTitle(java.lang.String) -> setSubTitle
    void setTitle(java.lang.String) -> setTitle
com.scoreloop.client.android.ui.component.base.ComponentListActivity -> com.scoreloop.client.android.ui.component.base.ComponentListActivity:
    com.scoreloop.client.android.ui.framework.BaseListItem _footerItem -> _footerItem
    boolean _isVisibleOptionsMenuAccountSettings -> _isVisibleOptionsMenuAccountSettings
    void setVisibleOptionsMenuAccountSettings(boolean) -> setVisibleOptionsMenuAccountSettings
    com.scoreloop.client.android.ui.framework.BaseListAdapter getBaseListAdapter() -> getBaseListAdapter
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    android.widget.ListView getListView() -> getListView
    void hideFooter() -> hideFooter
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onFooterItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onFooterItemClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void showFooter(com.scoreloop.client.android.ui.framework.BaseListItem) -> showFooter
    boolean onCreateOptionsMenuForActivityGroup(android.view.Menu) -> onCreateOptionsMenuForActivityGroup
    boolean onPrepareOptionsMenuForActivityGroup(android.view.Menu) -> onPrepareOptionsMenuForActivityGroup
    boolean onOptionsItemSelectedForActivityGroup(android.view.MenuItem) -> onOptionsItemSelectedForActivityGroup
com.scoreloop.client.android.ui.component.base.Configuration -> com.scoreloop.client.android.ui.component.base.Configuration:
    java.lang.String FORMAT_MONEY_KEY -> FORMAT_MONEY_KEY
    java.lang.String FORMAT_SCORE_RESULT_KEY -> FORMAT_SCORE_RESULT_KEY
    java.lang.String FORMAT_SCORE_LEADERBOARD -> FORMAT_SCORE_LEADERBOARD
    java.lang.String FORMAT_SCORE_CHALLENGES -> FORMAT_SCORE_CHALLENGES
    java.lang.String FORMAT_SCORE_SOCIAL_NETWORK_POST -> FORMAT_SCORE_SOCIAL_NETWORK_POST
    java.lang.String FORMAT_SCORE_KEY -> FORMAT_SCORE_KEY
    java.lang.String RES_MODES_NAME -> RES_MODES_NAME
    java.lang.String ACHIVEMENT_INITIAL_SYNC -> ACHIVEMENT_INITIAL_SYNC
    int _modesResId -> _modesResId
    java.lang.String _moneyFormat -> _moneyFormat
    java.lang.String _scoreResultFormat -> _scoreResultFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey _leaderboardScoreFormat -> _leaderboardScoreFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey _challengesScoreFormat -> _challengesScoreFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey _socialNetworkPostScoreFormat -> _socialNetworkPostScoreFormat
    com.scoreloop.client.android.core.model.ScoreFormatter _scoreFormatter -> _scoreFormatter
    java.lang.String[] _modesNames -> _modesNames
    boolean _achievementForceInitialSync -> _achievementForceInitialSync
    int getModesResId() -> getModesResId
    java.lang.String[] getModesNames() -> getModesNames
    java.lang.String getMoneyFormat() -> getMoneyFormat
    boolean isAchievementForceInitialSync() -> isAchievementForceInitialSync
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey getLeaderboardScoreFormat() -> getLeaderboardScoreFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey getChallengesScoreFormat() -> getChallengesScoreFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey getSocialNetworkPostScoreFormat() -> getSocialNetworkPostScoreFormat
    java.lang.String getScoreResultFormat() -> getScoreResultFormat
    com.scoreloop.client.android.core.model.ScoreFormatter getScoreFormatter() -> getScoreFormatter
    boolean isFeatureEnabled(com.scoreloop.client.android.ui.component.base.Configuration$Feature) -> isFeatureEnabled
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey loadScoreFormatProperty(java.util.Properties,java.lang.String) -> loadScoreFormatProperty
    boolean verifyBooleanProperty(java.lang.String,java.lang.String) -> verifyBooleanProperty
    void verifyConfiguration(android.content.Context,com.scoreloop.client.android.core.model.Session) -> verifyConfiguration
com.scoreloop.client.android.ui.component.base.Configuration$1 -> com.scoreloop.client.android.ui.component.base.c:
    com.scoreloop.client.android.ui.component.base.Configuration this$0 -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.ui.component.base.Configuration$ConfigurationException -> com.scoreloop.client.android.ui.component.base.a:
com.scoreloop.client.android.ui.component.base.Configuration$Feature -> com.scoreloop.client.android.ui.component.base.Configuration$Feature:
    com.scoreloop.client.android.ui.component.base.Configuration$Feature ACHIEVEMENT -> ACHIEVEMENT
    com.scoreloop.client.android.ui.component.base.Configuration$Feature ADDRESS_BOOK -> ADDRESS_BOOK
    com.scoreloop.client.android.ui.component.base.Configuration$Feature CHALLENGE -> CHALLENGE
    com.scoreloop.client.android.ui.component.base.Configuration$Feature NEWS -> NEWS
    boolean _isEnabled -> _isEnabled
    java.lang.String _propertyName -> _propertyName
    com.scoreloop.client.android.ui.component.base.Configuration$Feature[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String getPropertyName() -> getPropertyName
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    com.scoreloop.client.android.ui.component.base.Configuration$Feature[] values() -> values
    com.scoreloop.client.android.ui.component.base.Configuration$Feature valueOf(java.lang.String) -> valueOf
    boolean access$2(com.scoreloop.client.android.ui.component.base.Configuration$Feature) -> access$2
com.scoreloop.client.android.ui.component.base.Constant -> com.scoreloop.client.android.ui.component.base.Constant:
    java.lang.String ACHIEVEMENTS_ENGINE -> ACHIEVEMENTS_ENGINE
    java.lang.String NAVIGATION_INTENT -> NAVIGATION_INTENT
    java.lang.String NAVIGATION_DIALOG_CONTINUATION -> NAVIGATION_DIALOG_CONTINUATION
    java.lang.String NAVIGATION_ALLOWED -> NAVIGATION_ALLOWED
    java.lang.String CHALLENGE -> CHALLENGE
    java.lang.String CHALLENGE_HEADER_MODE -> CHALLENGE_HEADER_MODE
    int CHALLENGE_HEADER_MODE_INFO -> CHALLENGE_HEADER_MODE_INFO
    int CHALLENGE_HEADER_MODE_BUY -> CHALLENGE_HEADER_MODE_BUY
    java.lang.String CONFIGURATION -> CONFIGURATION
    java.lang.String CONTESTANT -> CONTESTANT
    java.lang.String FACTORY -> FACTORY
    java.lang.String FEATURED_GAME -> FEATURED_GAME
    java.lang.String FEATURED_GAME_IMAGE_URL -> FEATURED_GAME_IMAGE_URL
    java.lang.String FEATURED_GAME_NAME -> FEATURED_GAME_NAME
    java.lang.String FEATURED_GAME_PUBLISHER -> FEATURED_GAME_PUBLISHER
    java.lang.String GAME -> GAME
    java.lang.String GAME_HEADER_CONTROL -> GAME_HEADER_CONTROL
    java.lang.String GAME_IMAGE_URL -> GAME_IMAGE_URL
    java.lang.String GAME_LIST_MODE -> GAME_LIST_MODE
    int GAME_MODE_BUDDIES -> GAME_MODE_BUDDIES
    int GAME_MODE_LAST -> GAME_MODE_LAST
    int GAME_MODE_NEW -> GAME_MODE_NEW
    int GAME_MODE_POPULAR -> GAME_MODE_POPULAR
    int GAME_MODE_USER -> GAME_MODE_USER
    java.lang.String GAME_NAME -> GAME_NAME
    java.lang.String GAME_PUBLISHER -> GAME_PUBLISHER
    java.lang.String GAME_VALUES -> GAME_VALUES
    java.lang.String IMAGE_URL_BUDDIES_GAMES -> IMAGE_URL_BUDDIES_GAMES
    java.lang.String IMAGE_URL_NEW_GAMES -> IMAGE_URL_NEW_GAMES
    java.lang.String IMAGE_URL_USER_GAMES -> IMAGE_URL_USER_GAMES
    java.lang.String IMAGE_URL_POPULAR_GAMES -> IMAGE_URL_POPULAR_GAMES
    int DIALOG_ERROR_NETWORK -> DIALOG_ERROR_NETWORK
    int DIALOG_CHALLENGE_ERROR_BALANCE -> DIALOG_CHALLENGE_ERROR_BALANCE
    int DIALOG_CHALLENGE_ERROR_ACCEPT -> DIALOG_CHALLENGE_ERROR_ACCEPT
    int DIALOG_CHALLENGE_ERROR_REJECT -> DIALOG_CHALLENGE_ERROR_REJECT
    int DIALOG_CHALLENGE_LEAVE_ACCEPT -> DIALOG_CHALLENGE_LEAVE_ACCEPT
    int DIALOG_CHALLENGE_ONGOING -> DIALOG_CHALLENGE_ONGOING
    int DIALOG_CHALLENGE_GAME_NOT_READY -> DIALOG_CHALLENGE_GAME_NOT_READY
    int DIALOG_CHALLENGE_LEAVE_PAYMENT -> DIALOG_CHALLENGE_LEAVE_PAYMENT
    int DIALOG_CONFIRMATION_MATCH_BUDDIES -> DIALOG_CONFIRMATION_MATCH_BUDDIES
    int DIALOG_CONFIRMATION_RECOMMEND_GAME -> DIALOG_CONFIRMATION_RECOMMEND_GAME
    int DIALOG_PROFILE_CHANGE_USERNAME -> DIALOG_PROFILE_CHANGE_USERNAME
    int DIALOG_PROFILE_CHANGE_EMAIL -> DIALOG_PROFILE_CHANGE_EMAIL
    int DIALOG_PROFILE_FIRST_TIME -> DIALOG_PROFILE_FIRST_TIME
    int DIALOG_PROFILE_MSG -> DIALOG_PROFILE_MSG
    int DIALOG_PROFILE_MERGE_ACCOUNTS -> DIALOG_PROFILE_MERGE_ACCOUNTS
    int DIALOG_GAME_MODE -> DIALOG_GAME_MODE
    int DIALOG_ADD_FRIEND_LOGIN -> DIALOG_ADD_FRIEND_LOGIN
    int LEADERBOARD_LOCAL -> LEADERBOARD_LOCAL
    java.lang.String IS_LOCAL_LEADEARBOARD -> IS_LOCAL_LEADEARBOARD
    int LIST_ITEM_TYPE_ACHIEVEMENT -> LIST_ITEM_TYPE_ACHIEVEMENT
    int LIST_ITEM_TYPE_CAPTION -> LIST_ITEM_TYPE_CAPTION
    int LIST_ITEM_TYPE_CHALLENGE_CONTROLS -> LIST_ITEM_TYPE_CHALLENGE_CONTROLS
    int LIST_ITEM_TYPE_CHALLENGE_HISTORY -> LIST_ITEM_TYPE_CHALLENGE_HISTORY
    int LIST_ITEM_TYPE_CHALLENGE_NEW -> LIST_ITEM_TYPE_CHALLENGE_NEW
    int LIST_ITEM_TYPE_CHALLENGE_OPEN -> LIST_ITEM_TYPE_CHALLENGE_OPEN
    int LIST_ITEM_TYPE_CHALLENGE_PARTICIPANTS -> LIST_ITEM_TYPE_CHALLENGE_PARTICIPANTS
    int LIST_ITEM_TYPE_CHALLENGE_STAKE_AND_MODE -> LIST_ITEM_TYPE_CHALLENGE_STAKE_AND_MODE
    int LIST_ITEM_TYPE_ENTRY -> LIST_ITEM_TYPE_ENTRY
    int LIST_ITEM_TYPE_EXPANDABLE -> LIST_ITEM_TYPE_EXPANDABLE
    int LIST_ITEM_TYPE_GAME -> LIST_ITEM_TYPE_GAME
    int LIST_ITEM_TYPE_GAME_DETAIL -> LIST_ITEM_TYPE_GAME_DETAIL
    int LIST_ITEM_TYPE_GAME_DETAIL_USER -> LIST_ITEM_TYPE_GAME_DETAIL_USER
    int LIST_ITEM_TYPE_NEWS -> LIST_ITEM_TYPE_NEWS
    int LIST_ITEM_TYPE_EMPTY -> LIST_ITEM_TYPE_EMPTY
    int LIST_ITEM_TYPE_PAGING -> LIST_ITEM_TYPE_PAGING
    int LIST_ITEM_TYPE_PROFILE -> LIST_ITEM_TYPE_PROFILE
    int LIST_ITEM_TYPE_PROFILE_PICTURE -> LIST_ITEM_TYPE_PROFILE_PICTURE
    int LIST_ITEM_TYPE_SCORE -> LIST_ITEM_TYPE_SCORE
    int LIST_ITEM_TYPE_SCORE_EXCLUDED -> LIST_ITEM_TYPE_SCORE_EXCLUDED
    int LIST_ITEM_TYPE_SCORE_HIGHLIGHTED -> LIST_ITEM_TYPE_SCORE_HIGHLIGHTED
    int LIST_ITEM_TYPE_SCORE_SUBMIT_LOCAL -> LIST_ITEM_TYPE_SCORE_SUBMIT_LOCAL
    int LIST_ITEM_TYPE_STANDARD -> LIST_ITEM_TYPE_STANDARD
    int LIST_ITEM_TYPE_USER -> LIST_ITEM_TYPE_USER
    int LIST_ITEM_TYPE_USER_ADD_BUDDIES -> LIST_ITEM_TYPE_USER_ADD_BUDDIES
    int LIST_ITEM_TYPE_USER_ADD_BUDDY -> LIST_ITEM_TYPE_USER_ADD_BUDDY
    int LIST_ITEM_TYPE_USER_DETAIL -> LIST_ITEM_TYPE_USER_DETAIL
    int LIST_ITEM_TYPE_USER_FIND_MATCH -> LIST_ITEM_TYPE_USER_FIND_MATCH
    int LIST_ITEM_TYPE_X_COUNT -> LIST_ITEM_TYPE_X_COUNT
    java.lang.String MANAGER -> MANAGER
    long MARKET_REFRESH_TIME -> MARKET_REFRESH_TIME
    java.lang.String MODE -> MODE
    java.lang.String NEWS_FEED -> NEWS_FEED
    long NEWS_FEED_REFRESH_TIME -> NEWS_FEED_REFRESH_TIME
    java.lang.String NEWS_NUMBER_UNREAD_ITEMS -> NEWS_NUMBER_UNREAD_ITEMS
    java.lang.String NUMBER_ACHIEVEMENTS -> NUMBER_ACHIEVEMENTS
    java.lang.String NUMBER_AWARDS -> NUMBER_AWARDS
    java.lang.String NUMBER_BUDDIES -> NUMBER_BUDDIES
    java.lang.String NUMBER_CHALLENGES_PLAYED -> NUMBER_CHALLENGES_PLAYED
    java.lang.String NUMBER_CHALLENGES_WON -> NUMBER_CHALLENGES_WON
    java.lang.String NUMBER_GAMES -> NUMBER_GAMES
    java.lang.String NUMBER_GLOBAL_ACHIEVEMENTS -> NUMBER_GLOBAL_ACHIEVEMENTS
    java.lang.String SEARCH_LIST -> SEARCH_LIST
    java.lang.String SESSION_GAME_VALUES -> SESSION_GAME_VALUES
    java.lang.String SESSION_USER_VALUES -> SESSION_USER_VALUES
    java.lang.String TRACKER -> TRACKER
    java.lang.String USER -> USER
    java.lang.String USER_BALANCE -> USER_BALANCE
    java.lang.String USER_BUDDIES -> USER_BUDDIES
    java.lang.String USER_IMAGE_URL -> USER_IMAGE_URL
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String USER_PLAYS_SESSION_GAME -> USER_PLAYS_SESSION_GAME
    java.lang.String USER_VALUES -> USER_VALUES
    int MIN_RANGE_LENGTH -> MIN_RANGE_LENGTH
    void setup() -> setup
    int getOptimalRangeLength(android.view.View,com.scoreloop.client.android.ui.framework.BaseListItem) -> getOptimalRangeLength
com.scoreloop.client.android.ui.component.base.EmptyListItem -> com.scoreloop.client.android.ui.component.base.EmptyListItem:
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.base.ExpandableListItem -> com.scoreloop.client.android.ui.component.base.ExpandableListItem:
    int COLLAPSED_LIMIT -> COLLAPSED_LIMIT
    int getLayoutId() -> getLayoutId
    int getType() -> getType
com.scoreloop.client.android.ui.component.base.Factory -> com.scoreloop.client.android.ui.component.base.Factory:
    com.scoreloop.client.android.ui.framework.ScreenDescription createAchievementScreenDescription(com.scoreloop.client.android.core.model.User) -> createAchievementScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createChallengeAcceptScreenDescription(com.scoreloop.client.android.core.model.Challenge) -> createChallengeAcceptScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createChallengeCreateScreenDescription(com.scoreloop.client.android.core.model.User,java.lang.Integer) -> createChallengeCreateScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createChallengePaymentScreenDescription() -> createChallengePaymentScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createChallengeScreenDescription(com.scoreloop.client.android.core.model.User) -> createChallengeScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createGameDetailScreenDescription(com.scoreloop.client.android.core.model.Game) -> createGameDetailScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createGameScreenDescription(com.scoreloop.client.android.core.model.User,int) -> createGameScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createMarketScreenDescription(com.scoreloop.client.android.core.model.User) -> createMarketScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createNewsScreenDescription() -> createNewsScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createProfileSettingsPictureScreenDescription(com.scoreloop.client.android.core.model.User) -> createProfileSettingsPictureScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createProfileSettingsScreenDescription(com.scoreloop.client.android.core.model.User) -> createProfileSettingsScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createScoreScreenDescription(com.scoreloop.client.android.core.model.Game,java.lang.Integer,java.lang.Integer) -> createScoreScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createUserAddBuddyScreenDescription() -> createUserAddBuddyScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createUserDetailScreenDescription(com.scoreloop.client.android.core.model.User,java.lang.Boolean) -> createUserDetailScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createUserScreenDescription(com.scoreloop.client.android.core.model.User) -> createUserScreenDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription createEntryScreenDescription() -> createEntryScreenDescription
com.scoreloop.client.android.ui.component.base.Manager -> com.scoreloop.client.android.ui.component.base.Manager:
    boolean canStartGamePlay() -> canStartGamePlay
    boolean isChallengeOngoing() -> isChallengeOngoing
    void startGamePlay(java.lang.Integer,com.scoreloop.client.android.core.model.Challenge) -> startGamePlay
    void submitLocalScores(java.lang.Runnable) -> submitLocalScores
    void persistSessionUserName() -> persistSessionUserName
com.scoreloop.client.android.ui.component.base.PackageManager -> com.scoreloop.client.android.ui.component.base.PackageManager:
    java.lang.String[] SCORELOOP_APP_PACKAGE_NAMES -> SCORELOOP_APP_PACKAGE_NAMES
    void download(android.content.Context,java.lang.String) -> download
    void installScoreloopApp(android.content.Context) -> installScoreloopApp
    void installGame(android.content.Context,com.scoreloop.client.android.core.model.Game) -> installGame
    android.content.Intent getLaunchIntentForPackage(android.content.Context,java.lang.String[]) -> getLaunchIntentForPackage
    void launchGame(android.content.Context,com.scoreloop.client.android.core.model.Game) -> launchGame
    boolean isScoreloopAppInstalled(android.content.Context) -> isScoreloopAppInstalled
    boolean isGameInstalled(android.content.Context,com.scoreloop.client.android.core.model.Game) -> isGameInstalled
com.scoreloop.client.android.ui.component.base.RoundCornerImageView -> com.scoreloop.client.android.ui.component.base.RoundCornerImageView:
    void onDraw(android.graphics.Canvas) -> onDraw
com.scoreloop.client.android.ui.component.base.StandardListItem -> com.scoreloop.client.android.ui.component.base.StandardListItem:
    com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder _holder -> _holder
    java.lang.String _subTitel -> _subTitel
    java.lang.String _subTitle2 -> _subTitle2
    java.lang.Object _target -> _target
    com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder createViewHolder() -> createViewHolder
    void fillViewHolder(android.view.View,com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder) -> fillViewHolder
    com.scoreloop.client.android.ui.component.base.ComponentActivity getComponentActivity() -> getComponentActivity
    int getIconId() -> getIconId
    java.lang.String getImageUrl() -> getImageUrl
    int getLayoutId() -> getLayoutId
    java.lang.String getSubTitle() -> getSubTitle
    java.lang.String getSubTitle2() -> getSubTitle2
    void setSubTitle2(java.lang.String) -> setSubTitle2
    int getSubTitleId() -> getSubTitleId
    int getSubTitle2Id() -> getSubTitle2Id
    java.lang.Object getTarget() -> getTarget
    int getTitleId() -> getTitleId
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    void setSubTitle(java.lang.String) -> setSubTitle
    void updateViews(com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder) -> updateViews
    android.graphics.drawable.Drawable getDrawableLoading() -> getDrawableLoading
    android.graphics.drawable.Drawable getDrawableLoadingError() -> getDrawableLoadingError
com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder -> com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder:
    android.widget.ImageView icon -> icon
    android.widget.TextView title -> title
    android.widget.TextView subTitle -> subTitle
    android.widget.TextView subTitle2 -> subTitle2
com.scoreloop.client.android.ui.component.base.StringFormatter -> com.scoreloop.client.android.ui.component.base.StringFormatter:
    java.math.BigDecimal CENTS_FOR_UNIT -> CENTS_FOR_UNIT
    int ROUND_TO_PERCENT -> ROUND_TO_PERCENT
    java.lang.String formatChallengesScore(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.ui.component.base.Configuration) -> formatChallengesScore
    java.lang.String formatLeaderboardsScore(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.ui.component.base.Configuration) -> formatLeaderboardsScore
    java.lang.String formatMoney(com.scoreloop.client.android.core.model.Money,com.scoreloop.client.android.ui.component.base.Configuration) -> formatMoney
    java.lang.String formatRanking(android.content.Context,com.scoreloop.client.android.core.model.Ranking,com.scoreloop.client.android.ui.component.base.Configuration) -> formatRanking
    java.lang.String formatScore(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.ui.component.base.Configuration) -> formatScore
    java.lang.String formatSocialNetworkPostScore(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.ui.component.base.Configuration) -> formatSocialNetworkPostScore
    java.lang.String getAchievementsSubTitle(android.content.Context,com.scoreloop.client.android.ui.framework.ValueStore,boolean) -> getAchievementsSubTitle
    java.lang.String getBalanceSubTitle(android.content.Context,com.scoreloop.client.android.ui.framework.ValueStore,com.scoreloop.client.android.ui.component.base.Configuration) -> getBalanceSubTitle
    java.lang.String getBuddiesSubTitle(android.content.Context,com.scoreloop.client.android.ui.framework.ValueStore) -> getBuddiesSubTitle
    java.lang.String getChallengesSubTitle(android.content.Context,com.scoreloop.client.android.ui.framework.ValueStore) -> getChallengesSubTitle
    java.lang.String getGamesSubTitle(android.content.Context,com.scoreloop.client.android.ui.framework.ValueStore) -> getGamesSubTitle
    android.graphics.drawable.Drawable getNewsDrawable(android.content.Context,com.scoreloop.client.android.ui.framework.ValueStore,boolean) -> getNewsDrawable
    java.lang.String getNewsSubTitle(android.content.Context,com.scoreloop.client.android.ui.framework.ValueStore) -> getNewsSubTitle
    java.lang.String getScoreTitle(android.content.Context,com.scoreloop.client.android.core.model.Score) -> getScoreTitle
com.scoreloop.client.android.ui.component.base.Tracker -> com.scoreloop.client.android.ui.component.base.Tracker:
    void trackPageView(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore) -> trackPageView
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,int) -> trackEvent
com.scoreloop.client.android.ui.component.base.TrackerEvents -> com.scoreloop.client.android.ui.component.base.TrackerEvents:
    java.lang.String CAT_NAVI -> CAT_NAVI
    java.lang.String NAVI_SHORTCUT_ACTIVITIES -> NAVI_SHORTCUT_ACTIVITIES
    java.lang.String NAVI_SHORTCUT_FRIENDS -> NAVI_SHORTCUT_FRIENDS
    java.lang.String NAVI_SHORTCUT_ACCOUNT_SETTINGS -> NAVI_SHORTCUT_ACCOUNT_SETTINGS
    java.lang.String NAVI_SHORTCUT_MARKET -> NAVI_SHORTCUT_MARKET
    java.lang.String NAVI_OM_OPENED -> NAVI_OM_OPENED
    java.lang.String NAVI_OM_ACCOUNT_SETTINGS -> NAVI_OM_ACCOUNT_SETTINGS
    java.lang.String NAVI_OM_USER_REMOVE -> NAVI_OM_USER_REMOVE
    java.lang.String NAVI_OM_USER_INAPPROPRIATE -> NAVI_OM_USER_INAPPROPRIATE
    java.lang.String NAVI_HEADER_ACCOUNTSETTINGS -> NAVI_HEADER_ACCOUNTSETTINGS
    java.lang.String NAVI_HEADER_GAME_GET -> NAVI_HEADER_GAME_GET
    java.lang.String NAVI_HEADER_GAME_LAUNCH -> NAVI_HEADER_GAME_LAUNCH
    java.lang.String NAVI_HEADER_GAME_FEATURED -> NAVI_HEADER_GAME_FEATURED
    java.lang.String NAVI_DIALOG -> NAVI_DIALOG
    java.lang.String CAT_REQUEST -> CAT_REQUEST
    java.lang.String REQ_CHANGE_USERNAME_FIRSTTIME -> REQ_CHANGE_USERNAME_FIRSTTIME
    java.lang.String REQ_CHANGE_EMAIL -> REQ_CHANGE_EMAIL
    java.lang.String REQ_CHANGE_USERNAME -> REQ_CHANGE_USERNAME
    java.lang.String REQ_MERGE_ACCOUNT -> REQ_MERGE_ACCOUNT
    java.lang.String LABEL_SUCCESS -> LABEL_SUCCESS
    java.lang.String LABEL_ERROR -> LABEL_ERROR
com.scoreloop.client.android.ui.component.challenge.ChallengeAcceptListActivity -> com.scoreloop.client.android.ui.component.challenge.ChallengeAcceptListActivity:
    com.scoreloop.client.android.core.model.Challenge _challenge -> _challenge
    com.scoreloop.client.android.ui.component.challenge.ChallengeParticipantsListItem _challengeParticipantsListItem -> _challengeParticipantsListItem
    boolean _isNavigationAllowed -> _isNavigationAllowed
    com.scoreloop.client.android.ui.framework.OkCancelDialog _navigationDialog -> _navigationDialog
    com.scoreloop.client.android.ui.framework.NavigationIntent _navigationIntent -> _navigationIntent
    java.lang.Runnable _navigationDialogContinuation -> _navigationDialogContinuation
    com.scoreloop.client.android.ui.framework.ValueStore _opponentValueStore -> _opponentValueStore
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void challengeControllerDidFailOnInsufficientBalance(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailOnInsufficientBalance
    void challengeControllerDidFailToAcceptChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToAcceptChallenge
    void challengeControllerDidFailToRejectChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToRejectChallenge
    void doAfterNavigationDialog(java.lang.Runnable) -> doAfterNavigationDialog
    com.scoreloop.client.android.ui.component.base.CaptionListItem getCaptionListItem() -> getCaptionListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem getChallengeControlsListItem() -> getChallengeControlsListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeParticipantsListItem getChallengeParticipantsListItem() -> getChallengeParticipantsListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsListItem getChallengeStakeAndModeListItem() -> getChallengeStakeAndModeListItem
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    boolean isNavigationAllowed(com.scoreloop.client.android.ui.framework.NavigationIntent) -> isNavigationAllowed
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
    void onControl1() -> onControl1
    void onControl2() -> onControl2
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onNavigationDialogFinished() -> onNavigationDialogFinished
    void onRefresh(int) -> onRefresh
    void onResume() -> onResume
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void requestControllerDidFailSafe(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFailSafe
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void startChallenge() -> startChallenge
    void access$0(com.scoreloop.client.android.ui.component.challenge.ChallengeAcceptListActivity) -> access$0
    void access$1(com.scoreloop.client.android.ui.component.challenge.ChallengeAcceptListActivity) -> access$1
com.scoreloop.client.android.ui.component.challenge.ChallengeAcceptListActivity$1 -> com.scoreloop.client.android.ui.component.challenge.e:
    com.scoreloop.client.android.ui.component.challenge.ChallengeAcceptListActivity this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.component.challenge.ChallengeAcceptListActivity$2 -> com.scoreloop.client.android.ui.component.challenge.f:
    com.scoreloop.client.android.ui.component.challenge.ChallengeAcceptListActivity this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.component.challenge.ChallengeActionListActivity -> com.scoreloop.client.android.ui.component.challenge.ChallengeActionListActivity:
    com.scoreloop.client.android.ui.component.base.CaptionListItem getCaptionListItem() -> getCaptionListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem getChallengeControlsListItem() -> getChallengeControlsListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeParticipantsListItem getChallengeParticipantsListItem() -> getChallengeParticipantsListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsListItem getChallengeStakeAndModeListItem() -> getChallengeStakeAndModeListItem
    void initAdapter() -> initAdapter
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    boolean challengeGamePlayAllowed() -> challengeGamePlayAllowed
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem -> com.scoreloop.client.android.ui.component.challenge.l:
    com.scoreloop.client.android.core.model.Challenge _challenge -> a
    boolean _controlsEnabled -> b
    com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem$OnControlObserver _onControlObserver -> c
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    boolean access$0(com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem) -> a
    void access$1$72b086f6(com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem) -> b
    com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem$OnControlObserver access$2(com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem) -> c
com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem$1 -> com.scoreloop.client.android.ui.component.challenge.a:
    com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem this$0 -> a
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem$2 -> com.scoreloop.client.android.ui.component.challenge.b:
    com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem this$0 -> a
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem$OnControlObserver -> com.scoreloop.client.android.ui.component.challenge.h:
    void onControl1() -> onControl1
    void onControl2() -> onControl2
com.scoreloop.client.android.ui.component.challenge.ChallengeCreateListActivity -> com.scoreloop.client.android.ui.component.challenge.ChallengeCreateListActivity:
    com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem _challengeControlsListItem -> _challengeControlsListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeParticipantsListItem _challengeParticipantsListItem -> _challengeParticipantsListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem _challengeStakeAndModeEditListItem -> _challengeStakeAndModeEditListItem
    com.scoreloop.client.android.core.model.User _contestant -> _contestant
    com.scoreloop.client.android.ui.framework.ValueStore _opponentValueStore -> _opponentValueStore
    void challengeControllerDidFailOnInsufficientBalance(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailOnInsufficientBalance
    void challengeControllerDidFailToAcceptChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToAcceptChallenge
    void challengeControllerDidFailToRejectChallenge(com.scoreloop.client.android.core.controller.ChallengeController) -> challengeControllerDidFailToRejectChallenge
    com.scoreloop.client.android.ui.component.base.CaptionListItem getCaptionListItem() -> getCaptionListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeControlsListItem getChallengeControlsListItem() -> getChallengeControlsListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeParticipantsListItem getChallengeParticipantsListItem() -> getChallengeParticipantsListItem
    com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsListItem getChallengeStakeAndModeListItem() -> getChallengeStakeAndModeListItem
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
    void onControl1() -> onControl1
    void onControl2() -> onControl2
    void onCreate(android.os.Bundle) -> onCreate
    void onRefresh(int) -> onRefresh
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
com.scoreloop.client.android.ui.component.challenge.ChallengeCreateListItem -> com.scoreloop.client.android.ui.component.challenge.ChallengeCreateListItem:
    int getSubTitleId() -> getSubTitleId
    int getType() -> getType
    int getLayoutId() -> getLayoutId
    java.lang.String getImageUrl() -> getImageUrl
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.challenge.ChallengeHeaderActivity -> com.scoreloop.client.android.ui.component.challenge.ChallengeHeaderActivity:
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void showControlIcon(int) -> showControlIcon
    void onStart() -> onStart
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
com.scoreloop.client.android.ui.component.challenge.ChallengeHistoryListItem -> com.scoreloop.client.android.ui.component.challenge.ChallengeHistoryListItem:
    com.scoreloop.client.android.core.model.Challenge _challenge -> _challenge
    boolean _showPrize -> _showPrize
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    void fillView(com.scoreloop.client.android.ui.component.challenge.ChallengeHistoryListItem$ViewHolder,android.graphics.drawable.Drawable,java.lang.String,java.lang.String,java.lang.String) -> fillView
    com.scoreloop.client.android.ui.component.base.ComponentActivity getComponentActivity() -> getComponentActivity
    void prepareView(com.scoreloop.client.android.ui.component.challenge.ChallengeHistoryListItem$ViewHolder) -> prepareView
    void setShowPrize(boolean) -> setShowPrize
com.scoreloop.client.android.ui.component.challenge.ChallengeHistoryListItem$ViewHolder -> com.scoreloop.client.android.ui.component.challenge.m:
    android.widget.TextView contenderName -> a
    android.widget.TextView contenderScore -> b
    android.widget.TextView contestantName -> c
    android.widget.TextView contestantScore -> d
    android.widget.ImageView icon -> e
    android.widget.TextView prize -> f
    android.widget.LinearLayout scores -> g
com.scoreloop.client.android.ui.component.challenge.ChallengeListActivity -> com.scoreloop.client.android.ui.component.challenge.ChallengeListActivity:
    java.util.List _buddies -> _buddies
    com.scoreloop.client.android.ui.component.base.ExpandableListItem _expandableHistoryListItem -> _expandableHistoryListItem
    com.scoreloop.client.android.ui.component.base.ExpandableListItem _expandableOpenListItem -> _expandableOpenListItem
    java.util.List _history -> _history
    com.scoreloop.client.android.core.controller.ChallengesController _historyController -> _historyController
    java.util.List _open -> _open
    com.scoreloop.client.android.core.controller.ChallengesController _openController -> _openController
    boolean _showPrize -> _showPrize
    boolean _showSeeMoreHistory -> _showSeeMoreHistory
    boolean _showSeeMoreOpen -> _showSeeMoreOpen
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void onRefresh(int) -> onRefresh
    void onStart() -> onStart
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void updateListIfReady() -> updateListIfReady
com.scoreloop.client.android.ui.component.challenge.ChallengeOpenListItem -> com.scoreloop.client.android.ui.component.challenge.ChallengeOpenListItem:
    java.lang.String getImageUrl() -> getImageUrl
    int getType() -> getType
    int getLayoutId() -> getLayoutId
    int getSubTitle2Id() -> getSubTitle2Id
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.challenge.ChallengeParticipantsListItem -> com.scoreloop.client.android.ui.component.challenge.g:
    com.scoreloop.client.android.core.model.User _contender -> a
    java.lang.String _contenderStats -> b
    com.scoreloop.client.android.core.model.User _contestant -> c
    java.lang.String _contestantStats -> d
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    android.graphics.drawable.Drawable getDrawableLoading() -> a
    void setContenderStats(java.lang.String) -> a
    void setContestantStats(java.lang.String) -> b
com.scoreloop.client.android.ui.component.challenge.ChallengePaymentActivity -> com.scoreloop.client.android.ui.component.challenge.ChallengePaymentActivity:
    com.scoreloop.client.android.ui.framework.NavigationIntent _navigationIntent -> _navigationIntent
    android.webkit.WebView _webView -> _webView
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    boolean isNavigationAllowed(com.scoreloop.client.android.ui.framework.NavigationIntent) -> isNavigationAllowed
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    void access$0(com.scoreloop.client.android.ui.component.challenge.ChallengePaymentActivity) -> access$0
    void access$1(com.scoreloop.client.android.ui.component.challenge.ChallengePaymentActivity) -> access$1
com.scoreloop.client.android.ui.component.challenge.ChallengePaymentActivity$PaymentWebViewClient -> com.scoreloop.client.android.ui.component.challenge.k:
    boolean _showsSpinner -> a
    com.scoreloop.client.android.ui.component.challenge.ChallengePaymentActivity this$0 -> b
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem -> com.scoreloop.client.android.ui.component.challenge.c:
    java.util.List stakes -> a
    int _modePosition -> b
    int _stakePosition -> c
    java.lang.Integer getMode() -> a
    com.scoreloop.client.android.core.model.Money getStake() -> b
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    void prepareView(android.view.View) -> a
    void updateStakeText(android.widget.TextView) -> a
    void access$0(com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem,int) -> a
    void access$1(com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem,int) -> b
    void access$2(com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem,android.widget.TextView) -> a
com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem$1 -> com.scoreloop.client.android.ui.component.challenge.j:
    com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem$2 -> com.scoreloop.client.android.ui.component.challenge.i:
    com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem$ViewHolder -> com.scoreloop.client.android.ui.component.challenge.d:
    android.widget.TextView stakeText -> a
    com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsEditListItem this$0 -> b
com.scoreloop.client.android.ui.component.challenge.ChallengeSettingsListItem -> com.scoreloop.client.android.ui.component.challenge.n:
    com.scoreloop.client.android.core.model.Challenge _challenge -> a
    com.scoreloop.client.android.ui.component.base.ComponentActivity getComponentActivity() -> c
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    void prepareView(android.view.View) -> a
com.scoreloop.client.android.ui.component.entry.EntryListActivity -> com.scoreloop.client.android.ui.component.entry.EntryListActivity:
    com.scoreloop.client.android.ui.component.entry.EntryListItem achievementsItem -> achievementsItem
    com.scoreloop.client.android.ui.component.entry.EntryListItem challengesItem -> challengesItem
    com.scoreloop.client.android.ui.component.entry.EntryListItem leaderboardsItem -> leaderboardsItem
    com.scoreloop.client.android.ui.component.entry.EntryListItem newsItem -> newsItem
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void onResume() -> onResume
    void onFooterItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onFooterItemClick
    void access$0(com.scoreloop.client.android.ui.component.entry.EntryListActivity,com.scoreloop.client.android.ui.component.entry.EntryListItem) -> access$0
    com.scoreloop.client.android.ui.component.entry.EntryListItem access$1(com.scoreloop.client.android.ui.component.entry.EntryListActivity) -> access$1
    void access$2(com.scoreloop.client.android.ui.component.entry.EntryListActivity,com.scoreloop.client.android.ui.component.entry.EntryListItem) -> access$2
    com.scoreloop.client.android.ui.component.entry.EntryListItem access$3(com.scoreloop.client.android.ui.component.entry.EntryListActivity) -> access$3
    void access$4(com.scoreloop.client.android.ui.component.entry.EntryListActivity,com.scoreloop.client.android.ui.component.entry.EntryListItem) -> access$4
    com.scoreloop.client.android.ui.component.entry.EntryListItem access$5(com.scoreloop.client.android.ui.component.entry.EntryListActivity) -> access$5
    void access$6(com.scoreloop.client.android.ui.component.entry.EntryListActivity,com.scoreloop.client.android.ui.component.entry.EntryListItem) -> access$6
    com.scoreloop.client.android.ui.component.entry.EntryListItem access$7(com.scoreloop.client.android.ui.component.entry.EntryListActivity) -> access$7
com.scoreloop.client.android.ui.component.entry.EntryListActivity$EntryListAdapter -> com.scoreloop.client.android.ui.component.entry.a:
    com.scoreloop.client.android.ui.component.entry.EntryListActivity this$0 -> a
com.scoreloop.client.android.ui.component.entry.EntryListItem -> com.scoreloop.client.android.ui.component.entry.EntryListItem:
    int getIconId() -> getIconId
    int getLayoutId() -> getLayoutId
    int getSubTitleId() -> getSubTitleId
    int getTitleId() -> getTitleId
    int getType() -> getType
com.scoreloop.client.android.ui.component.game.GameDetailHeaderActivity -> com.scoreloop.client.android.ui.component.game.GameDetailHeaderActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onRefresh(int) -> onRefresh
com.scoreloop.client.android.ui.component.game.GameDetailHeaderActivity$1 -> com.scoreloop.client.android.ui.component.game.b:
    com.scoreloop.client.android.ui.component.game.GameDetailHeaderActivity this$0 -> a
    com.scoreloop.client.android.core.model.Game val$game -> b
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.ui.component.game.GameDetailHeaderActivity$2 -> com.scoreloop.client.android.ui.component.game.c:
    com.scoreloop.client.android.ui.component.game.GameDetailHeaderActivity this$0 -> a
    com.scoreloop.client.android.core.model.Game val$game -> b
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.ui.component.game.GameDetailListActivity -> com.scoreloop.client.android.ui.component.game.GameDetailListActivity:
    com.scoreloop.client.android.core.controller.UsersController _usersController -> _usersController
    void addUsers(com.scoreloop.client.android.ui.framework.BaseListAdapter,java.util.List) -> addUsers
    void onCreate(android.os.Bundle) -> onCreate
    void onRefresh(int) -> onRefresh
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
com.scoreloop.client.android.ui.component.game.GameDetailListActivity$GameDetailListAdapter -> com.scoreloop.client.android.ui.component.game.a:
    com.scoreloop.client.android.ui.component.game.GameDetailListActivity this$0 -> a
com.scoreloop.client.android.ui.component.game.GameDetailListItem -> com.scoreloop.client.android.ui.component.game.GameDetailListItem:
    com.scoreloop.client.android.core.model.Game _game -> _game
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.game.GameDetailUserListItem -> com.scoreloop.client.android.ui.component.game.GameDetailUserListItem:
    java.lang.String getImageUrl() -> getImageUrl
    int getLayoutId() -> getLayoutId
    int getType() -> getType
com.scoreloop.client.android.ui.component.game.GameListActivity -> com.scoreloop.client.android.ui.component.game.GameListActivity:
    com.scoreloop.client.android.core.controller.GamesController _gamesController -> _gamesController
    int _mode -> _mode
    com.scoreloop.client.android.ui.framework.PagingDirection _pagingDirection -> _pagingDirection
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection -> $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection
    void onCreate(android.os.Bundle) -> onCreate
    void setNeedsRefresh(com.scoreloop.client.android.ui.framework.PagingDirection) -> setNeedsRefresh
    com.scoreloop.client.android.ui.framework.PagingListAdapter getPagingListAdapter() -> getPagingListAdapter
    void onGames(java.util.List) -> onGames
    void onListItemClick(com.scoreloop.client.android.ui.component.game.GameListItem) -> onListItemClick
    void onRefresh(int) -> onRefresh
    void onRefreshBuddies() -> onRefreshBuddies
    void onRefreshNew() -> onRefreshNew
    void onRefreshPopular() -> onRefreshPopular
    void onRefreshUser() -> onRefreshUser
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void onPagingListItemClick(com.scoreloop.client.android.ui.framework.PagingDirection) -> onPagingListItemClick
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    com.scoreloop.client.android.ui.framework.PagingDirection access$1(com.scoreloop.client.android.ui.component.game.GameListActivity) -> access$1
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection() -> $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection
com.scoreloop.client.android.ui.component.game.GameListActivity$1 -> com.scoreloop.client.android.ui.component.game.d:
    com.scoreloop.client.android.ui.component.game.GameListActivity this$0 -> a
    android.widget.ListView val$listView -> b
    com.scoreloop.client.android.ui.framework.PagingListAdapter val$adapter -> c
    void run() -> run
com.scoreloop.client.android.ui.component.game.GameListItem -> com.scoreloop.client.android.ui.component.game.GameListItem:
    java.lang.String getImageUrl() -> getImageUrl
    int getType() -> getType
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
com.scoreloop.client.android.ui.component.market.MarketHeaderActivity -> com.scoreloop.client.android.ui.component.market.MarketHeaderActivity:
    com.scoreloop.client.android.core.controller.GamesController _gamesController -> _gamesController
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void showControlIcon(int) -> showControlIcon
com.scoreloop.client.android.ui.component.market.MarketListActivity -> com.scoreloop.client.android.ui.component.market.MarketListActivity:
    com.scoreloop.client.android.ui.component.market.MarketListItem _buddiesGamesItem -> _buddiesGamesItem
    com.scoreloop.client.android.ui.component.market.MarketListItem _myGamesItem -> _myGamesItem
    com.scoreloop.client.android.ui.component.market.MarketListItem _newGamesItem -> _newGamesItem
    com.scoreloop.client.android.ui.component.market.MarketListItem _popularGamesItem -> _popularGamesItem
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    com.scoreloop.client.android.ui.component.market.MarketListItem access$0(com.scoreloop.client.android.ui.component.market.MarketListActivity) -> access$0
    com.scoreloop.client.android.ui.component.market.MarketListItem access$1(com.scoreloop.client.android.ui.component.market.MarketListActivity) -> access$1
    com.scoreloop.client.android.ui.component.market.MarketListItem access$2(com.scoreloop.client.android.ui.component.market.MarketListActivity) -> access$2
    com.scoreloop.client.android.ui.component.market.MarketListItem access$3(com.scoreloop.client.android.ui.component.market.MarketListActivity) -> access$3
com.scoreloop.client.android.ui.component.market.MarketListActivity$SocialMarketListAdapter -> com.scoreloop.client.android.ui.component.market.a:
    com.scoreloop.client.android.ui.component.market.MarketListActivity this$0 -> a
com.scoreloop.client.android.ui.component.market.MarketListItem -> com.scoreloop.client.android.ui.component.market.MarketListItem:
    java.lang.String _imageUrl -> _imageUrl
    java.lang.Integer _counter -> _counter
    void setCounter(java.lang.Integer) -> setCounter
    com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder createViewHolder() -> createViewHolder
    void fillViewHolder(android.view.View,com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder) -> fillViewHolder
    void updateViews(com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder) -> updateViews
    java.lang.String getImageUrl() -> getImageUrl
    void setImageUrl(java.lang.String) -> setImageUrl
    int getLayoutId() -> getLayoutId
com.scoreloop.client.android.ui.component.market.MarketListItem$MarketViewHolder -> com.scoreloop.client.android.ui.component.market.MarketListItem$MarketViewHolder:
    android.widget.TextView number -> number
com.scoreloop.client.android.ui.component.news.NewsHeaderActivity -> com.scoreloop.client.android.ui.component.news.NewsHeaderActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
com.scoreloop.client.android.ui.component.news.NewsListActivity -> com.scoreloop.client.android.ui.component.news.NewsListActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void onPause() -> onPause
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
com.scoreloop.client.android.ui.component.news.NewsListItem -> com.scoreloop.client.android.ui.component.news.NewsListItem:
    com.scoreloop.client.android.core.addon.RSSItem _item -> _item
    com.scoreloop.client.android.core.addon.RSSItem getItem() -> getItem
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.post.PostOverlayActivity -> com.scoreloop.client.android.ui.component.post.PostOverlayActivity:
    com.scoreloop.client.android.core.model.Entity _messageTarget -> _messageTarget
    int DIALOG_ERROR_NETWORK -> DIALOG_ERROR_NETWORK
    int DIALOG_CONNECT_FAILED -> DIALOG_CONNECT_FAILED
    int DIALOG_PROGRESS -> DIALOG_PROGRESS
    java.util.Map _checkboxToProviderMap -> _checkboxToProviderMap
    com.scoreloop.client.android.core.controller.MessageController _messageController -> _messageController
    android.widget.EditText _messageEditText -> _messageEditText
    android.widget.Button _noButton -> _noButton
    android.widget.Button _postButton -> _postButton
    java.util.Map _providerToCheckboxMap -> _providerToCheckboxMap
    android.os.Handler _handler -> _handler
    void setMessageTarget(com.scoreloop.client.android.core.model.Entity) -> setMessageTarget
    boolean isPosted(android.content.Context,com.scoreloop.client.android.core.model.Entity) -> isPosted
    void setPosted(android.content.Context,com.scoreloop.client.android.core.model.Entity) -> setPosted
    void addCheckbox(java.lang.String,int) -> addCheckbox
    void blockUI(boolean) -> blockUI
    android.app.Dialog createErrorDialog(int) -> createErrorDialog
    android.app.Dialog createProgressDialog() -> createProgressDialog
    com.scoreloop.client.android.core.model.Entity getMessageTarget() -> getMessageTarget
    java.lang.String getPostText() -> getPostText
    void onBackPressed() -> onBackPressed
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void socialProviderControllerDidCancel(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidCancel
    void socialProviderControllerDidEnterInvalidCredentials(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidEnterInvalidCredentials
    void socialProviderControllerDidFail(com.scoreloop.client.android.core.controller.SocialProviderController,java.lang.Throwable) -> socialProviderControllerDidFail
    void socialProviderControllerDidSucceed(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidSucceed
    void updateProviderCheckbox(com.scoreloop.client.android.core.model.SocialProvider) -> updateProviderCheckbox
    com.scoreloop.client.android.core.controller.MessageController access$0(com.scoreloop.client.android.ui.component.post.PostOverlayActivity) -> access$0
    java.util.Map access$1(com.scoreloop.client.android.ui.component.post.PostOverlayActivity) -> access$1
    android.widget.EditText access$2(com.scoreloop.client.android.ui.component.post.PostOverlayActivity) -> access$2
    void access$3(com.scoreloop.client.android.ui.component.post.PostOverlayActivity,boolean) -> access$3
com.scoreloop.client.android.ui.component.post.PostOverlayActivity$1 -> com.scoreloop.client.android.ui.component.post.a:
    com.scoreloop.client.android.ui.component.post.PostOverlayActivity this$0 -> a
    com.scoreloop.client.android.core.model.SocialProvider val$provider -> b
    void run() -> run
com.scoreloop.client.android.ui.component.post.PostOverlayActivity$2 -> com.scoreloop.client.android.ui.component.post.c:
    com.scoreloop.client.android.ui.component.post.PostOverlayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.ui.component.post.PostOverlayActivity$3 -> com.scoreloop.client.android.ui.component.post.b:
    com.scoreloop.client.android.ui.component.post.PostOverlayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.ui.component.profile.ErrorDialog -> com.scoreloop.client.android.ui.component.profile.ErrorDialog:
    java.lang.String _title -> _title
    java.lang.String _text -> _text
    int getContentViewLayoutId() -> getContentViewLayoutId
    void onClick(android.view.View) -> onClick
    void setTitle(java.lang.String) -> setTitle
    void setText(java.lang.String) -> setText
    void onCreate(android.os.Bundle) -> onCreate
    void updateUi() -> updateUi
com.scoreloop.client.android.ui.component.profile.FieldEditDialog -> com.scoreloop.client.android.ui.component.profile.FieldEditDialog:
    int BUTTON_OK -> BUTTON_OK
    int BUTTON_CANCEL -> BUTTON_CANCEL
    java.lang.String _title -> _title
    java.lang.String description -> description
    java.lang.String _currentLabel -> _currentLabel
    java.lang.String _currentText -> _currentText
    java.lang.String _newLabel -> _newLabel
    java.lang.String _newText -> _newText
    java.lang.String _hint -> _hint
    android.widget.EditText _tfEditText -> _tfEditText
    android.widget.TextView _tfHint -> _tfHint
    android.widget.TextView _tfCurrentText -> _tfCurrentText
    int getContentViewLayoutId() -> getContentViewLayoutId
    void onClick(android.view.View) -> onClick
    void setCurrentText(java.lang.String) -> setCurrentText
    void setEditText(java.lang.String) -> setEditText
    void setHint(java.lang.String) -> setHint
    java.lang.String getEditText() -> getEditText
    void refresh() -> refresh
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.component.profile.FirstTimeDialog -> com.scoreloop.client.android.ui.component.profile.FirstTimeDialog:
    int BUTTON_OK -> BUTTON_OK
    int BUTTON_CANCEL -> BUTTON_CANCEL
    java.lang.String _currentUsername -> _currentUsername
    android.widget.EditText _username -> _username
    android.widget.EditText _email -> _email
    android.widget.TextView _hint -> _hint
    int getContentViewLayoutId() -> getContentViewLayoutId
    void onClick(android.view.View) -> onClick
    java.lang.String getUsernameText() -> getUsernameText
    java.lang.String getEmailText() -> getEmailText
    void setHint(java.lang.String) -> setHint
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.component.profile.ProfileListItem -> com.scoreloop.client.android.ui.component.profile.ProfileListItem:
    int getType() -> getType
com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem -> com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem:
    int getIconId() -> getIconId
    int getLayoutId() -> getLayoutId
    int getSubTitleId() -> getSubTitleId
    int getTitleId() -> getTitleId
    int getType() -> getType
com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity -> com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity:
    java.lang.String STATE_RESTOREEMAIL -> STATE_RESTOREEMAIL
    java.lang.String STATE_ERRORTITLE -> STATE_ERRORTITLE
    java.lang.String STATE_ERRORMESSAGE -> STATE_ERRORMESSAGE
    java.lang.String STATE_HINT -> STATE_HINT
    java.lang.String STATE_LASTREQUESTTYPE -> STATE_LASTREQUESTTYPE
    java.lang.String STATE_LASTUPDATEERROR -> STATE_LASTUPDATEERROR
    com.scoreloop.client.android.ui.component.profile.ProfileListItem _changeEmailItem -> _changeEmailItem
    com.scoreloop.client.android.ui.component.profile.ProfileListItem _mergeAccountItem -> _mergeAccountItem
    com.scoreloop.client.android.ui.component.profile.ProfileListItem _changePictureItem -> _changePictureItem
    com.scoreloop.client.android.ui.component.profile.ProfileListItem _changeUsernameItem -> _changeUsernameItem
    com.scoreloop.client.android.core.controller.UserController _userController -> _userController
    java.lang.String _restoreEmail -> _restoreEmail
    java.lang.String _errorTitle -> _errorTitle
    java.lang.String _errorMessage -> _errorMessage
    java.lang.String _hint -> _hint
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType _lastRequestType -> _lastRequestType
    boolean _lastUpdateError -> _lastUpdateError
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void saveUserState() -> saveUserState
    void restoreUserState() -> restoreUserState
    void setLastRequestType(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType) -> setLastRequestType
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    android.app.Dialog getMsgDialog() -> getMsgDialog
    android.app.Dialog getChangeEmailDialog() -> getChangeEmailDialog
    android.app.Dialog getMergeAccountDialog() -> getMergeAccountDialog
    android.app.Dialog getChangeUsernameDialog() -> getChangeUsernameDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    android.app.Dialog getFirstTimeDialog() -> getFirstTimeDialog
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void onRefresh(int) -> onRefresh
    void requestControllerDidFailSafe(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFailSafe
    java.lang.String getActionSettings(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType) -> getActionSettings
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    boolean isValidEmailFormat(java.lang.String) -> isValidEmailFormat
    void updateUser(java.lang.String,java.lang.String,com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType) -> updateUser
    com.scoreloop.client.android.ui.component.profile.ProfileListItem access$0(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity) -> access$0
    com.scoreloop.client.android.ui.component.profile.ProfileListItem access$1(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity) -> access$1
    com.scoreloop.client.android.ui.component.profile.ProfileListItem access$2(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity) -> access$2
    com.scoreloop.client.android.ui.component.profile.ProfileListItem access$3(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity) -> access$3
    boolean access$4(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity,java.lang.String) -> access$4
    void access$5(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity,java.lang.String) -> access$5
    java.lang.String access$6(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity) -> access$6
    void access$7(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity,java.lang.String,java.lang.String,com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType) -> access$7
    com.scoreloop.client.android.core.controller.UserController access$8(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity) -> access$8
    void access$9(com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity,java.lang.Object) -> access$9
com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$1 -> com.scoreloop.client.android.ui.component.profile.e:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity this$0 -> a
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$2 -> com.scoreloop.client.android.ui.component.profile.d:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity this$0 -> a
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$3 -> com.scoreloop.client.android.ui.component.profile.c:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity this$0 -> a
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$4 -> com.scoreloop.client.android.ui.component.profile.b:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity this$0 -> a
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$5 -> com.scoreloop.client.android.ui.component.profile.a:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity this$0 -> a
    com.scoreloop.client.android.core.model.User val$user -> b
    void run() -> run
com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType -> com.scoreloop.client.android.ui.component.profile.k:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType USERNAME -> a
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType EMAIL -> b
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType USERNAME_EMAIL -> c
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType MERGE_ACCOUNTS -> d
    int dialogId -> e
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType[] ENUM$VALUES -> f
    int getDialogId() -> a
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType[] values() -> values
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$RequestType valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity$UserProfileListAdapter -> com.scoreloop.client.android.ui.component.profile.f:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsListActivity this$0 -> a
com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity -> com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity:
    int PICK_PICTURE -> PICK_PICTURE
    int IMAGE_SIZE -> IMAGE_SIZE
    java.lang.Runnable _continuation -> _continuation
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem _deviceLibraryItem -> _deviceLibraryItem
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem _facebookItem -> _facebookItem
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem _myspaceItem -> _myspaceItem
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem _setDefaultItem -> _setDefaultItem
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem _twitterItem -> _twitterItem
    com.scoreloop.client.android.core.model.User _user -> _user
    com.scoreloop.client.android.core.controller.UserController _userController -> _userController
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startSubmitPicture(android.graphics.Bitmap,android.net.Uri) -> startSubmitPicture
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void pickDefaultPicture() -> pickDefaultPicture
    void pickDeviceLibraryPicture() -> pickDeviceLibraryPicture
    void pickFacebookPicture() -> pickFacebookPicture
    void pickMyspacePicture() -> pickMyspacePicture
    void pickTwitterPicture() -> pickTwitterPicture
    void requestControllerDidFailSafe(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFailSafe
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void socialProviderControllerDidCancel(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidCancel
    void socialProviderControllerDidEnterInvalidCredentials(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidEnterInvalidCredentials
    void socialProviderControllerDidFail(com.scoreloop.client.android.core.controller.SocialProviderController,java.lang.Throwable) -> socialProviderControllerDidFail
    void socialProviderControllerDidSucceed(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidSucceed
    void withConnectedProvider(java.lang.String,java.lang.Runnable) -> withConnectedProvider
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem access$0(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity) -> access$0
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem access$1(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity) -> access$1
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem access$2(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity) -> access$2
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem access$3(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity) -> access$3
    com.scoreloop.client.android.ui.component.profile.ProfilePictureListItem access$4(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity) -> access$4
    void access$5(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity,android.graphics.Bitmap,android.net.Uri) -> access$5
    void access$6(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity) -> access$6
    void access$7(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity) -> access$7
    void access$8(com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity) -> access$8
com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity$1 -> com.scoreloop.client.android.ui.component.profile.j:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity this$0 -> a
    android.content.Intent val$data -> b
    void run() -> run
com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity$2 -> com.scoreloop.client.android.ui.component.profile.i:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity$3 -> com.scoreloop.client.android.ui.component.profile.h:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity$4 -> com.scoreloop.client.android.ui.component.profile.g:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity$PictureListAdapter -> com.scoreloop.client.android.ui.component.profile.l:
    com.scoreloop.client.android.ui.component.profile.ProfileSettingsPictureListActivity this$0 -> a
com.scoreloop.client.android.ui.component.score.ScoreExcludedListItem -> com.scoreloop.client.android.ui.component.score.ScoreExcludedListItem:
    java.lang.String getImageUrl() -> getImageUrl
    int getLayoutId() -> getLayoutId
    int getType() -> getType
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.score.ScoreHeaderActivity -> com.scoreloop.client.android.ui.component.score.ScoreHeaderActivity:
    void onClick(android.content.DialogInterface,int) -> onClick
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void showControlIcon(int) -> showControlIcon
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void updateUI() -> updateUI
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
com.scoreloop.client.android.ui.component.score.ScoreHighlightedListItem -> com.scoreloop.client.android.ui.component.score.ScoreHighlightedListItem:
    com.scoreloop.client.android.core.model.Ranking _ranking -> _ranking
    com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder createViewHolder() -> createViewHolder
    void fillViewHolder(android.view.View,com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder) -> fillViewHolder
    int getLayoutId() -> getLayoutId
    int getType() -> getType
    void setRanking(com.scoreloop.client.android.core.model.Ranking) -> setRanking
    void updateViews(com.scoreloop.client.android.ui.component.base.StandardListItem$StandardViewHolder) -> updateViews
com.scoreloop.client.android.ui.component.score.ScoreHighlightedListItem$HighlightedViewHolder -> com.scoreloop.client.android.ui.component.score.b:
    android.widget.TextView percentText -> a
com.scoreloop.client.android.ui.component.score.ScoreListActivity -> com.scoreloop.client.android.ui.component.score.ScoreListActivity:
    java.lang.String RECENT_TOP_RANK -> RECENT_TOP_RANK
    int _cachedVerticalCenterOffset -> _cachedVerticalCenterOffset
    int _highlightedPosition -> _highlightedPosition
    com.scoreloop.client.android.ui.framework.PagingDirection _pagingDirection -> _pagingDirection
    com.scoreloop.client.android.core.model.Ranking _ranking -> _ranking
    com.scoreloop.client.android.core.controller.RankingController _rankingController -> _rankingController
    com.scoreloop.client.android.core.controller.ScoresController _scoresController -> _scoresController
    com.scoreloop.client.android.core.model.SearchList _searchList -> _searchList
    com.scoreloop.client.android.ui.framework.BaseListItem _submitLocalScoresListItem -> _submitLocalScoresListItem
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection -> $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection
    com.scoreloop.client.android.ui.framework.PagingListAdapter getPagingListAdapter() -> getPagingListAdapter
    int getVerticalCenterOffset() -> getVerticalCenterOffset
    boolean isHighlightedScore(com.scoreloop.client.android.core.model.Score) -> isHighlightedScore
    void onCreate(android.os.Bundle) -> onCreate
    void onFooterItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onFooterItemClick
    void onListItemClick(com.scoreloop.client.android.ui.component.score.ScoreListItem) -> onListItemClick
    void onPagingListItemClick(com.scoreloop.client.android.ui.framework.PagingDirection) -> onPagingListItemClick
    void onRanking() -> onRanking
    void onRefresh(int) -> onRefresh
    void onScores() -> onScores
    void onStart() -> onStart
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void setNeedsRefresh(com.scoreloop.client.android.ui.framework.PagingDirection) -> setNeedsRefresh
    boolean showsLocalSearchList() -> showsLocalSearchList
    void updateScrollPosition() -> updateScrollPosition
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void access$1(com.scoreloop.client.android.ui.component.score.ScoreListActivity) -> access$1
    void access$2(com.scoreloop.client.android.ui.component.score.ScoreListActivity,com.scoreloop.client.android.ui.framework.PagingDirection) -> access$2
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection() -> $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection
    com.scoreloop.client.android.ui.framework.PagingListAdapter access$4(com.scoreloop.client.android.ui.component.score.ScoreListActivity) -> access$4
    int access$5(com.scoreloop.client.android.ui.component.score.ScoreListActivity) -> access$5
    int access$6(com.scoreloop.client.android.ui.component.score.ScoreListActivity) -> access$6
    com.scoreloop.client.android.ui.framework.PagingDirection access$7(com.scoreloop.client.android.ui.component.score.ScoreListActivity) -> access$7
com.scoreloop.client.android.ui.component.score.ScoreListActivity$1 -> com.scoreloop.client.android.ui.component.score.d:
    com.scoreloop.client.android.ui.component.score.ScoreListActivity this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.component.score.ScoreListActivity$2 -> com.scoreloop.client.android.ui.component.score.c:
    com.scoreloop.client.android.ui.component.score.ScoreListActivity this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.component.score.ScoreListItem -> com.scoreloop.client.android.ui.component.score.ScoreListItem:
    boolean _isEnabled -> _isEnabled
    java.lang.String getImageUrl() -> getImageUrl
    int getLayoutId() -> getLayoutId
    int getSubTitleId() -> getSubTitleId
    int getTitleId() -> getTitleId
    int getType() -> getType
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    boolean isEnabled() -> isEnabled
com.scoreloop.client.android.ui.component.score.ScoreSubmitLocalListItem -> com.scoreloop.client.android.ui.component.score.ScoreSubmitLocalListItem:
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    void prepareView(android.view.View) -> prepareView
com.scoreloop.client.android.ui.component.score.ScoreSubmitLocalListItem$1 -> com.scoreloop.client.android.ui.component.score.a:
    com.scoreloop.client.android.ui.component.score.ScoreSubmitLocalListItem this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
com.scoreloop.client.android.ui.component.user.UserAddBuddiesListItem -> com.scoreloop.client.android.ui.component.user.UserAddBuddiesListItem:
    int getLayoutId() -> getLayoutId
    int getType() -> getType
com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity -> com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity:
    java.lang.Object _addressBookTarget -> _addressBookTarget
    java.lang.Object _loginTarget -> _loginTarget
    com.scoreloop.client.android.core.controller.UsersController usersSearchController -> usersSearchController
    void handleDialogClick(java.lang.String) -> handleDialogClick
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void socialProviderControllerDidCancel(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidCancel
    void socialProviderControllerDidEnterInvalidCredentials(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidEnterInvalidCredentials
    void socialProviderControllerDidFail(com.scoreloop.client.android.core.controller.SocialProviderController,java.lang.Throwable) -> socialProviderControllerDidFail
    void socialProviderControllerDidSucceed(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidSucceed
    void access$0(com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity,java.lang.String) -> access$0
    void access$1(com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity) -> access$1
    boolean access$2(com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity) -> access$2
com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity$1 -> com.scoreloop.client.android.ui.component.user.a:
    com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity this$0 -> a
    void withAddedOrRemovedBuddies(int) -> withAddedOrRemovedBuddies
com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity$LoginDialog -> com.scoreloop.client.android.ui.component.user.f:
    android.widget.EditText loginEdit -> a
    android.widget.Button okButton -> b
    com.scoreloop.client.android.ui.component.user.UserAddBuddyListActivity this$0 -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.component.user.UserAddBuddyListItem -> com.scoreloop.client.android.ui.component.user.UserAddBuddyListItem:
    int getLayoutId() -> getLayoutId
    int getType() -> getType
com.scoreloop.client.android.ui.component.user.UserDetailListActivity -> com.scoreloop.client.android.ui.component.user.UserDetailListActivity:
    com.scoreloop.client.android.ui.component.user.UserDetailListItem _achievementsListItem -> _achievementsListItem
    com.scoreloop.client.android.ui.component.user.UserDetailListItem _buddiesListItem -> _buddiesListItem
    com.scoreloop.client.android.ui.framework.BaseListItem _challengesListItem -> _challengesListItem
    com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption _gameSectionDisplayOption -> _gameSectionDisplayOption
    com.scoreloop.client.android.ui.component.user.UserDetailListItem _gamesListItem -> _gamesListItem
    com.scoreloop.client.android.ui.framework.BaseListItem _recommendListItem -> _recommendListItem
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserDetailListActivity$GameSectionDisplayOption -> $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserDetailListActivity$GameSectionDisplayOption
    com.scoreloop.client.android.ui.component.user.UserDetailListItem getAchievementsListItem() -> getAchievementsListItem
    com.scoreloop.client.android.ui.component.user.UserDetailListItem getBuddiesListItem() -> getBuddiesListItem
    com.scoreloop.client.android.ui.framework.BaseListItem getChallengesListItem() -> getChallengesListItem
    com.scoreloop.client.android.ui.component.base.CaptionListItem getCommunityCaptionListItem() -> getCommunityCaptionListItem
    com.scoreloop.client.android.ui.component.base.CaptionListItem getGameCaptionListItem() -> getGameCaptionListItem
    com.scoreloop.client.android.ui.component.user.UserDetailListItem getGamesListItem() -> getGamesListItem
    com.scoreloop.client.android.ui.framework.BaseListItem getRecommendListItem() -> getRecommendListItem
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
    void onRefresh(int) -> onRefresh
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void postRecommendation() -> postRecommendation
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void updateList() -> updateList
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserDetailListActivity$GameSectionDisplayOption() -> $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserDetailListActivity$GameSectionDisplayOption
com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption -> com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption:
    com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption HIDE -> HIDE
    com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption RECOMMEND -> RECOMMEND
    com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption SHOW -> SHOW
    com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption UNKNOWN -> UNKNOWN
    com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption[] ENUM$VALUES -> ENUM$VALUES
    com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption[] values() -> values
    com.scoreloop.client.android.ui.component.user.UserDetailListActivity$GameSectionDisplayOption valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.component.user.UserDetailListItem -> com.scoreloop.client.android.ui.component.user.UserDetailListItem:
    int getIconId() -> getIconId
    int getLayoutId() -> getLayoutId
    int getSubTitleId() -> getSubTitleId
    int getTitleId() -> getTitleId
    int getType() -> getType
com.scoreloop.client.android.ui.component.user.UserFindMatchListItem -> com.scoreloop.client.android.ui.component.user.UserFindMatchListItem:
    int getLayoutId() -> getLayoutId
    int getType() -> getType
com.scoreloop.client.android.ui.component.user.UserHeaderActivity -> com.scoreloop.client.android.ui.component.user.UserHeaderActivity:
    int MENU_FLAG_INAPPROPRIATE -> MENU_FLAG_INAPPROPRIATE
    int MENU_REMOVE_BUDDY -> MENU_REMOVE_BUDDY
    boolean _canRemoveBuddy -> _canRemoveBuddy
    com.scoreloop.client.android.core.controller.MessageController _messageController -> _messageController
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode _mode -> _mode
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserHeaderActivity$ControlMode -> $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserHeaderActivity$ControlMode
    void disableAddRemoveBuddiesControl() -> disableAddRemoveBuddiesControl
    java.lang.String formatInteger(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> formatInteger
    android.widget.ImageView hideControlIcon() -> hideControlIcon
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenuForActivityGroup(android.view.Menu) -> onCreateOptionsMenuForActivityGroup
    boolean onOptionsItemSelectedForActivityGroup(android.view.MenuItem) -> onOptionsItemSelectedForActivityGroup
    boolean onPrepareOptionsMenuForActivityGroup(android.view.Menu) -> onPrepareOptionsMenuForActivityGroup
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void postAbuseReport() -> postAbuseReport
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void setNumberBuddies(java.lang.String) -> setNumberBuddies
    void setNumberGames(java.lang.String) -> setNumberGames
    void setNumberGlobalAchievements(java.lang.String) -> setNumberGlobalAchievements
    void showControlIcon(int,boolean) -> showControlIcon
    void updateAddRemoveBuddiesControl() -> updateAddRemoveBuddiesControl
    android.graphics.drawable.Drawable getDrawableLoading() -> getDrawableLoading
    void updateUI() -> updateUI
    boolean access$0(com.scoreloop.client.android.ui.component.user.UserHeaderActivity) -> access$0
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserHeaderActivity$ControlMode() -> $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserHeaderActivity$ControlMode
com.scoreloop.client.android.ui.component.user.UserHeaderActivity$1 -> com.scoreloop.client.android.ui.component.user.c:
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity this$0 -> a
    com.scoreloop.client.android.core.model.User val$user -> b
    void withAddedOrRemovedBuddies(int) -> withAddedOrRemovedBuddies
com.scoreloop.client.android.ui.component.user.UserHeaderActivity$2 -> com.scoreloop.client.android.ui.component.user.d:
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity this$0 -> a
    com.scoreloop.client.android.core.model.User val$user -> b
    void withAddedOrRemovedBuddies(int) -> withAddedOrRemovedBuddies
com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode -> com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode:
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode BLANK -> BLANK
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode BUDDY -> BUDDY
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode PROFILE -> PROFILE
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode[] ENUM$VALUES -> ENUM$VALUES
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode[] values() -> values
    com.scoreloop.client.android.ui.component.user.UserHeaderActivity$ControlMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.component.user.UserListActivity -> com.scoreloop.client.android.ui.component.user.UserListActivity:
    com.scoreloop.client.android.ui.framework.BaseListItem _addBuddiesListItem -> _addBuddiesListItem
    java.util.List _buddies -> _buddies
    java.util.List _buddiesPlaying -> _buddiesPlaying
    com.scoreloop.client.android.ui.framework.BaseListItem _matchBuddyListItem -> _matchBuddyListItem
    com.scoreloop.client.android.ui.component.user.UserListActivity$RequestType _requestType -> _requestType
    com.scoreloop.client.android.ui.framework.BaseListItem _seeMoreListItem -> _seeMoreListItem
    boolean _showSeeMore -> _showSeeMore
    com.scoreloop.client.android.core.controller.UserController _userController -> _userController
    com.scoreloop.client.android.core.controller.UsersController _usersController -> _usersController
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserListActivity$RequestType -> $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserListActivity$RequestType
    void addUsers(com.scoreloop.client.android.ui.framework.BaseListAdapter,java.util.List,java.lang.Boolean,boolean) -> addUsers
    com.scoreloop.client.android.ui.framework.BaseListItem getAddBuddiesListItem() -> getAddBuddiesListItem
    com.scoreloop.client.android.ui.framework.BaseListItem getMatchBuddiesListItem() -> getMatchBuddiesListItem
    com.scoreloop.client.android.ui.framework.BaseListItem getSeeMoreListItem() -> getSeeMoreListItem
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
    void onRefresh(int) -> onRefresh
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void requestControllerDidReceiveResponseSafe(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponseSafe
    void updateList() -> updateList
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserListActivity$RequestType() -> $SWITCH_TABLE$com$scoreloop$client$android$ui$component$user$UserListActivity$RequestType
    void access$1(com.scoreloop.client.android.ui.component.user.UserListActivity) -> access$1
    void access$2(com.scoreloop.client.android.ui.component.user.UserListActivity,int,com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode) -> access$2
    boolean access$3(com.scoreloop.client.android.ui.component.user.UserListActivity) -> access$3
com.scoreloop.client.android.ui.component.user.UserListActivity$1 -> com.scoreloop.client.android.ui.component.user.b:
    com.scoreloop.client.android.ui.component.user.UserListActivity this$0 -> a
    void withAddedOrRemovedBuddies(int) -> withAddedOrRemovedBuddies
com.scoreloop.client.android.ui.component.user.UserListActivity$RequestType -> com.scoreloop.client.android.ui.component.user.e:
    com.scoreloop.client.android.ui.component.user.UserListActivity$RequestType LOAD_BUDDIES -> a
    com.scoreloop.client.android.ui.component.user.UserListActivity$RequestType LOAD_RECOMMENDATIONS -> b
    com.scoreloop.client.android.ui.component.user.UserListActivity$RequestType NONE -> c
    com.scoreloop.client.android.ui.component.user.UserListActivity$RequestType[] ENUM$VALUES -> d
    com.scoreloop.client.android.ui.component.user.UserListActivity$RequestType[] values() -> values
    com.scoreloop.client.android.ui.component.user.UserListActivity$RequestType valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.component.user.UserListItem -> com.scoreloop.client.android.ui.component.user.UserListItem:
    boolean _playsSessionGame -> _playsSessionGame
    java.lang.String getImageUrl() -> getImageUrl
    int getLayoutId() -> getLayoutId
    int getType() -> getType
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    boolean playsSessionGame() -> playsSessionGame
com.scoreloop.client.android.ui.framework.ActivityDescription -> com.scoreloop.client.android.ui.framework.ActivityDescription:
    int _instanceCounter -> _instanceCounter
    java.lang.String EXTRA_IDENTIFIER -> EXTRA_IDENTIFIER
    com.scoreloop.client.android.ui.framework.ValueStore _arguments -> _arguments
    boolean _enabledWantsClearTop -> _enabledWantsClearTop
    java.lang.String _identifier -> _identifier
    android.content.Intent _intent -> _intent
    int _tabId -> _tabId
    boolean _wantsClearTop -> _wantsClearTop
    com.scoreloop.client.android.ui.framework.ValueStore getArguments() -> getArguments
    java.lang.String getIdentifier() -> getIdentifier
    android.content.Intent getIntent() -> getIntent
    int getTabId() -> getTabId
    boolean hasIdentfier(java.lang.String) -> hasIdentfier
    void setEnabledWantsClearTop(boolean) -> setEnabledWantsClearTop
    void setWantsClearTop(boolean) -> setWantsClearTop
com.scoreloop.client.android.ui.framework.ActivityHelper -> com.scoreloop.client.android.ui.framework.ActivityHelper:
    int ANIM_NEXT -> ANIM_NEXT
    int ANIM_NONE -> ANIM_NONE
    int ANIM_PREVIOUS -> ANIM_PREVIOUS
    void startLocalActivity(android.app.ActivityGroup,android.content.Intent,java.lang.String,int,int) -> startLocalActivity
com.scoreloop.client.android.ui.framework.BaseActivity -> com.scoreloop.client.android.ui.framework.BaseActivity:
    boolean LOG_ENABLED -> LOG_ENABLED
    android.view.View _contentView -> _contentView
    com.scoreloop.client.android.ui.framework.ValueStore _currentScreenValues -> _currentScreenValues
    android.os.Handler _handler -> _handler
    boolean _isPaused -> _isPaused
    boolean _needsRefresh -> _needsRefresh
    java.util.Set _observedKeys -> _observedKeys
    int _refreshFlags -> _refreshFlags
    com.scoreloop.client.android.ui.framework.ValueStore _screenValuesSnapshot -> _screenValuesSnapshot
    java.util.Set _spinnerControllers -> _spinnerControllers
    int _spinnerSemaphore -> _spinnerSemaphore
    android.view.View _spinnerView -> _spinnerView
    java.lang.String BUNDLE_KEY_VISIBLE_DIALOG_ID -> BUNDLE_KEY_VISIBLE_DIALOG_ID
    int _visibleDialogId -> _visibleDialogId
    void showToast(android.content.Context,java.lang.String) -> showToast
    void showToast(android.content.Context,java.lang.String,android.graphics.drawable.Drawable,int) -> showToast
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void addObservedKeys(java.lang.String[]) -> addObservedKeys
    void display(com.scoreloop.client.android.ui.framework.ScreenDescription) -> display
    void displayPrevious() -> displayPrevious
    void finishDisplay() -> finishDisplay
    com.scoreloop.client.android.ui.framework.ValueStore getActivityArguments() -> getActivityArguments
    com.scoreloop.client.android.ui.framework.ScreenDescription getCurrentScreenDescription() -> getCurrentScreenDescription
    android.os.Handler getHandler() -> getHandler
    com.scoreloop.client.android.ui.framework.ValueStore getScreenValues() -> getScreenValues
    android.widget.FrameLayout getSpinnerParentFrameLayout() -> getSpinnerParentFrameLayout
    void hideSpinner() -> hideSpinner
    void hideSpinnerFor(java.lang.Object) -> hideSpinnerFor
    boolean isNavigationAllowed(com.scoreloop.client.android.ui.framework.NavigationIntent) -> isNavigationAllowed
    boolean isPaused() -> isPaused
    void log(java.lang.String) -> log
    void makeScreenValuesSnapshot() -> makeScreenValuesSnapshot
    void observeKeys() -> observeKeys
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPause() -> onPause
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    void onRefresh(int) -> onRefresh
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onSpinnerShow(boolean) -> onSpinnerShow
    void onStart() -> onStart
    void onStop() -> onStop
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
    void refreshIfNeeded() -> refreshIfNeeded
    void run() -> run
    void setContentView(int,boolean) -> setContentView
    void setNeedsRefresh() -> setNeedsRefresh
    void setNeedsRefresh(int,com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode) -> setNeedsRefresh
    void showDialogSafe(int) -> showDialogSafe
    void showDialogSafe(int,boolean) -> showDialogSafe
    void showSpinner() -> showSpinner
    void showSpinnerFor(java.lang.Object) -> showSpinnerFor
    void showToast(java.lang.String) -> showToast
    void unobserveKeys() -> unobserveKeys
    void updateScreenValues() -> updateScreenValues
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onCreateOptionsMenuForActivityGroup(android.view.Menu) -> onCreateOptionsMenuForActivityGroup
    boolean onPrepareOptionsMenuForActivityGroup(android.view.Menu) -> onPrepareOptionsMenuForActivityGroup
    boolean onOptionsItemSelectedForActivityGroup(android.view.MenuItem) -> onOptionsItemSelectedForActivityGroup
com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode -> com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode:
    com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode MERGE -> MERGE
    com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode SET -> SET
    com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode[] ENUM$VALUES -> ENUM$VALUES
    com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode[] values() -> values
    com.scoreloop.client.android.ui.framework.BaseActivity$RefreshMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.framework.BaseDialog -> com.scoreloop.client.android.ui.framework.BaseDialog:
    com.scoreloop.client.android.ui.framework.BaseDialog$OnActionListener _listener -> _listener
    java.lang.String _text -> _text
    java.lang.String _okButtonText -> _okButtonText
    android.widget.TextView _textView -> _textView
    android.widget.Button _okButton -> _okButton
    java.lang.Object _target -> _target
    int getContentViewLayoutId() -> getContentViewLayoutId
    void onCreate(android.os.Bundle) -> onCreate
    void setOnActionListener(com.scoreloop.client.android.ui.framework.BaseDialog$OnActionListener) -> setOnActionListener
    void setText(java.lang.String) -> setText
    void setOkButtonText(java.lang.String) -> setOkButtonText
    void refresh() -> refresh
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object getTarget() -> getTarget
com.scoreloop.client.android.ui.framework.BaseDialog$OnActionListener -> com.scoreloop.client.android.ui.framework.BaseDialog$OnActionListener:
    void onAction(com.scoreloop.client.android.ui.framework.BaseDialog,int) -> onAction
com.scoreloop.client.android.ui.framework.BaseListAdapter -> com.scoreloop.client.android.ui.framework.BaseListAdapter:
    int _viewTypeCount -> _viewTypeCount
    com.scoreloop.client.android.ui.framework.BaseListAdapter$OnListItemClickListener _listItemClickListener -> _listItemClickListener
    void setViewTypeCount(int) -> setViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean isEnabled(int) -> isEnabled
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void setOnListItemClickListener(com.scoreloop.client.android.ui.framework.BaseListAdapter$OnListItemClickListener) -> setOnListItemClickListener
com.scoreloop.client.android.ui.framework.BaseListAdapter$OnListItemClickListener -> com.scoreloop.client.android.ui.framework.BaseListAdapter$OnListItemClickListener:
    void onListItemClick(com.scoreloop.client.android.ui.framework.BaseListItem) -> onListItemClick
com.scoreloop.client.android.ui.framework.BaseListItem -> com.scoreloop.client.android.ui.framework.BaseListItem:
    android.content.Context _context -> _context
    android.graphics.drawable.Drawable _drawable -> _drawable
    android.view.LayoutInflater _layoutInflater -> _layoutInflater
    java.lang.String _title -> _title
    android.content.Context getContext() -> getContext
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
com.scoreloop.client.android.ui.framework.NavigationIntent -> com.scoreloop.client.android.ui.framework.NavigationIntent:
    java.lang.Runnable _runnable -> _runnable
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type _type -> _type
    void execute() -> execute
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type getType() -> getType
com.scoreloop.client.android.ui.framework.NavigationIntent$Type -> com.scoreloop.client.android.ui.framework.NavigationIntent$Type:
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type BACK -> BACK
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type SHORTCUT -> SHORTCUT
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type FORWARD -> FORWARD
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type EXIT -> EXIT
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type[] ENUM$VALUES -> ENUM$VALUES
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type[] values() -> values
    com.scoreloop.client.android.ui.framework.NavigationIntent$Type valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.framework.OkCancelDialog -> com.scoreloop.client.android.ui.framework.OkCancelDialog:
    int BUTTON_CANCEL -> BUTTON_CANCEL
    int BUTTON_OK -> BUTTON_OK
    java.lang.String title -> title
    int getContentViewLayoutId() -> getContentViewLayoutId
    void setTitle(java.lang.String) -> setTitle
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void refresh() -> refresh
com.scoreloop.client.android.ui.framework.OptionsMenuForActivityGroup -> com.scoreloop.client.android.ui.framework.OptionsMenuForActivityGroup:
    boolean onCreateOptionsMenuForActivityGroup(android.view.Menu) -> onCreateOptionsMenuForActivityGroup
    boolean onPrepareOptionsMenuForActivityGroup(android.view.Menu) -> onPrepareOptionsMenuForActivityGroup
    boolean onOptionsItemSelectedForActivityGroup(android.view.MenuItem) -> onOptionsItemSelectedForActivityGroup
com.scoreloop.client.android.ui.framework.PagingDirection -> com.scoreloop.client.android.ui.framework.PagingDirection:
    com.scoreloop.client.android.ui.framework.PagingDirection PAGE_TO_NEXT -> PAGE_TO_NEXT
    com.scoreloop.client.android.ui.framework.PagingDirection PAGE_TO_OWN -> PAGE_TO_OWN
    com.scoreloop.client.android.ui.framework.PagingDirection PAGE_TO_PREV -> PAGE_TO_PREV
    com.scoreloop.client.android.ui.framework.PagingDirection PAGE_TO_RECENT -> PAGE_TO_RECENT
    com.scoreloop.client.android.ui.framework.PagingDirection PAGE_TO_TOP -> PAGE_TO_TOP
    int _flag -> _flag
    com.scoreloop.client.android.ui.framework.PagingDirection[] ENUM$VALUES -> ENUM$VALUES
    int combine(int) -> combine
    boolean isPresentIn(int) -> isPresentIn
    com.scoreloop.client.android.ui.framework.PagingDirection[] values() -> values
    com.scoreloop.client.android.ui.framework.PagingDirection valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.framework.PagingListAdapter -> com.scoreloop.client.android.ui.framework.PagingListAdapter:
    int _listOffset -> _listOffset
    com.scoreloop.client.android.ui.framework.PagingListItem _nextPagingItem -> _nextPagingItem
    int _pagingFlags -> _pagingFlags
    com.scoreloop.client.android.ui.framework.PagingListItem _prevPagingItem -> _prevPagingItem
    com.scoreloop.client.android.ui.framework.PagingListItem _topPagingItem -> _topPagingItem
    void addPagingItems(boolean,boolean,boolean) -> addPagingItems
    com.scoreloop.client.android.ui.framework.BaseListItem getContentItem(int) -> getContentItem
    int getFirstContentPosition() -> getFirstContentPosition
    int getLastContentPosition() -> getLastContentPosition
    com.scoreloop.client.android.ui.framework.BaseListItem getNextPagingItem() -> getNextPagingItem
    com.scoreloop.client.android.ui.framework.BaseListItem getPrevPagingItem() -> getPrevPagingItem
    com.scoreloop.client.android.ui.framework.BaseListItem getTopPagingItem() -> getTopPagingItem
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.scoreloop.client.android.ui.framework.PagingListAdapter$OnListItemClickListener -> com.scoreloop.client.android.ui.framework.PagingListAdapter$OnListItemClickListener:
    void onPagingListItemClick(com.scoreloop.client.android.ui.framework.PagingDirection) -> onPagingListItemClick
com.scoreloop.client.android.ui.framework.PagingListItem -> com.scoreloop.client.android.ui.framework.PagingListItem:
    com.scoreloop.client.android.ui.framework.PagingDirection _pagingDirection -> _pagingDirection
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection -> $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection
    android.graphics.drawable.Drawable getDrawable(android.content.Context,com.scoreloop.client.android.ui.framework.PagingDirection) -> getDrawable
    java.lang.String getTitle(android.content.Context,com.scoreloop.client.android.ui.framework.PagingDirection) -> getTitle
    com.scoreloop.client.android.ui.framework.PagingDirection getPagingDirection() -> getPagingDirection
    int getType() -> getType
    android.view.View getView(android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled() -> isEnabled
    int[] $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection() -> $SWITCH_TABLE$com$scoreloop$client$android$ui$framework$PagingDirection
com.scoreloop.client.android.ui.framework.ScreenActivity -> com.scoreloop.client.android.ui.framework.ScreenActivity:
    java.lang.String REGION_BODY -> REGION_BODY
    java.lang.String REGION_HEADER -> REGION_HEADER
    java.lang.String STACK_ENTRY_REFERENCE_KEY -> STACK_ENTRY_REFERENCE_KEY
    java.lang.String TAG -> TAG
    void cleanOutSubactivities() -> cleanOutSubactivities
    void display(com.scoreloop.client.android.ui.framework.ScreenDescription,android.os.Bundle) -> display
    void displayPreviousDescription() -> displayPreviousDescription
    void finishDisplay() -> finishDisplay
    android.app.Activity getActivity() -> getActivity
    boolean isNavigationAllowed(com.scoreloop.client.android.ui.framework.NavigationIntent) -> isNavigationAllowed
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onShortcutClick(com.scoreloop.client.android.ui.framework.ShortcutView) -> onShortcutClick
    void onStatusCloseClick(android.view.View) -> onStatusCloseClick
    void setShortcuts(com.scoreloop.client.android.ui.framework.ScreenDescription) -> setShortcuts
    void startBody(com.scoreloop.client.android.ui.framework.ActivityDescription,int) -> startBody
    void startEmptyBody() -> startEmptyBody
    void startHeader(com.scoreloop.client.android.ui.framework.ActivityDescription,int) -> startHeader
    void startNewScreen() -> startNewScreen
    void startTabBody(com.scoreloop.client.android.ui.framework.ScreenDescription,int) -> startTabBody
com.scoreloop.client.android.ui.framework.ScreenActivity$1 -> com.scoreloop.client.android.ui.framework.c:
    com.scoreloop.client.android.ui.framework.ScreenActivity this$0 -> a
    int val$selection -> b
    void run() -> run
com.scoreloop.client.android.ui.framework.ScreenActivityProtocol -> com.scoreloop.client.android.ui.framework.ScreenActivityProtocol:
    void cleanOutSubactivities() -> cleanOutSubactivities
    android.app.Activity getActivity() -> getActivity
    boolean isNavigationAllowed(com.scoreloop.client.android.ui.framework.NavigationIntent) -> isNavigationAllowed
    void setShortcuts(com.scoreloop.client.android.ui.framework.ScreenDescription) -> setShortcuts
    void startBody(com.scoreloop.client.android.ui.framework.ActivityDescription,int) -> startBody
    void startEmptyBody() -> startEmptyBody
    void startHeader(com.scoreloop.client.android.ui.framework.ActivityDescription,int) -> startHeader
    void startNewScreen() -> startNewScreen
    void startTabBody(com.scoreloop.client.android.ui.framework.ScreenDescription,int) -> startTabBody
com.scoreloop.client.android.ui.framework.ScreenDescription -> com.scoreloop.client.android.ui.framework.ScreenDescription:
    java.util.List _bodyDescriptions -> _bodyDescriptions
    com.scoreloop.client.android.ui.framework.ActivityDescription _headerDescription -> _headerDescription
    com.scoreloop.client.android.ui.framework.ValueStore _screenValues -> _screenValues
    int _selectedBodyIndex -> _selectedBodyIndex
    java.util.List _shortcutDescriptions -> _shortcutDescriptions
    com.scoreloop.client.android.ui.framework.ScreenDescription$ShortcutObserver _shortcutObserver -> _shortcutObserver
    int _shortcutSelectionId -> _shortcutSelectionId
    com.scoreloop.client.android.ui.framework.ActivityDescription addBodyDescription(int,android.content.Intent) -> addBodyDescription
    void addShortcutDescription(int,int,int) -> addShortcutDescription
    void addShortcutObserver(com.scoreloop.client.android.ui.framework.ScreenDescription$ShortcutObserver) -> addShortcutObserver
    com.scoreloop.client.android.ui.framework.ActivityDescription getActivityDescription(java.lang.String) -> getActivityDescription
    java.util.List getBodyDescriptions() -> getBodyDescriptions
    com.scoreloop.client.android.ui.framework.ActivityDescription getHeaderDescription() -> getHeaderDescription
    com.scoreloop.client.android.ui.framework.ValueStore getScreenValues() -> getScreenValues
    int getSelectedBodyIndex() -> getSelectedBodyIndex
    java.util.List getShortcutDescriptions() -> getShortcutDescriptions
    com.scoreloop.client.android.ui.framework.ScreenDescription$ShortcutObserver getShortcutObserver() -> getShortcutObserver
    int getShortcutSelectionId() -> getShortcutSelectionId
    int getShortcutSelectionIndex() -> getShortcutSelectionIndex
    com.scoreloop.client.android.ui.framework.ActivityDescription setBodyDescription(android.content.Intent) -> setBodyDescription
    com.scoreloop.client.android.ui.framework.ActivityDescription setHeaderDescription(android.content.Intent) -> setHeaderDescription
    void setSelectedBodyIndex(int) -> setSelectedBodyIndex
    void setShortcutSelectionId(int) -> setShortcutSelectionId
com.scoreloop.client.android.ui.framework.ScreenDescription$ShortcutObserver -> com.scoreloop.client.android.ui.framework.ScreenDescription$ShortcutObserver:
    void onShortcut(int) -> onShortcut
com.scoreloop.client.android.ui.framework.ScreenManager -> com.scoreloop.client.android.ui.framework.ScreenManager:
    void display(com.scoreloop.client.android.ui.framework.ScreenDescription) -> display
    void displayInScreen(com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenActivityProtocol,boolean) -> displayInScreen
    void displayPreviousDescription() -> displayPreviousDescription
    void displayReferencedStackEntryInScreen(int,com.scoreloop.client.android.ui.framework.ScreenActivityProtocol) -> displayReferencedStackEntryInScreen
    void displayStoredDescriptionInScreen(com.scoreloop.client.android.ui.framework.ScreenActivityProtocol) -> displayStoredDescriptionInScreen
    void displayStoredDescriptionInTabs(com.scoreloop.client.android.ui.framework.TabsActivityProtocol) -> displayStoredDescriptionInTabs
    void displayWithEmptyStack(com.scoreloop.client.android.ui.framework.ScreenDescription) -> displayWithEmptyStack
    void finishDisplay() -> finishDisplay
    com.scoreloop.client.android.ui.framework.ActivityDescription getActivityDescription(java.lang.String) -> getActivityDescription
    com.scoreloop.client.android.ui.framework.ScreenDescription getCurrentDescription() -> getCurrentDescription
    int getCurrentStackEntryReference() -> getCurrentStackEntryReference
    void setDelegate(com.scoreloop.client.android.ui.framework.ScreenManager$Delegate) -> setDelegate
    void onWillShowOptionsMenu() -> onWillShowOptionsMenu
    void onShowedTab(com.scoreloop.client.android.ui.framework.ScreenDescription) -> onShowedTab
com.scoreloop.client.android.ui.framework.ScreenManager$Delegate -> com.scoreloop.client.android.ui.framework.ScreenManager$Delegate:
    void screenManagerWillShowScreenDescription(com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction) -> screenManagerWillShowScreenDescription
    boolean screenManagerWantsNewScreen(com.scoreloop.client.android.ui.framework.ScreenManager,com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenDescription) -> screenManagerWantsNewScreen
    void screenManagerWillEnterFramework(com.scoreloop.client.android.ui.framework.ScreenManager) -> screenManagerWillEnterFramework
    void screenManagerDidLeaveFramework(com.scoreloop.client.android.ui.framework.ScreenManager) -> screenManagerDidLeaveFramework
    void screenManagerWillShowOptionsMenu() -> screenManagerWillShowOptionsMenu
com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction -> com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction:
    com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction FORWARD -> FORWARD
    com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction BACKWARD -> BACKWARD
    com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction NONE -> NONE
    com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction[] ENUM$VALUES -> ENUM$VALUES
    com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction[] values() -> values
    com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.framework.ScreenManagerSingleton -> com.scoreloop.client.android.ui.framework.ScreenManagerSingleton:
    com.scoreloop.client.android.ui.framework.ScreenManager _singleton -> _singleton
    com.scoreloop.client.android.ui.framework.ScreenManager get() -> get
    void init(com.scoreloop.client.android.ui.framework.ScreenManager) -> init
    void destroy() -> destroy
com.scoreloop.client.android.ui.framework.SegmentedView -> com.scoreloop.client.android.ui.framework.SegmentedView:
    android.view.View$OnClickListener onSegmentClickListener -> onSegmentClickListener
    int selectedSegment -> selectedSegment
    int oldSelectedSegment -> oldSelectedSegment
    boolean allowsReselection() -> allowsReselection
    int getSelectedSegment() -> getSelectedSegment
    android.view.View getSelectedSegmentView() -> getSelectedSegmentView
    void onClick(android.view.View) -> onClick
    void prepareSelection() -> prepareSelection
    void prepareUsage() -> prepareUsage
    void setOnSegmentClickListener(android.view.View$OnClickListener) -> setOnSegmentClickListener
    void setSegment(int) -> setSegment
    void setSegmentEnabled(int,boolean) -> setSegmentEnabled
    void switchToSegment(int) -> switchToSegment
com.scoreloop.client.android.ui.framework.ShortcutDescription -> com.scoreloop.client.android.ui.framework.ShortcutDescription:
    int _activeImageId -> _activeImageId
    int _imageId -> _imageId
    int _textId -> _textId
    boolean equals(java.lang.Object) -> equals
    int getActiveImageId() -> getActiveImageId
    int getImageId() -> getImageId
    int getTextId() -> getTextId
    int hashCode() -> hashCode
com.scoreloop.client.android.ui.framework.ShortcutView -> com.scoreloop.client.android.ui.framework.ShortcutView:
    java.util.List _shortcutDescriptions -> _shortcutDescriptions
    void setDescriptions(android.app.Activity,java.util.List) -> setDescriptions
    void setSegmentEnabled(int,boolean) -> setSegmentEnabled
com.scoreloop.client.android.ui.framework.StandardScreenManager -> com.scoreloop.client.android.ui.framework.StandardScreenManager:
    boolean TRACE_FRAMEWORK -> TRACE_FRAMEWORK
    com.scoreloop.client.android.ui.framework.ScreenManager$Delegate _delegate -> _delegate
    boolean _frameworkHooksEnabled -> _frameworkHooksEnabled
    com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry _stack -> _stack
    com.scoreloop.client.android.ui.framework.ScreenDescription _storedDescription -> _storedDescription
    void onShowedTab(com.scoreloop.client.android.ui.framework.ScreenDescription) -> onShowedTab
    void applyCurrentDescription(com.scoreloop.client.android.ui.framework.ScreenDescription,int) -> applyCurrentDescription
    void display(com.scoreloop.client.android.ui.framework.ScreenDescription) -> display
    void displayInScreen(com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenActivityProtocol,boolean) -> displayInScreen
    void displayPreviousDescription() -> displayPreviousDescription
    void displayReferencedStackEntryInScreen(int,com.scoreloop.client.android.ui.framework.ScreenActivityProtocol) -> displayReferencedStackEntryInScreen
    void displayStoredDescriptionInScreen(com.scoreloop.client.android.ui.framework.ScreenActivityProtocol) -> displayStoredDescriptionInScreen
    void displayStoredDescriptionInTabs(com.scoreloop.client.android.ui.framework.TabsActivityProtocol) -> displayStoredDescriptionInTabs
    void displayWithEmptyStack(com.scoreloop.client.android.ui.framework.ScreenDescription) -> displayWithEmptyStack
    void doFinishDisplay() -> doFinishDisplay
    void finishDisplay() -> finishDisplay
    com.scoreloop.client.android.ui.framework.ActivityDescription getActivityDescription(java.lang.String) -> getActivityDescription
    com.scoreloop.client.android.ui.framework.ScreenActivityProtocol getCurrentActivity() -> getCurrentActivity
    com.scoreloop.client.android.ui.framework.ScreenDescription getCurrentDescription() -> getCurrentDescription
    int getCurrentStackEntryReference() -> getCurrentStackEntryReference
    com.scoreloop.client.android.ui.framework.ScreenManager$Delegate$Direction getDirection(int) -> getDirection
    com.scoreloop.client.android.ui.framework.ScreenDescription getPreviousDescription() -> getPreviousDescription
    java.util.List getScreenActivities() -> getScreenActivities
    void onFrameworkEntered() -> onFrameworkEntered
    void onFrameworkLeft() -> onFrameworkLeft
    void onWillShowOptionsMenu() -> onWillShowOptionsMenu
    com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry popEntry() -> popEntry
    void pushDescriptionAndActivity(com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenActivityProtocol) -> pushDescriptionAndActivity
    void setDelegate(com.scoreloop.client.android.ui.framework.ScreenManager$Delegate) -> setDelegate
    void setFrameworkHooksEnabled(boolean) -> setFrameworkHooksEnabled
    void setStack(com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry) -> setStack
    void startNewScreen() -> startNewScreen
    void storeDescription(com.scoreloop.client.android.ui.framework.ScreenDescription) -> storeDescription
    boolean wantsNewActivity(com.scoreloop.client.android.ui.framework.ActivityDescription,com.scoreloop.client.android.ui.framework.ActivityDescription) -> wantsNewActivity
    boolean wantsNewScreen(com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenDescription) -> wantsNewScreen
    void withNavigationAllowed(com.scoreloop.client.android.ui.framework.NavigationIntent$Type,java.lang.Runnable) -> withNavigationAllowed
    boolean access$0(com.scoreloop.client.android.ui.framework.StandardScreenManager,com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenDescription) -> access$0
    void access$1(com.scoreloop.client.android.ui.framework.StandardScreenManager,com.scoreloop.client.android.ui.framework.ScreenDescription) -> access$1
    void access$2(com.scoreloop.client.android.ui.framework.StandardScreenManager) -> access$2
    void access$3(com.scoreloop.client.android.ui.framework.StandardScreenManager,com.scoreloop.client.android.ui.framework.ScreenDescription,com.scoreloop.client.android.ui.framework.ScreenActivityProtocol) -> access$3
    com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry access$4(com.scoreloop.client.android.ui.framework.StandardScreenManager) -> access$4
    com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry access$5(com.scoreloop.client.android.ui.framework.StandardScreenManager) -> access$5
    void access$6(com.scoreloop.client.android.ui.framework.StandardScreenManager) -> access$6
com.scoreloop.client.android.ui.framework.StandardScreenManager$1 -> com.scoreloop.client.android.ui.framework.g:
    com.scoreloop.client.android.ui.framework.StandardScreenManager this$0 -> a
    com.scoreloop.client.android.ui.framework.ScreenDescription val$description -> b
    void run() -> run
com.scoreloop.client.android.ui.framework.StandardScreenManager$2 -> com.scoreloop.client.android.ui.framework.f:
    com.scoreloop.client.android.ui.framework.StandardScreenManager this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.framework.StandardScreenManager$3 -> com.scoreloop.client.android.ui.framework.h:
    com.scoreloop.client.android.ui.framework.StandardScreenManager this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry -> com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry:
    com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry _next -> _next
    com.scoreloop.client.android.ui.framework.ScreenActivityProtocol _screenActivity -> _screenActivity
    com.scoreloop.client.android.ui.framework.ScreenDescription _screenDescription -> _screenDescription
    int getDepth(com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry) -> getDepth
    com.scoreloop.client.android.ui.framework.ActivityDescription getActivityDescription(java.lang.String) -> getActivityDescription
    com.scoreloop.client.android.ui.framework.ScreenActivityProtocol getScreenActivity() -> getScreenActivity
    com.scoreloop.client.android.ui.framework.ScreenDescription getScreenDescription() -> getScreenDescription
    void access$0(com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry,com.scoreloop.client.android.ui.framework.ScreenActivityProtocol) -> access$0
    com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry access$1(com.scoreloop.client.android.ui.framework.StandardScreenManager$StackEntry) -> access$1
com.scoreloop.client.android.ui.framework.TabView -> com.scoreloop.client.android.ui.framework.TabView:
    int[][] res2 -> res2
    int[][] res3 -> res3
    int[][] res4 -> res4
    void prepareSelection() -> prepareSelection
    void setSegmentEnabled(int,boolean) -> setSegmentEnabled
    void switchToSegment(int) -> switchToSegment
    void updateHighlight(int) -> updateHighlight
com.scoreloop.client.android.ui.framework.TabsActivity -> com.scoreloop.client.android.ui.framework.TabsActivity:
    com.scoreloop.client.android.ui.framework.ScreenDescription _screenDescription -> _screenDescription
    boolean onCreateOptionsMenuForActivityGroup(android.view.Menu) -> onCreateOptionsMenuForActivityGroup
    boolean onPrepareOptionsMenuForActivityGroup(android.view.Menu) -> onPrepareOptionsMenuForActivityGroup
    boolean onOptionsItemSelectedForActivityGroup(android.view.MenuItem) -> onOptionsItemSelectedForActivityGroup
    boolean isNavigationAllowed(com.scoreloop.client.android.ui.framework.NavigationIntent) -> isNavigationAllowed
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void startDescription(com.scoreloop.client.android.ui.framework.ScreenDescription) -> startDescription
    void startTab(int) -> startTab
    java.lang.String getTabActivityIdentifier(int) -> getTabActivityIdentifier
com.scoreloop.client.android.ui.framework.TabsActivityProtocol -> com.scoreloop.client.android.ui.framework.TabsActivityProtocol:
    void startDescription(com.scoreloop.client.android.ui.framework.ScreenDescription) -> startDescription
com.scoreloop.client.android.ui.framework.TextButtonDialog -> com.scoreloop.client.android.ui.framework.TextButtonDialog:
    int getContentViewLayoutId() -> getContentViewLayoutId
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
com.scoreloop.client.android.ui.framework.ValueStore -> com.scoreloop.client.android.ui.framework.ValueStore:
    java.lang.String PATH_SEPARATOR -> PATH_SEPARATOR
    java.util.Map _dates -> _dates
    com.scoreloop.client.android.ui.framework.ValueStore$ValueSourceFactory _factory -> _factory
    java.util.Map _observerMap -> _observerMap
    java.util.Map _values -> _values
    java.util.List _valueSources -> _valueSources
    java.lang.String concatenateKeys(java.lang.String[]) -> concatenateKeys
    boolean isPlainKey(java.lang.String) -> isPlainKey
    java.lang.String[] splitKeyComponents(java.lang.String) -> splitKeyComponents
    void addObserver(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore$Observer) -> addObserver
    void addValueSources(com.scoreloop.client.android.ui.framework.ValueStore$ValueSource[]) -> addValueSources
    void copyFromOtherForKeys(com.scoreloop.client.android.ui.framework.ValueStore,java.util.Set) -> copyFromOtherForKeys
    void forAllObservers(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore$ObserverContinuation) -> forAllObservers
    com.scoreloop.client.android.ui.framework.ValueStore$Node getNode(java.lang.String,boolean) -> getNode
    java.util.Map getObserverMap() -> getObserverMap
    java.lang.Object getValue(java.lang.String) -> getValue
    java.lang.Object getValue(java.lang.String,java.lang.Object) -> getValue
    com.scoreloop.client.android.ui.framework.ValueStore$ValueSource getValueSource(java.lang.String) -> getValueSource
    java.util.List getValueSources() -> getValueSources
    void invokeChangedObservers(java.lang.String,java.lang.Object,java.lang.Object) -> invokeChangedObservers
    void invokeSetDirtyObservers(java.lang.String) -> invokeSetDirtyObservers
    boolean isClean(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode,java.lang.Object) -> isClean
    boolean isDirty(java.lang.String) -> isDirty
    void putValue(java.lang.String,java.lang.Object) -> putValue
    void removeObserver(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore$Observer) -> removeObserver
    boolean retrieveValue(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode,java.lang.Object) -> retrieveValue
    void runObserverForKeys(com.scoreloop.client.android.ui.framework.ValueStore,java.util.Set,com.scoreloop.client.android.ui.framework.ValueStore$Observer) -> runObserverForKeys
    void setAllDirty() -> setAllDirty
    void setDirty(java.lang.String) -> setDirty
    void setValueSourceFactroy(com.scoreloop.client.android.ui.framework.ValueStore$ValueSourceFactory) -> setValueSourceFactroy
    java.lang.String toString() -> toString
com.scoreloop.client.android.ui.framework.ValueStore$1 -> com.scoreloop.client.android.ui.framework.d:
    com.scoreloop.client.android.ui.framework.ValueStore this$0 -> a
    java.lang.String val$key -> b
    java.lang.Object val$oldValue -> c
    java.lang.Object val$newValue -> d
    void withObserver(com.scoreloop.client.android.ui.framework.ValueStore$Observer) -> a
com.scoreloop.client.android.ui.framework.ValueStore$2 -> com.scoreloop.client.android.ui.framework.e:
    com.scoreloop.client.android.ui.framework.ValueStore this$0 -> a
    java.lang.String val$key -> b
    void withObserver(com.scoreloop.client.android.ui.framework.ValueStore$Observer) -> a
com.scoreloop.client.android.ui.framework.ValueStore$Node -> com.scoreloop.client.android.ui.framework.a:
    java.lang.String firstKey -> a
    java.lang.String restKey -> b
    com.scoreloop.client.android.ui.framework.ValueStore restStore -> c
com.scoreloop.client.android.ui.framework.ValueStore$Observer -> com.scoreloop.client.android.ui.framework.ValueStore$Observer:
    void onValueChanged(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String,java.lang.Object,java.lang.Object) -> onValueChanged
    void onValueSetDirty(com.scoreloop.client.android.ui.framework.ValueStore,java.lang.String) -> onValueSetDirty
com.scoreloop.client.android.ui.framework.ValueStore$ObserverContinuation -> com.scoreloop.client.android.ui.framework.b:
    void withObserver(com.scoreloop.client.android.ui.framework.ValueStore$Observer) -> a
com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode -> com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode:
    com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode NOT_DIRTY -> NOT_DIRTY
    com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode NOT_OLDER_THAN -> NOT_OLDER_THAN
    com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode[] ENUM$VALUES -> ENUM$VALUES
    com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode[] values() -> values
    com.scoreloop.client.android.ui.framework.ValueStore$RetrievalMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.framework.ValueStore$ValueSource -> com.scoreloop.client.android.ui.framework.ValueStore$ValueSource:
    boolean isRetrieving() -> isRetrieving
    void retrieve(com.scoreloop.client.android.ui.framework.ValueStore) -> retrieve
    void supportedKeys(java.util.Set) -> supportedKeys
com.scoreloop.client.android.ui.framework.ValueStore$ValueSourceFactory -> com.scoreloop.client.android.ui.framework.ValueStore$ValueSourceFactory:
    com.scoreloop.client.android.ui.framework.ValueStore$ValueSource getValueSourceForKeyInStore(java.lang.String,com.scoreloop.client.android.ui.framework.ValueStore) -> getValueSourceForKeyInStore
com.scoreloop.client.android.ui.util.Base64 -> com.scoreloop.client.android.ui.util.Base64:
    int DECODE -> DECODE
    int DO_BREAK_LINES -> DO_BREAK_LINES
    int DONT_GUNZIP -> DONT_GUNZIP
    int ENCODE -> ENCODE
    int GZIP -> GZIP
    int NO_OPTIONS -> NO_OPTIONS
    int ORDERED -> ORDERED
    int URL_SAFE -> URL_SAFE
    byte[] _ORDERED_ALPHABET -> _ORDERED_ALPHABET
    byte[] _ORDERED_DECODABET -> _ORDERED_DECODABET
    byte[] _STANDARD_ALPHABET -> _STANDARD_ALPHABET
    byte[] _STANDARD_DECODABET -> _STANDARD_DECODABET
    byte[] _URL_SAFE_ALPHABET -> _URL_SAFE_ALPHABET
    byte[] _URL_SAFE_DECODABET -> _URL_SAFE_DECODABET
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte NEW_LINE -> NEW_LINE
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(byte[]) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(java.lang.String,int) -> decode
    void decodeFileToFile(java.lang.String,java.lang.String) -> decodeFileToFile
    byte[] decodeFromFile(java.lang.String) -> decodeFromFile
    void decodeToFile(java.lang.String,java.lang.String) -> decodeToFile
    java.lang.Object decodeToObject(java.lang.String) -> decodeToObject
    java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader) -> decodeToObject
    void encode(java.nio.ByteBuffer,java.nio.ByteBuffer) -> encode
    void encode(java.nio.ByteBuffer,java.nio.CharBuffer) -> encode
    java.lang.String encodeBytes(byte[]) -> encodeBytes
    java.lang.String encodeBytes(byte[],int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int,int) -> encodeBytes
    byte[] encodeBytesToBytes(byte[]) -> encodeBytesToBytes
    byte[] encodeBytesToBytes(byte[],int,int,int) -> encodeBytesToBytes
    void encodeFileToFile(java.lang.String,java.lang.String) -> encodeFileToFile
    java.lang.String encodeFromFile(java.lang.String) -> encodeFromFile
    java.lang.String encodeObject(java.io.Serializable) -> encodeObject
    java.lang.String encodeObject(java.io.Serializable,int) -> encodeObject
    void encodeToFile(byte[],java.lang.String) -> encodeToFile
    int decode4to3(byte[],int,byte[],int,int) -> decode4to3
    byte[] encode3to4(byte[],byte[],int,int) -> encode3to4
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> encode3to4
    byte[] getAlphabet(int) -> getAlphabet
    byte[] getDecodabet(int) -> getDecodabet
    byte[] access$0(int) -> access$0
    byte[] access$1(byte[],int,int,byte[],int,int) -> access$1
    int access$2(byte[],int,byte[],int,int) -> access$2
    byte[] access$3(byte[],byte[],int,int) -> access$3
com.scoreloop.client.android.ui.util.Base64$1 -> com.scoreloop.client.android.ui.util.a:
    java.lang.ClassLoader val$loader -> a
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
com.scoreloop.client.android.ui.util.Base64$InputStream -> com.scoreloop.client.android.ui.util.b:
    boolean breakLines -> a
    byte[] buffer -> b
    int bufferLength -> c
    byte[] decodabet -> d
    boolean encode -> e
    int lineLength -> f
    int numSigBytes -> g
    int options -> h
    int position -> i
    int read() -> read
    int read(byte[],int,int) -> read
com.scoreloop.client.android.ui.util.Base64$OutputStream -> com.scoreloop.client.android.ui.util.e:
    byte[] b4 -> a
    boolean breakLines -> b
    byte[] buffer -> c
    int bufferLength -> d
    byte[] decodabet -> e
    boolean encode -> f
    int lineLength -> g
    int options -> h
    int position -> i
    boolean suspendEncoding -> j
    void close() -> close
    void write(byte[],int,int) -> write
    void write(int) -> write
com.scoreloop.client.android.ui.util.Cache -> com.scoreloop.client.android.ui.util.Cache:
    int DEFAULT_HARD_CACHE_CAPACITY -> DEFAULT_HARD_CACHE_CAPACITY
    int _hardCacheCapacity -> _hardCacheCapacity
    long _minPurgeInterval -> _minPurgeInterval
    java.util.HashMap _hardCache -> _hardCache
    java.util.concurrent.ConcurrentHashMap _softCache -> _softCache
    android.os.Handler _purgeHandler -> _purgeHandler
    java.lang.Runnable _purger -> _purger
    void initHardCache() -> initHardCache
    void initSoftCache() -> initSoftCache
    void purgeCache() -> purgeCache
    void resetPurgeTimer(long) -> resetPurgeTimer
    void put(java.lang.Object,java.lang.Object,long) -> put
    java.lang.Object get(java.lang.Object) -> get
    com.scoreloop.client.android.ui.util.Cache$CacheEntry getCacheEntry(java.lang.Object) -> getCacheEntry
    int access$0(com.scoreloop.client.android.ui.util.Cache) -> access$0
    java.util.concurrent.ConcurrentHashMap access$1(com.scoreloop.client.android.ui.util.Cache) -> access$1
com.scoreloop.client.android.ui.util.Cache$1 -> com.scoreloop.client.android.ui.util.d:
    com.scoreloop.client.android.ui.util.Cache this$0 -> a
    void run() -> run
com.scoreloop.client.android.ui.util.Cache$2 -> com.scoreloop.client.android.ui.util.c:
    com.scoreloop.client.android.ui.util.Cache this$0 -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.scoreloop.client.android.ui.util.Cache$CacheEntry -> com.scoreloop.client.android.ui.util.f:
    long _lastAccess -> a
    long _timeToLive -> b
    java.lang.Object _value -> c
    com.scoreloop.client.android.ui.util.Cache this$0 -> d
    long getLastAccess() -> a
    void setLastAccess(long) -> a
    long getTimeToLive() -> b
    java.lang.Object getValue() -> c
com.scoreloop.client.android.ui.util.ImageDownloader -> com.scoreloop.client.android.ui.util.ImageDownloader:
    int HARD_CACHE_CAPACITY -> HARD_CACHE_CAPACITY
    int DELAY_BEFORE_PURGE -> DELAY_BEFORE_PURGE
    com.scoreloop.client.android.ui.util.ImageDownloader imageDownloader -> imageDownloader
    com.scoreloop.client.android.ui.util.Cache _cache -> _cache
    void assertImageDownloader() -> assertImageDownloader
    void assertCache() -> assertCache
    void downloadImage(java.lang.String,android.graphics.drawable.Drawable,android.widget.ImageView,android.graphics.drawable.Drawable) -> downloadImage
    void forceDownload(java.lang.String,android.graphics.drawable.Drawable,android.widget.ImageView,android.graphics.drawable.Drawable) -> forceDownload
    boolean cancelPotentialDownload(java.lang.String,android.widget.ImageView) -> cancelPotentialDownload
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapDownloaderTask getBitmapDownloaderTask(android.widget.ImageView) -> getBitmapDownloaderTask
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult downloadBitmapHttp(java.lang.String) -> downloadBitmapHttp
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult downloadBitmap(android.content.Context,java.lang.String) -> downloadBitmap
    void addBitmapToCache(java.lang.String,android.graphics.Bitmap) -> addBitmapToCache
    void access$0(com.scoreloop.client.android.ui.util.ImageDownloader,java.lang.String,android.graphics.Bitmap) -> access$0
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapDownloaderTask access$1(android.widget.ImageView) -> access$1
com.scoreloop.client.android.ui.util.ImageDownloader$BitmapDownloaderTask -> com.scoreloop.client.android.ui.util.j:
    java.lang.String url -> a
    java.lang.ref.WeakReference imageViewReference -> b
    android.graphics.drawable.Drawable errorDrawable -> c
    com.scoreloop.client.android.ui.util.ImageDownloader this$0 -> d
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$2(com.scoreloop.client.android.ui.util.ImageDownloader$BitmapDownloaderTask) -> a
com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult -> com.scoreloop.client.android.ui.util.g:
    android.graphics.Bitmap bitmap -> a
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult$Status status -> b
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult createNotFound() -> a
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult createError() -> b
    android.graphics.Bitmap getBitmap() -> c
    boolean isCachable() -> d
    boolean isNotFound() -> e
com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult$Status -> com.scoreloop.client.android.ui.util.h:
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult$Status OK -> a
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult$Status NOT_FOUND -> b
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult$Status ERROR -> c
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult$Status[] ENUM$VALUES -> d
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult$Status[] values() -> values
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult$Status valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.ui.util.ImageDownloader$DownloadedDrawable -> com.scoreloop.client.android.ui.util.i:
    java.lang.ref.WeakReference bitmapDownloaderTaskReference -> a
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapDownloaderTask getBitmapDownloaderTask() -> a
com.scoreloop.client.android.ui.util.ImageDownloader$FlushedInputStream -> com.scoreloop.client.android.ui.util.k:
    long skip(long) -> skip
com.scoreloop.client.android.ui.util.ImageHelper -> com.scoreloop.client.android.ui.util.ImageHelper:
    android.graphics.Bitmap decodeFile(android.net.Uri,android.content.ContentResolver,int) -> decodeFile
    android.graphics.Bitmap createThumbnail(android.net.Uri,android.content.ContentResolver,int,java.lang.String) -> createThumbnail
    java.lang.String getExifOrientation(android.net.Uri,android.content.ContentResolver,android.content.Context) -> getExifOrientation
com.scoreloop.client.android.ui.util.LocalImageStorage -> com.scoreloop.client.android.ui.util.LocalImageStorage:
    boolean isStorageWritable() -> isStorageWritable
    boolean isStorageReadable() -> isStorageReadable
    java.io.File getCacheDir(android.content.Context) -> getCacheDir
    java.io.File getCacheFile(android.content.Context,java.lang.String) -> getCacheFile
    com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult getBitmap(android.content.Context,java.lang.String) -> getBitmap
    boolean putBitmap(android.content.Context,java.lang.String,android.graphics.Bitmap) -> putBitmap
    boolean putBitmap(android.content.Context,java.lang.String,com.scoreloop.client.android.ui.util.ImageDownloader$BitmapResult) -> putBitmap
    java.io.File putStream(android.content.Context,java.lang.String,java.io.InputStream) -> putStream
org.anddev.andengine.audio.BaseAudioEntity -> org.anddev.andengine.audio.BaseAudioEntity:
    org.anddev.andengine.audio.IAudioManager mAudioManager -> mAudioManager
    float mLeftVolume -> mLeftVolume
    float mRightVolume -> mRightVolume
    org.anddev.andengine.audio.IAudioManager getAudioManager() -> getAudioManager
    float getActualLeftVolume() -> getActualLeftVolume
    float getActualRightVolume() -> getActualRightVolume
    float getMasterVolume() -> getMasterVolume
    float getVolume() -> getVolume
    float getLeftVolume() -> getLeftVolume
    float getRightVolume() -> getRightVolume
    void setVolume(float) -> setVolume
    void setVolume(float,float) -> setVolume
org.anddev.andengine.audio.BaseAudioManager -> org.anddev.andengine.audio.BaseAudioManager:
    java.util.ArrayList mAudioEntities -> mAudioEntities
    float mMasterVolume -> mMasterVolume
    float getMasterVolume() -> getMasterVolume
    void setMasterVolume(float) -> setMasterVolume
    void add(org.anddev.andengine.audio.IAudioEntity) -> add
    void releaseAll() -> releaseAll
org.anddev.andengine.audio.IAudioEntity -> org.anddev.andengine.audio.IAudioEntity:
    void play() -> play
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    float getVolume() -> getVolume
    void setVolume(float) -> setVolume
    float getLeftVolume() -> getLeftVolume
    float getRightVolume() -> getRightVolume
    void setVolume(float,float) -> setVolume
    void onMasterVolumeChanged(float) -> onMasterVolumeChanged
    void setLooping(boolean) -> setLooping
    void release() -> release
org.anddev.andengine.audio.IAudioManager -> org.anddev.andengine.audio.IAudioManager:
    float getMasterVolume() -> getMasterVolume
    void setMasterVolume(float) -> setMasterVolume
    void add(org.anddev.andengine.audio.IAudioEntity) -> add
    void releaseAll() -> releaseAll
org.anddev.andengine.audio.music.Music -> org.anddev.andengine.audio.music.Music:
    android.media.MediaPlayer mMediaPlayer -> mMediaPlayer
    boolean isPlaying() -> isPlaying
    android.media.MediaPlayer getMediaPlayer() -> getMediaPlayer
    org.anddev.andengine.audio.music.MusicManager getAudioManager() -> getAudioManager
    void play() -> play
    void stop() -> stop
    void resume() -> resume
    void pause() -> pause
    void release() -> release
    void setLooping(boolean) -> setLooping
    void setVolume(float,float) -> setVolume
    void onMasterVolumeChanged(float) -> onMasterVolumeChanged
    void seekTo(int) -> seekTo
    void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    org.anddev.andengine.audio.IAudioManager getAudioManager() -> getAudioManager
org.anddev.andengine.audio.music.MusicFactory -> org.anddev.andengine.audio.music.MusicFactory:
    java.lang.String sAssetBasePath -> sAssetBasePath
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    void reset() -> reset
    org.anddev.andengine.audio.music.Music createMusicFromFile(org.anddev.andengine.audio.music.MusicManager,android.content.Context,java.io.File) -> createMusicFromFile
    org.anddev.andengine.audio.music.Music createMusicFromAsset(org.anddev.andengine.audio.music.MusicManager,android.content.Context,java.lang.String) -> createMusicFromAsset
    org.anddev.andengine.audio.music.Music createMusicFromResource(org.anddev.andengine.audio.music.MusicManager,android.content.Context,int) -> createMusicFromResource
org.anddev.andengine.audio.music.MusicManager -> org.anddev.andengine.audio.music.MusicManager:
org.anddev.andengine.audio.sound.Sound -> org.anddev.andengine.audio.sound.Sound:
    int mSoundID -> mSoundID
    int mStreamID -> mStreamID
    int mLoopCount -> mLoopCount
    float mRate -> mRate
    void setLoopCount(int) -> setLoopCount
    void setRate(float) -> setRate
    org.anddev.andengine.audio.sound.SoundManager getAudioManager() -> getAudioManager
    void play() -> play
    void stop() -> stop
    void resume() -> resume
    void pause() -> pause
    void release() -> release
    void setLooping(boolean) -> setLooping
    void setVolume(float,float) -> setVolume
    void onMasterVolumeChanged(float) -> onMasterVolumeChanged
    org.anddev.andengine.audio.IAudioManager getAudioManager() -> getAudioManager
org.anddev.andengine.audio.sound.SoundFactory -> org.anddev.andengine.audio.sound.SoundFactory:
    java.lang.String sAssetBasePath -> sAssetBasePath
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    void reset() -> reset
    org.anddev.andengine.audio.sound.Sound createSoundFromPath(org.anddev.andengine.audio.sound.SoundManager,android.content.Context,java.lang.String) -> createSoundFromPath
    org.anddev.andengine.audio.sound.Sound createSoundFromAsset(org.anddev.andengine.audio.sound.SoundManager,android.content.Context,java.lang.String) -> createSoundFromAsset
    org.anddev.andengine.audio.sound.Sound createSoundFromResource(org.anddev.andengine.audio.sound.SoundManager,android.content.Context,int) -> createSoundFromResource
    org.anddev.andengine.audio.sound.Sound createSoundFromFileDescriptor(org.anddev.andengine.audio.sound.SoundManager,java.io.FileDescriptor,long,long) -> createSoundFromFileDescriptor
org.anddev.andengine.audio.sound.SoundLibrary -> org.anddev.andengine.audio.sound.SoundLibrary:
org.anddev.andengine.audio.sound.SoundManager -> org.anddev.andengine.audio.sound.SoundManager:
    int MAX_SIMULTANEOUS_STREAMS_DEFAULT -> MAX_SIMULTANEOUS_STREAMS_DEFAULT
    android.media.SoundPool mSoundPool -> mSoundPool
    android.media.SoundPool getSoundPool() -> getSoundPool
    void releaseAll() -> releaseAll
org.anddev.andengine.collision.BaseCollisionChecker -> org.anddev.andengine.collision.BaseCollisionChecker:
    boolean checkAxisAlignedRectangleCollision(float,float,float,float,float,float,float,float) -> checkAxisAlignedRectangleCollision
    int relativeCCW(float,float,float,float,float,float) -> relativeCCW
org.anddev.andengine.collision.LineCollisionChecker -> org.anddev.andengine.collision.LineCollisionChecker:
    boolean checkLineCollision(float,float,float,float,float,float,float,float) -> checkLineCollision
    void fillVertices(org.anddev.andengine.entity.primitive.Line,float[]) -> fillVertices
org.anddev.andengine.collision.RectangularShapeCollisionChecker -> org.anddev.andengine.collision.RectangularShapeCollisionChecker:
    int RECTANGULARSHAPE_VERTEX_COUNT -> RECTANGULARSHAPE_VERTEX_COUNT
    int LINE_VERTEX_COUNT -> LINE_VERTEX_COUNT
    float[] VERTICES_CONTAINS_TMP -> VERTICES_CONTAINS_TMP
    float[] VERTICES_COLLISION_TMP_A -> VERTICES_COLLISION_TMP_A
    float[] VERTICES_COLLISION_TMP_B -> VERTICES_COLLISION_TMP_B
    boolean checkContains(org.anddev.andengine.entity.shape.RectangularShape,float,float) -> checkContains
    boolean checkCollision(org.anddev.andengine.entity.shape.RectangularShape,org.anddev.andengine.entity.shape.RectangularShape) -> checkCollision
    boolean checkCollision(org.anddev.andengine.entity.shape.RectangularShape,org.anddev.andengine.entity.primitive.Line) -> checkCollision
    void fillVertices(org.anddev.andengine.entity.shape.RectangularShape,float[]) -> fillVertices
org.anddev.andengine.collision.ShapeCollisionChecker -> org.anddev.andengine.collision.ShapeCollisionChecker:
    boolean checkCollision(int,float[],int,float[]) -> checkCollision
    boolean checkCollisionSub(int,int,float[],float[],int) -> checkCollisionSub
    boolean checkContains(float[],int,float,float) -> checkContains
org.anddev.andengine.engine.DoubleSceneSplitScreenEngine -> org.anddev.andengine.engine.DoubleSceneSplitScreenEngine:
    org.anddev.andengine.entity.scene.Scene mSecondScene -> mSecondScene
    org.anddev.andengine.engine.camera.Camera mSecondCamera -> mSecondCamera
    org.anddev.andengine.engine.camera.Camera getCamera() -> getCamera
    org.anddev.andengine.engine.camera.Camera getFirstCamera() -> getFirstCamera
    org.anddev.andengine.engine.camera.Camera getSecondCamera() -> getSecondCamera
    org.anddev.andengine.entity.scene.Scene getScene() -> getScene
    org.anddev.andengine.entity.scene.Scene getFirstScene() -> getFirstScene
    org.anddev.andengine.entity.scene.Scene getSecondScene() -> getSecondScene
    void setScene(org.anddev.andengine.entity.scene.Scene) -> setScene
    void setFirstScene(org.anddev.andengine.entity.scene.Scene) -> setFirstScene
    void setSecondScene(org.anddev.andengine.entity.scene.Scene) -> setSecondScene
    void onDrawScene(javax.microedition.khronos.opengles.GL10) -> onDrawScene
    org.anddev.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> getCameraFromSurfaceTouchEvent
    org.anddev.andengine.entity.scene.Scene getSceneFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> getSceneFromSurfaceTouchEvent
    void onUpdateScene(float) -> onUpdateScene
    void convertSurfaceToSceneTouchEvent(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.input.touch.TouchEvent) -> convertSurfaceToSceneTouchEvent
    void updateUpdateHandlers(float) -> updateUpdateHandlers
org.anddev.andengine.engine.Engine -> org.anddev.andengine.engine.Engine:
    org.anddev.andengine.sensor.SensorDelay SENSORDELAY_DEFAULT -> SENSORDELAY_DEFAULT
    boolean mRunning -> mRunning
    long mLastTick -> mLastTick
    float mSecondsElapsedTotal -> mSecondsElapsedTotal
    org.anddev.andengine.engine.Engine$State mThreadLocker -> mThreadLocker
    org.anddev.andengine.engine.Engine$UpdateThread mUpdateThread -> mUpdateThread
    org.anddev.andengine.engine.handler.runnable.RunnableHandler mUpdateThreadRunnableHandler -> mUpdateThreadRunnableHandler
    org.anddev.andengine.engine.options.EngineOptions mEngineOptions -> mEngineOptions
    org.anddev.andengine.engine.camera.Camera mCamera -> mCamera
    org.anddev.andengine.input.touch.controller.ITouchController mTouchController -> mTouchController
    org.anddev.andengine.audio.sound.SoundManager mSoundManager -> mSoundManager
    org.anddev.andengine.audio.music.MusicManager mMusicManager -> mMusicManager
    org.anddev.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.anddev.andengine.opengl.buffer.BufferObjectManager mBufferObjectManager -> mBufferObjectManager
    org.anddev.andengine.opengl.font.FontManager mFontManager -> mFontManager
    org.anddev.andengine.entity.scene.Scene mScene -> mScene
    android.os.Vibrator mVibrator -> mVibrator
    org.anddev.andengine.sensor.location.ILocationListener mLocationListener -> mLocationListener
    android.location.Location mLocation -> mLocation
    org.anddev.andengine.sensor.accelerometer.IAccelerometerListener mAccelerometerListener -> mAccelerometerListener
    org.anddev.andengine.sensor.accelerometer.AccelerometerData mAccelerometerData -> mAccelerometerData
    org.anddev.andengine.sensor.orientation.IOrientationListener mOrientationListener -> mOrientationListener
    org.anddev.andengine.sensor.orientation.OrientationData mOrientationData -> mOrientationData
    org.anddev.andengine.engine.handler.UpdateHandlerList mUpdateHandlers -> mUpdateHandlers
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mIsMethodTracing -> mIsMethodTracing
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    org.anddev.andengine.entity.scene.Scene getScene() -> getScene
    void setScene(org.anddev.andengine.entity.scene.Scene) -> setScene
    org.anddev.andengine.engine.options.EngineOptions getEngineOptions() -> getEngineOptions
    org.anddev.andengine.engine.camera.Camera getCamera() -> getCamera
    float getSecondsElapsedTotal() -> getSecondsElapsedTotal
    void setSurfaceSize(int,int) -> setSurfaceSize
    int getSurfaceWidth() -> getSurfaceWidth
    int getSurfaceHeight() -> getSurfaceHeight
    org.anddev.andengine.input.touch.controller.ITouchController getTouchController() -> getTouchController
    void setTouchController(org.anddev.andengine.input.touch.controller.ITouchController) -> setTouchController
    org.anddev.andengine.sensor.accelerometer.AccelerometerData getAccelerometerData() -> getAccelerometerData
    org.anddev.andengine.sensor.orientation.OrientationData getOrientationData() -> getOrientationData
    org.anddev.andengine.audio.sound.SoundManager getSoundManager() -> getSoundManager
    org.anddev.andengine.audio.music.MusicManager getMusicManager() -> getMusicManager
    org.anddev.andengine.opengl.texture.TextureManager getTextureManager() -> getTextureManager
    org.anddev.andengine.opengl.font.FontManager getFontManager() -> getFontManager
    void clearUpdateHandlers() -> clearUpdateHandlers
    void registerUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    void unregisterUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    boolean isMethodTracing() -> isMethodTracing
    void startMethodTracing(java.lang.String) -> startMethodTracing
    void stopMethodTracing() -> stopMethodTracing
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onTouchEvent
    boolean onTouchHUD(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.input.touch.TouchEvent) -> onTouchHUD
    boolean onTouchScene(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent) -> onTouchScene
    void runOnUpdateThread(java.lang.Runnable) -> runOnUpdateThread
    void interruptUpdateThread() -> interruptUpdateThread
    void onResume() -> onResume
    void onPause() -> onPause
    org.anddev.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> getCameraFromSurfaceTouchEvent
    org.anddev.andengine.entity.scene.Scene getSceneFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> getSceneFromSurfaceTouchEvent
    void convertSurfaceToSceneTouchEvent(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.input.touch.TouchEvent) -> convertSurfaceToSceneTouchEvent
    void onLoadComplete(org.anddev.andengine.entity.scene.Scene) -> onLoadComplete
    void onTickUpdate() -> onTickUpdate
    void yieldDraw() -> yieldDraw
    void onUpdate(long) -> onUpdate
    void onUpdateScene(float) -> onUpdateScene
    void updateUpdateHandlers(float) -> updateUpdateHandlers
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onDrawScene(javax.microedition.khronos.opengles.GL10) -> onDrawScene
    long getNanosecondsElapsed() -> getNanosecondsElapsed
    long calculateNanosecondsElapsed(long,long) -> calculateNanosecondsElapsed
    boolean enableVibrator(android.content.Context) -> enableVibrator
    void vibrate(long) -> vibrate
    void vibrate(long[],int) -> vibrate
    void enableLocationSensor(android.content.Context,org.anddev.andengine.sensor.location.ILocationListener,org.anddev.andengine.sensor.location.LocationSensorOptions) -> enableLocationSensor
    void disableLocationSensor(android.content.Context) -> disableLocationSensor
    boolean enableAccelerometerSensor(android.content.Context,org.anddev.andengine.sensor.accelerometer.IAccelerometerListener) -> enableAccelerometerSensor
    boolean enableAccelerometerSensor(android.content.Context,org.anddev.andengine.sensor.accelerometer.IAccelerometerListener,org.anddev.andengine.sensor.accelerometer.AccelerometerSensorOptions) -> enableAccelerometerSensor
    boolean disableAccelerometerSensor(android.content.Context) -> disableAccelerometerSensor
    boolean enableOrientationSensor(android.content.Context,org.anddev.andengine.sensor.orientation.IOrientationListener) -> enableOrientationSensor
    boolean enableOrientationSensor(android.content.Context,org.anddev.andengine.sensor.orientation.IOrientationListener,org.anddev.andengine.sensor.orientation.OrientationSensorOptions) -> enableOrientationSensor
    boolean disableOrientationSensor(android.content.Context) -> disableOrientationSensor
    boolean isSensorSupported(android.hardware.SensorManager,int) -> isSensorSupported
    void registerSelfAsSensorListener(android.hardware.SensorManager,int,org.anddev.andengine.sensor.SensorDelay) -> registerSelfAsSensorListener
    void unregisterSelfAsSensorListener(android.hardware.SensorManager,int) -> unregisterSelfAsSensorListener
    org.anddev.andengine.engine.options.EngineOptions access$0(org.anddev.andengine.engine.Engine) -> access$0
org.anddev.andengine.engine.Engine$State -> org.anddev.andengine.engine.a:
    boolean mDrawing -> a
    void notifyCanDraw() -> a
    void notifyCanUpdate() -> b
    void waitUntilCanDraw() -> c
    void waitUntilCanUpdate() -> d
org.anddev.andengine.engine.Engine$UpdateThread -> org.anddev.andengine.engine.b:
    org.anddev.andengine.engine.Engine this$0 -> a
    void run() -> run
org.anddev.andengine.engine.FixedStepEngine -> org.anddev.andengine.engine.FixedStepEngine:
    long mStepLength -> mStepLength
    long mSecondsElapsedAccumulator -> mSecondsElapsedAccumulator
    void onUpdate(long) -> onUpdate
org.anddev.andengine.engine.LimitedFPSEngine -> org.anddev.andengine.engine.LimitedFPSEngine:
    long mPreferredFrameLengthNanoseconds -> mPreferredFrameLengthNanoseconds
    void onUpdate(long) -> onUpdate
org.anddev.andengine.engine.SingleSceneSplitScreenEngine -> org.anddev.andengine.engine.SingleSceneSplitScreenEngine:
    org.anddev.andengine.engine.camera.Camera mSecondCamera -> mSecondCamera
    org.anddev.andengine.engine.camera.Camera getCamera() -> getCamera
    org.anddev.andengine.engine.camera.Camera getFirstCamera() -> getFirstCamera
    org.anddev.andengine.engine.camera.Camera getSecondCamera() -> getSecondCamera
    void onDrawScene(javax.microedition.khronos.opengles.GL10) -> onDrawScene
    org.anddev.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> getCameraFromSurfaceTouchEvent
    void convertSurfaceToSceneTouchEvent(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.input.touch.TouchEvent) -> convertSurfaceToSceneTouchEvent
    void updateUpdateHandlers(float) -> updateUpdateHandlers
org.anddev.andengine.engine.camera.BoundCamera -> org.anddev.andengine.engine.camera.BoundCamera:
    boolean mBoundsEnabled -> mBoundsEnabled
    float mBoundsMinX -> mBoundsMinX
    float mBoundsMaxX -> mBoundsMaxX
    float mBoundsMinY -> mBoundsMinY
    float mBoundsMaxY -> mBoundsMaxY
    float mBoundsCenterX -> mBoundsCenterX
    float mBoundsCenterY -> mBoundsCenterY
    float mBoundsWidth -> mBoundsWidth
    float mBoundsHeight -> mBoundsHeight
    boolean isBoundsEnabled() -> isBoundsEnabled
    void setBoundsEnabled(boolean) -> setBoundsEnabled
    void setBounds(float,float,float,float) -> setBounds
    float getBoundsWidth() -> getBoundsWidth
    float getBoundsHeight() -> getBoundsHeight
    void setCenter(float,float) -> setCenter
    void ensureInBounds() -> ensureInBounds
    float determineBoundedX() -> determineBoundedX
    float determineBoundedY() -> determineBoundedY
org.anddev.andengine.engine.camera.Camera -> org.anddev.andengine.engine.camera.Camera:
    float[] VERTICES_TOUCH_TMP -> VERTICES_TOUCH_TMP
    float mMinX -> mMinX
    float mMaxX -> mMaxX
    float mMinY -> mMinY
    float mMaxY -> mMaxY
    float mNearZ -> mNearZ
    float mFarZ -> mFarZ
    org.anddev.andengine.engine.camera.hud.HUD mHUD -> mHUD
    org.anddev.andengine.entity.IEntity mChaseEntity -> mChaseEntity
    float mRotation -> mRotation
    float mCameraSceneRotation -> mCameraSceneRotation
    float getMinX() -> getMinX
    float getMaxX() -> getMaxX
    float getMinY() -> getMinY
    float getMaxY() -> getMaxY
    float getNearZClippingPlane() -> getNearZClippingPlane
    float getFarZClippingPlane() -> getFarZClippingPlane
    void setNearZClippingPlane(float) -> setNearZClippingPlane
    void setFarZClippingPlane(float) -> setFarZClippingPlane
    void setZClippingPlanes(float,float) -> setZClippingPlanes
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    void setCenter(float,float) -> setCenter
    void offsetCenter(float,float) -> offsetCenter
    org.anddev.andengine.engine.camera.hud.HUD getHUD() -> getHUD
    void setHUD(org.anddev.andengine.engine.camera.hud.HUD) -> setHUD
    boolean hasHUD() -> hasHUD
    void setChaseEntity(org.anddev.andengine.entity.IEntity) -> setChaseEntity
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getCameraSceneRotation() -> getCameraSceneRotation
    void setCameraSceneRotation(float) -> setCameraSceneRotation
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void onDrawHUD(javax.microedition.khronos.opengles.GL10) -> onDrawHUD
    boolean isRectangularShapeVisible(org.anddev.andengine.entity.shape.RectangularShape) -> isRectangularShapeVisible
    void onApplyMatrix(javax.microedition.khronos.opengles.GL10) -> onApplyMatrix
    void onApplyPositionIndependentMatrix(javax.microedition.khronos.opengles.GL10) -> onApplyPositionIndependentMatrix
    void onApplyCameraSceneMatrix(javax.microedition.khronos.opengles.GL10) -> onApplyCameraSceneMatrix
    void applyRotation(javax.microedition.khronos.opengles.GL10,float,float,float) -> applyRotation
    void convertSceneToCameraSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> convertSceneToCameraSceneTouchEvent
    void convertCameraSceneToSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> convertCameraSceneToSceneTouchEvent
    void applySceneToCameraSceneOffset(org.anddev.andengine.input.touch.TouchEvent) -> applySceneToCameraSceneOffset
    void unapplySceneToCameraSceneOffset(org.anddev.andengine.input.touch.TouchEvent) -> unapplySceneToCameraSceneOffset
    void applySceneRotation(org.anddev.andengine.input.touch.TouchEvent) -> applySceneRotation
    void unapplySceneRotation(org.anddev.andengine.input.touch.TouchEvent) -> unapplySceneRotation
    void applyCameraSceneRotation(org.anddev.andengine.input.touch.TouchEvent) -> applyCameraSceneRotation
    void unapplyCameraSceneRotation(org.anddev.andengine.input.touch.TouchEvent) -> unapplyCameraSceneRotation
    void convertSurfaceToSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent,int,int) -> convertSurfaceToSceneTouchEvent
    void convertAxisAlignedSurfaceToSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent,float,float) -> convertAxisAlignedSurfaceToSceneTouchEvent
org.anddev.andengine.engine.camera.CameraFactory -> org.anddev.andengine.engine.camera.CameraFactory:
    org.anddev.andengine.engine.camera.Camera createPixelPerfectCamera(android.app.Activity,float,float) -> createPixelPerfectCamera
    android.util.DisplayMetrics getDisplayMetrics(android.app.Activity) -> getDisplayMetrics
org.anddev.andengine.engine.camera.SmoothCamera -> org.anddev.andengine.engine.camera.SmoothCamera:
    float mMaxVelocityX -> mMaxVelocityX
    float mMaxVelocityY -> mMaxVelocityY
    float mMaxZoomFactorChange -> mMaxZoomFactorChange
    float mTargetCenterX -> mTargetCenterX
    float mTargetCenterY -> mTargetCenterY
    float mTargetZoomFactor -> mTargetZoomFactor
    void setCenter(float,float) -> setCenter
    void setCenterDirect(float,float) -> setCenterDirect
    void setZoomFactor(float) -> setZoomFactor
    void setZoomFactorDirect(float) -> setZoomFactorDirect
    void setMaxVelocityX(float) -> setMaxVelocityX
    void setMaxVelocityY(float) -> setMaxVelocityY
    void setMaxVelocity(float,float) -> setMaxVelocity
    void setMaxZoomFactorChange(float) -> setMaxZoomFactorChange
    void onSmoothZoomStarted() -> onSmoothZoomStarted
    void onSmoothZoomFinished() -> onSmoothZoomFinished
    void onUpdate(float) -> onUpdate
    float limitToMaxVelocityX(float,float) -> limitToMaxVelocityX
    float limitToMaxVelocityY(float,float) -> limitToMaxVelocityY
    float limitToMaxZoomFactorChange(float,float) -> limitToMaxZoomFactorChange
org.anddev.andengine.engine.camera.ZoomCamera -> org.anddev.andengine.engine.camera.ZoomCamera:
    float mZoomFactor -> mZoomFactor
    float getZoomFactor() -> getZoomFactor
    void setZoomFactor(float) -> setZoomFactor
    float getMinX() -> getMinX
    float getMaxX() -> getMaxX
    float getMinY() -> getMinY
    float getMaxY() -> getMaxY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void applySceneToCameraSceneOffset(org.anddev.andengine.input.touch.TouchEvent) -> applySceneToCameraSceneOffset
    void unapplySceneToCameraSceneOffset(org.anddev.andengine.input.touch.TouchEvent) -> unapplySceneToCameraSceneOffset
org.anddev.andengine.engine.camera.hud.HUD -> org.anddev.andengine.engine.camera.hud.HUD:
org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl -> org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl:
    org.anddev.andengine.input.touch.detector.ClickDetector mClickDetector -> mClickDetector
    org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener getOnScreenControlListener() -> getOnScreenControlListener
    void setOnControlClickEnabled(boolean) -> setOnControlClickEnabled
    void setOnControlClickMaximumMilliseconds(long) -> setOnControlClickMaximumMilliseconds
    void onClick(org.anddev.andengine.input.touch.detector.ClickDetector,org.anddev.andengine.input.touch.TouchEvent) -> onClick
    boolean onHandleControlBaseTouched(org.anddev.andengine.input.touch.TouchEvent,float,float) -> onHandleControlBaseTouched
    void onUpdateControlKnob(float,float) -> onUpdateControlKnob
    org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener getOnScreenControlListener() -> getOnScreenControlListener
org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener -> org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener:
    void onControlClick(org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl) -> onControlClick
org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl -> org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl:
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    org.anddev.andengine.entity.sprite.Sprite mControlBase -> mControlBase
    org.anddev.andengine.entity.sprite.Sprite mControlKnob -> mControlKnob
    float mControlValueX -> mControlValueX
    float mControlValueY -> mControlValueY
    org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener mOnScreenControlListener -> mOnScreenControlListener
    int mActivePointerID -> mActivePointerID
    org.anddev.andengine.entity.sprite.Sprite getControlBase() -> getControlBase
    org.anddev.andengine.entity.sprite.Sprite getControlKnob() -> getControlKnob
    org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener getOnScreenControlListener() -> getOnScreenControlListener
    boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    void refreshControlKnobPosition() -> refreshControlKnobPosition
    void onHandleControlBaseLeft() -> onHandleControlBaseLeft
    void onHandleControlKnobReleased() -> onHandleControlKnobReleased
    boolean onHandleControlBaseTouched(org.anddev.andengine.input.touch.TouchEvent,float,float) -> onHandleControlBaseTouched
    void updateControlKnob(org.anddev.andengine.input.touch.TouchEvent,float,float) -> updateControlKnob
    void onUpdateControlKnob(float,float) -> onUpdateControlKnob
    org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener access$0(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl) -> access$0
    float access$1(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl) -> access$1
    float access$2(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl) -> access$2
org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$1 -> org.anddev.andengine.engine.camera.hud.controls.b:
    org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl this$0 -> a
    boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$2 -> org.anddev.andengine.engine.camera.hud.controls.a:
    org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl this$0 -> a
    void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler) -> onTimePassed
org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener -> org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener:
    void onControlChange(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl,float,float) -> onControlChange
org.anddev.andengine.engine.camera.hud.controls.DigitalOnScreenControl -> org.anddev.andengine.engine.camera.hud.controls.DigitalOnScreenControl:
    float EXTENT_SIDE -> EXTENT_SIDE
    float EXTENT_DIAGONAL -> EXTENT_DIAGONAL
    float ANGLE_DELTA -> ANGLE_DELTA
    boolean mAllowDiagonal -> mAllowDiagonal
    boolean isAllowDiagonal() -> isAllowDiagonal
    void setAllowDiagonal(boolean) -> setAllowDiagonal
    void onUpdateControlKnob(float,float) -> onUpdateControlKnob
    boolean testDiagonalAngle(float,float) -> testDiagonalAngle
org.anddev.andengine.engine.handler.BaseEntityUpdateHandler -> org.anddev.andengine.engine.handler.BaseEntityUpdateHandler:
    org.anddev.andengine.entity.IEntity mEntity -> mEntity
    void onUpdate(float,org.anddev.andengine.entity.IEntity) -> onUpdate
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.engine.handler.IUpdateHandler -> org.anddev.andengine.engine.handler.IUpdateHandler:
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher -> org.anddev.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher:
org.anddev.andengine.engine.handler.UpdateHandlerList -> org.anddev.andengine.engine.handler.UpdateHandlerList:
    long serialVersionUID -> serialVersionUID
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.engine.handler.collision.CollisionHandler -> org.anddev.andengine.engine.handler.collision.CollisionHandler:
    org.anddev.andengine.engine.handler.collision.ICollisionCallback mCollisionCallback -> mCollisionCallback
    org.anddev.andengine.entity.shape.IShape mCheckShape -> mCheckShape
    java.util.ArrayList mTargetStaticEntities -> mTargetStaticEntities
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.engine.handler.collision.ICollisionCallback -> org.anddev.andengine.engine.handler.collision.ICollisionCallback:
    boolean onCollision(org.anddev.andengine.entity.shape.IShape,org.anddev.andengine.entity.shape.IShape) -> onCollision
org.anddev.andengine.engine.handler.physics.PhysicsHandler -> org.anddev.andengine.engine.handler.physics.PhysicsHandler:
    boolean mEnabled -> mEnabled
    float mAccelerationX -> mAccelerationX
    float mAccelerationY -> mAccelerationY
    float mVelocityX -> mVelocityX
    float mVelocityY -> mVelocityY
    float mAngularVelocity -> mAngularVelocity
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    float getVelocityX() -> getVelocityX
    float getVelocityY() -> getVelocityY
    void setVelocityX(float) -> setVelocityX
    void setVelocityY(float) -> setVelocityY
    void setVelocity(float) -> setVelocity
    void setVelocity(float,float) -> setVelocity
    float getAccelerationX() -> getAccelerationX
    float getAccelerationY() -> getAccelerationY
    void setAccelerationX(float) -> setAccelerationX
    void setAccelerationY(float) -> setAccelerationY
    void setAcceleration(float,float) -> setAcceleration
    void setAcceleration(float) -> setAcceleration
    void accelerate(float,float) -> accelerate
    float getAngularVelocity() -> getAngularVelocity
    void setAngularVelocity(float) -> setAngularVelocity
    void onUpdate(float,org.anddev.andengine.entity.IEntity) -> onUpdate
    void reset() -> reset
org.anddev.andengine.engine.handler.runnable.RunnableHandler -> org.anddev.andengine.engine.handler.runnable.RunnableHandler:
    java.util.ArrayList mRunnables -> mRunnables
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void postRunnable(java.lang.Runnable) -> postRunnable
org.anddev.andengine.engine.handler.timer.ITimerCallback -> org.anddev.andengine.engine.handler.timer.ITimerCallback:
    void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler) -> onTimePassed
org.anddev.andengine.engine.handler.timer.TimerHandler -> org.anddev.andengine.engine.handler.timer.TimerHandler:
    float mTimerSeconds -> mTimerSeconds
    float mTimerSecondsElapsed -> mTimerSecondsElapsed
    boolean mTimerCallbackTriggered -> mTimerCallbackTriggered
    org.anddev.andengine.engine.handler.timer.ITimerCallback mTimerCallback -> mTimerCallback
    boolean mAutoReset -> mAutoReset
    boolean isAutoReset() -> isAutoReset
    void setAutoReset(boolean) -> setAutoReset
    void setTimerSeconds(float) -> setTimerSeconds
    float getTimerSeconds() -> getTimerSeconds
    float getTimerSecondsElapsed() -> getTimerSecondsElapsed
    boolean isTimerCallbackTriggered() -> isTimerCallbackTriggered
    void setTimerCallbackTriggered(boolean) -> setTimerCallbackTriggered
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.engine.options.EngineOptions -> org.anddev.andengine.engine.options.EngineOptions:
    boolean mFullscreen -> mFullscreen
    org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation mScreenOrientation -> mScreenOrientation
    org.anddev.andengine.engine.options.resolutionpolicy.IResolutionPolicy mResolutionPolicy -> mResolutionPolicy
    org.anddev.andengine.engine.camera.Camera mCamera -> mCamera
    org.anddev.andengine.engine.options.TouchOptions mTouchOptions -> mTouchOptions
    org.anddev.andengine.engine.options.RenderOptions mRenderOptions -> mRenderOptions
    boolean mNeedsSound -> mNeedsSound
    boolean mNeedsMusic -> mNeedsMusic
    org.anddev.andengine.engine.options.WakeLockOptions mWakeLockOptions -> mWakeLockOptions
    int mUpdateThreadPriority -> mUpdateThreadPriority
    org.anddev.andengine.engine.options.TouchOptions getTouchOptions() -> getTouchOptions
    org.anddev.andengine.engine.options.RenderOptions getRenderOptions() -> getRenderOptions
    boolean isFullscreen() -> isFullscreen
    org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation getScreenOrientation() -> getScreenOrientation
    org.anddev.andengine.engine.options.resolutionpolicy.IResolutionPolicy getResolutionPolicy() -> getResolutionPolicy
    org.anddev.andengine.engine.camera.Camera getCamera() -> getCamera
    int getUpdateThreadPriority() -> getUpdateThreadPriority
    void setUpdateThreadPriority(int) -> setUpdateThreadPriority
    boolean needsSound() -> needsSound
    org.anddev.andengine.engine.options.EngineOptions setNeedsSound(boolean) -> setNeedsSound
    boolean needsMusic() -> needsMusic
    org.anddev.andengine.engine.options.EngineOptions setNeedsMusic(boolean) -> setNeedsMusic
    org.anddev.andengine.engine.options.WakeLockOptions getWakeLockOptions() -> getWakeLockOptions
    org.anddev.andengine.engine.options.EngineOptions setWakeLockOptions(org.anddev.andengine.engine.options.WakeLockOptions) -> setWakeLockOptions
org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation -> org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation:
    org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation LANDSCAPE -> LANDSCAPE
    org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation PORTRAIT -> PORTRAIT
    org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation[] ENUM$VALUES -> ENUM$VALUES
    org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation[] values() -> values
    org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation valueOf(java.lang.String) -> valueOf
org.anddev.andengine.engine.options.RenderOptions -> org.anddev.andengine.engine.options.RenderOptions:
    boolean mDisableExtensionVertexBufferObjects -> mDisableExtensionVertexBufferObjects
    org.anddev.andengine.engine.options.RenderOptions enableExtensionVertexBufferObjects() -> enableExtensionVertexBufferObjects
    org.anddev.andengine.engine.options.RenderOptions disableExtensionVertexBufferObjects() -> disableExtensionVertexBufferObjects
    org.anddev.andengine.engine.options.RenderOptions setDisableExtensionVertexBufferObjects(boolean) -> setDisableExtensionVertexBufferObjects
    boolean isDisableExtensionVertexBufferObjects() -> isDisableExtensionVertexBufferObjects
org.anddev.andengine.engine.options.TouchOptions -> org.anddev.andengine.engine.options.TouchOptions:
    boolean mRunOnUpdateThread -> mRunOnUpdateThread
    org.anddev.andengine.engine.options.TouchOptions enableRunOnUpdateThread() -> enableRunOnUpdateThread
    org.anddev.andengine.engine.options.TouchOptions disableRunOnUpdateThread() -> disableRunOnUpdateThread
    org.anddev.andengine.engine.options.TouchOptions setRunOnUpdateThread(boolean) -> setRunOnUpdateThread
    boolean isRunOnUpdateThread() -> isRunOnUpdateThread
org.anddev.andengine.engine.options.WakeLockOptions -> org.anddev.andengine.engine.options.WakeLockOptions:
    org.anddev.andengine.engine.options.WakeLockOptions BRIGHT -> BRIGHT
    org.anddev.andengine.engine.options.WakeLockOptions SCREEN_BRIGHT -> SCREEN_BRIGHT
    org.anddev.andengine.engine.options.WakeLockOptions SCREEN_DIM -> SCREEN_DIM
    org.anddev.andengine.engine.options.WakeLockOptions SCREEN_ON -> SCREEN_ON
    int mFlag -> mFlag
    org.anddev.andengine.engine.options.WakeLockOptions[] ENUM$VALUES -> ENUM$VALUES
    int getFlag() -> getFlag
    org.anddev.andengine.engine.options.WakeLockOptions[] values() -> values
    org.anddev.andengine.engine.options.WakeLockOptions valueOf(java.lang.String) -> valueOf
org.anddev.andengine.engine.options.resolutionpolicy.BaseResolutionPolicy -> org.anddev.andengine.engine.options.resolutionpolicy.BaseResolutionPolicy:
    void throwOnNotMeasureSpecEXACTLY(int,int) -> throwOnNotMeasureSpecEXACTLY
org.anddev.andengine.engine.options.resolutionpolicy.FillResolutionPolicy -> org.anddev.andengine.engine.options.resolutionpolicy.FillResolutionPolicy:
    void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.anddev.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy -> org.anddev.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy:
    int mWidth -> mWidth
    int mHeight -> mHeight
    void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.anddev.andengine.engine.options.resolutionpolicy.IResolutionPolicy -> org.anddev.andengine.engine.options.resolutionpolicy.IResolutionPolicy:
    void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.anddev.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy -> org.anddev.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy:
    float mRatio -> mRatio
    void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.anddev.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy -> org.anddev.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy:
    float mWidthScale -> mWidthScale
    float mHeightScale -> mHeightScale
    void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.anddev.andengine.entity.Entity -> org.anddev.andengine.entity.Entity:
    int CHILDREN_CAPACITY_DEFAULT -> CHILDREN_CAPACITY_DEFAULT
    int ENTITYMODIFIERS_CAPACITY_DEFAULT -> ENTITYMODIFIERS_CAPACITY_DEFAULT
    int UPDATEHANDLERS_CAPACITY_DEFAULT -> UPDATEHANDLERS_CAPACITY_DEFAULT
    float[] VERTICES_SCENE_TO_LOCAL_TMP -> VERTICES_SCENE_TO_LOCAL_TMP
    float[] VERTICES_LOCAL_TO_SCENE_TMP -> VERTICES_LOCAL_TO_SCENE_TMP
    org.anddev.andengine.util.ParameterCallable PARAMETERCALLABLE_DETACHCHILD -> PARAMETERCALLABLE_DETACHCHILD
    boolean mVisible -> mVisible
    boolean mIgnoreUpdate -> mIgnoreUpdate
    boolean mChildrenVisible -> mChildrenVisible
    boolean mChildrenIgnoreUpdate -> mChildrenIgnoreUpdate
    int mZIndex -> mZIndex
    org.anddev.andengine.entity.IEntity mParent -> mParent
    org.anddev.andengine.util.SmartList mChildren -> mChildren
    org.anddev.andengine.entity.modifier.EntityModifierList mEntityModifiers -> mEntityModifiers
    org.anddev.andengine.engine.handler.UpdateHandlerList mUpdateHandlers -> mUpdateHandlers
    float mRed -> mRed
    float mGreen -> mGreen
    float mBlue -> mBlue
    float mAlpha -> mAlpha
    float mX -> mX
    float mY -> mY
    float mInitialX -> mInitialX
    float mInitialY -> mInitialY
    float mRotation -> mRotation
    float mRotationCenterX -> mRotationCenterX
    float mRotationCenterY -> mRotationCenterY
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mScaleCenterX -> mScaleCenterX
    float mScaleCenterY -> mScaleCenterY
    boolean mLocalToParentTransformationDirty -> mLocalToParentTransformationDirty
    boolean mParentToLocalTransformationDirty -> mParentToLocalTransformationDirty
    org.anddev.andengine.util.Transformation mLocalToParentTransformation -> mLocalToParentTransformation
    org.anddev.andengine.util.Transformation mParentToLocalTransformation -> mParentToLocalTransformation
    org.anddev.andengine.util.Transformation mLocalToSceneTransformation -> mLocalToSceneTransformation
    org.anddev.andengine.util.Transformation mSceneToLocalTransformation -> mSceneToLocalTransformation
    java.lang.Object mUserData -> mUserData
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    boolean isChildrenVisible() -> isChildrenVisible
    void setChildrenVisible(boolean) -> setChildrenVisible
    boolean isIgnoreUpdate() -> isIgnoreUpdate
    void setIgnoreUpdate(boolean) -> setIgnoreUpdate
    boolean isChildrenIgnoreUpdate() -> isChildrenIgnoreUpdate
    void setChildrenIgnoreUpdate(boolean) -> setChildrenIgnoreUpdate
    org.anddev.andengine.entity.IEntity getParent() -> getParent
    void setParent(org.anddev.andengine.entity.IEntity) -> setParent
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    float getX() -> getX
    float getY() -> getY
    float getInitialX() -> getInitialX
    float getInitialY() -> getInitialY
    void setPosition(org.anddev.andengine.entity.IEntity) -> setPosition
    void setPosition(float,float) -> setPosition
    void setInitialPosition() -> setInitialPosition
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationCenterX() -> getRotationCenterX
    float getRotationCenterY() -> getRotationCenterY
    void setRotationCenterX(float) -> setRotationCenterX
    void setRotationCenterY(float) -> setRotationCenterY
    void setRotationCenter(float,float) -> setRotationCenter
    boolean isScaled() -> isScaled
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setScaleX(float) -> setScaleX
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    float getScaleCenterX() -> getScaleCenterX
    float getScaleCenterY() -> getScaleCenterY
    void setScaleCenterX(float) -> setScaleCenterX
    void setScaleCenterY(float) -> setScaleCenterY
    void setScaleCenter(float,float) -> setScaleCenter
    float getRed() -> getRed
    float getGreen() -> getGreen
    float getBlue() -> getBlue
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
    int getChildCount() -> getChildCount
    org.anddev.andengine.entity.IEntity getChild(int) -> getChild
    org.anddev.andengine.entity.IEntity getFirstChild() -> getFirstChild
    org.anddev.andengine.entity.IEntity getLastChild() -> getLastChild
    boolean detachSelf() -> detachSelf
    void detachChildren() -> detachChildren
    void attachChild(org.anddev.andengine.entity.IEntity) -> attachChild
    org.anddev.andengine.entity.IEntity findChild(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> findChild
    void sortChildren() -> sortChildren
    void sortChildren(java.util.Comparator) -> sortChildren
    boolean detachChild(org.anddev.andengine.entity.IEntity) -> detachChild
    org.anddev.andengine.entity.IEntity detachChild(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> detachChild
    boolean detachChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> detachChildren
    void callOnChildren(org.anddev.andengine.entity.IEntity$IEntityCallable) -> callOnChildren
    void callOnChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher,org.anddev.andengine.entity.IEntity$IEntityCallable) -> callOnChildren
    void registerUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    boolean unregisterUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    boolean unregisterUpdateHandlers(org.anddev.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher) -> unregisterUpdateHandlers
    void clearUpdateHandlers() -> clearUpdateHandlers
    void registerEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier) -> registerEntityModifier
    boolean unregisterEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier) -> unregisterEntityModifier
    boolean unregisterEntityModifiers(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher) -> unregisterEntityModifiers
    void clearEntityModifiers() -> clearEntityModifiers
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    org.anddev.andengine.util.Transformation getLocalToParentTransformation() -> getLocalToParentTransformation
    org.anddev.andengine.util.Transformation getParentToLocalTransformation() -> getParentToLocalTransformation
    org.anddev.andengine.util.Transformation getLocalToSceneTransformation() -> getLocalToSceneTransformation
    org.anddev.andengine.util.Transformation getSceneToLocalTransformation() -> getSceneToLocalTransformation
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float,float,float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[],float[]) -> convertLocalToSceneCoordinates
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float,float,float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[],float[]) -> convertSceneToLocalCoordinates
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
    void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onDraw
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void doDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> doDraw
    void allocateEntityModifiers() -> allocateEntityModifiers
    void allocateChildren() -> allocateChildren
    void allocateUpdateHandlers() -> allocateUpdateHandlers
    void onApplyTransformations(javax.microedition.khronos.opengles.GL10) -> onApplyTransformations
    void applyTranslation(javax.microedition.khronos.opengles.GL10) -> applyTranslation
    void applyRotation(javax.microedition.khronos.opengles.GL10) -> applyRotation
    void applyScale(javax.microedition.khronos.opengles.GL10) -> applyScale
    void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
org.anddev.andengine.entity.Entity$1 -> org.anddev.andengine.entity.b:
    void call(java.lang.Object) -> call
org.anddev.andengine.entity.IEntity -> org.anddev.andengine.entity.IEntity:
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    boolean isIgnoreUpdate() -> isIgnoreUpdate
    void setIgnoreUpdate(boolean) -> setIgnoreUpdate
    boolean isChildrenVisible() -> isChildrenVisible
    void setChildrenVisible(boolean) -> setChildrenVisible
    boolean isChildrenIgnoreUpdate() -> isChildrenIgnoreUpdate
    void setChildrenIgnoreUpdate(boolean) -> setChildrenIgnoreUpdate
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    org.anddev.andengine.entity.IEntity getParent() -> getParent
    void setParent(org.anddev.andengine.entity.IEntity) -> setParent
    float getX() -> getX
    float getY() -> getY
    float getInitialX() -> getInitialX
    float getInitialY() -> getInitialY
    void setInitialPosition() -> setInitialPosition
    void setPosition(org.anddev.andengine.entity.IEntity) -> setPosition
    void setPosition(float,float) -> setPosition
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationCenterX() -> getRotationCenterX
    float getRotationCenterY() -> getRotationCenterY
    void setRotationCenterX(float) -> setRotationCenterX
    void setRotationCenterY(float) -> setRotationCenterY
    void setRotationCenter(float,float) -> setRotationCenter
    boolean isScaled() -> isScaled
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setScaleX(float) -> setScaleX
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    float getScaleCenterX() -> getScaleCenterX
    float getScaleCenterY() -> getScaleCenterY
    void setScaleCenterX(float) -> setScaleCenterX
    void setScaleCenterY(float) -> setScaleCenterY
    void setScaleCenter(float,float) -> setScaleCenter
    float getRed() -> getRed
    float getGreen() -> getGreen
    float getBlue() -> getBlue
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float,float,float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[],float[]) -> convertLocalToSceneCoordinates
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float,float,float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[],float[]) -> convertSceneToLocalCoordinates
    org.anddev.andengine.util.Transformation getLocalToSceneTransformation() -> getLocalToSceneTransformation
    org.anddev.andengine.util.Transformation getSceneToLocalTransformation() -> getSceneToLocalTransformation
    int getChildCount() -> getChildCount
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    void attachChild(org.anddev.andengine.entity.IEntity) -> attachChild
    org.anddev.andengine.entity.IEntity getChild(int) -> getChild
    org.anddev.andengine.entity.IEntity getFirstChild() -> getFirstChild
    org.anddev.andengine.entity.IEntity getLastChild() -> getLastChild
    org.anddev.andengine.entity.IEntity findChild(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> findChild
    void sortChildren() -> sortChildren
    void sortChildren(java.util.Comparator) -> sortChildren
    boolean detachSelf() -> detachSelf
    boolean detachChild(org.anddev.andengine.entity.IEntity) -> detachChild
    org.anddev.andengine.entity.IEntity detachChild(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> detachChild
    boolean detachChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> detachChildren
    void detachChildren() -> detachChildren
    void callOnChildren(org.anddev.andengine.entity.IEntity$IEntityCallable) -> callOnChildren
    void callOnChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher,org.anddev.andengine.entity.IEntity$IEntityCallable) -> callOnChildren
    void registerUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    boolean unregisterUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    boolean unregisterUpdateHandlers(org.anddev.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher) -> unregisterUpdateHandlers
    void clearUpdateHandlers() -> clearUpdateHandlers
    void registerEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier) -> registerEntityModifier
    boolean unregisterEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier) -> unregisterEntityModifier
    boolean unregisterEntityModifiers(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher) -> unregisterEntityModifiers
    void clearEntityModifiers() -> clearEntityModifiers
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
org.anddev.andengine.entity.IEntity$IEntityCallable -> org.anddev.andengine.entity.IEntity$IEntityCallable:
    void call(org.anddev.andengine.entity.IEntity) -> call
org.anddev.andengine.entity.IEntity$IEntityMatcher -> org.anddev.andengine.entity.IEntity$IEntityMatcher:
    boolean matches(org.anddev.andengine.entity.IEntity) -> matches
org.anddev.andengine.entity.ZIndexSorter -> org.anddev.andengine.entity.ZIndexSorter:
    org.anddev.andengine.entity.ZIndexSorter INSTANCE -> INSTANCE
    java.util.Comparator mZIndexComparator -> mZIndexComparator
    org.anddev.andengine.entity.ZIndexSorter getInstance() -> getInstance
    void sort(org.anddev.andengine.entity.IEntity[]) -> sort
    void sort(org.anddev.andengine.entity.IEntity[],int,int) -> sort
    void sort(java.util.List) -> sort
    void sort(java.util.List,int,int) -> sort
org.anddev.andengine.entity.ZIndexSorter$1 -> org.anddev.andengine.entity.a:
    org.anddev.andengine.entity.ZIndexSorter this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer -> org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer:
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap mTMXTiledMap -> mTMXTiledMap
    java.lang.String mName -> mName
    int mTileColumns -> mTileColumns
    int mTileRows -> mTileRows
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTile[][] mTMXTiles -> mTMXTiles
    int mTilesAdded -> mTilesAdded
    int mGlobalTileIDsExpected -> mGlobalTileIDsExpected
    float[] mCullingVertices -> mCullingVertices
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties mTMXLayerProperties -> mTMXLayerProperties
    java.lang.String getName() -> getName
    int getTileColumns() -> getTileColumns
    int getTileRows() -> getTileRows
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTile[][] getTMXTiles() -> getTMXTiles
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTile getTMXTile(int,int) -> getTMXTile
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTile getTMXTileAt(float,float) -> getTMXTileAt
    void addTMXLayerProperty(org.anddev.andengine.entity.layer.tiled.tmx.TMXLayerProperty) -> addTMXLayerProperty
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXLayerProperties() -> getTMXLayerProperties
    void setRotation(float) -> setRotation
    void onUpdateVertexBuffer() -> onUpdateVertexBuffer
    void onInitDraw(javax.microedition.khronos.opengles.GL10) -> onInitDraw
    void onApplyVertices(javax.microedition.khronos.opengles.GL10) -> onApplyVertices
    void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> drawVertices
    void onManagedUpdate(float) -> onManagedUpdate
    void initializeTMXTileFromXML(org.xml.sax.Attributes,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener) -> initializeTMXTileFromXML
    void initializeTMXTilesFromDataString(java.lang.String,java.lang.String,java.lang.String,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener) -> initializeTMXTilesFromDataString
    void addTileByGlobalTileID(int,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener) -> addTileByGlobalTileID
    int readGlobalTileID(java.io.DataInputStream) -> readGlobalTileID
org.anddev.andengine.entity.layer.tiled.tmx.TMXLayerProperty -> org.anddev.andengine.entity.layer.tiled.tmx.TMXLayerProperty:
org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader -> org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader:
    android.content.Context mContext -> mContext
    org.anddev.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.anddev.andengine.opengl.texture.TextureOptions mTextureOptions -> mTextureOptions
    org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener mTMXTilePropertyListener -> mTMXTilePropertyListener
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap loadFromAsset(android.content.Context,java.lang.String) -> loadFromAsset
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap load(java.io.InputStream) -> load
org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener -> org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener:
    void onTMXTileWithPropertiesCreated(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap,org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer,org.anddev.andengine.entity.layer.tiled.tmx.TMXTile,org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties) -> onTMXTileWithPropertiesCreated
org.anddev.andengine.entity.layer.tiled.tmx.TMXObject -> org.anddev.andengine.entity.layer.tiled.tmx.TMXObject:
    java.lang.String mName -> mName
    java.lang.String mType -> mType
    int mX -> mX
    int mY -> mY
    int mWidth -> mWidth
    int mHeight -> mHeight
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties mTMXObjectProperties -> mTMXObjectProperties
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    int getX() -> getX
    int getY() -> getY
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void addTMXObjectProperty(org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectProperty) -> addTMXObjectProperty
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXObjectProperties() -> getTMXObjectProperties
org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup -> org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup:
    java.lang.String mName -> mName
    int mWidth -> mWidth
    int mHeight -> mHeight
    java.util.ArrayList mTMXObjects -> mTMXObjects
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties mTMXObjectGroupProperties -> mTMXObjectGroupProperties
    java.lang.String getName() -> getName
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void addTMXObject(org.anddev.andengine.entity.layer.tiled.tmx.TMXObject) -> addTMXObject
    java.util.ArrayList getTMXObjects() -> getTMXObjects
    void addTMXObjectGroupProperty(org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroupProperty) -> addTMXObjectGroupProperty
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXObjectGroupProperties() -> getTMXObjectGroupProperties
org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroupProperty -> org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroupProperty:
org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectProperty -> org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectProperty:
org.anddev.andengine.entity.layer.tiled.tmx.TMXParser -> org.anddev.andengine.entity.layer.tiled.tmx.TMXParser:
    android.content.Context mContext -> mContext
    org.anddev.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener mTMXTilePropertyListener -> mTMXTilePropertyListener
    org.anddev.andengine.opengl.texture.TextureOptions mTextureOptions -> mTextureOptions
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap mTMXTiledMap -> mTMXTiledMap
    int mLastTileSetTileID -> mLastTileSetTileID
    java.lang.StringBuilder mStringBuilder -> mStringBuilder
    java.lang.String mDataEncoding -> mDataEncoding
    java.lang.String mDataCompression -> mDataCompression
    boolean mInMap -> mInMap
    boolean mInTileset -> mInTileset
    boolean mInImage -> mInImage
    boolean mInTile -> mInTile
    boolean mInProperties -> mInProperties
    boolean mInProperty -> mInProperty
    boolean mInLayer -> mInLayer
    boolean mInData -> mInData
    boolean mInObjectGroup -> mInObjectGroup
    boolean mInObject -> mInObject
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap getTMXTiledMap() -> getTMXTiledMap
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties -> org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties:
    long serialVersionUID -> serialVersionUID
    boolean containsTMXProperty(java.lang.String,java.lang.String) -> containsTMXProperty
org.anddev.andengine.entity.layer.tiled.tmx.TMXProperty -> org.anddev.andengine.entity.layer.tiled.tmx.TMXProperty:
    java.lang.String mName -> mName
    java.lang.String mValue -> mValue
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
org.anddev.andengine.entity.layer.tiled.tmx.TMXTile -> org.anddev.andengine.entity.layer.tiled.tmx.TMXTile:
    int mGlobalTileID -> mGlobalTileID
    int mTileRow -> mTileRow
    int mTileColumn -> mTileColumn
    int mTileWidth -> mTileWidth
    int mTileHeight -> mTileHeight
    org.anddev.andengine.opengl.texture.region.TextureRegion mTextureRegion -> mTextureRegion
    int getGlobalTileID() -> getGlobalTileID
    int getTileRow() -> getTileRow
    int getTileColumn() -> getTileColumn
    int getTileX() -> getTileX
    int getTileY() -> getTileY
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
    org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegion() -> getTextureRegion
    void setGlobalTileID(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap,int) -> setGlobalTileID
    void setTextureRegion(org.anddev.andengine.opengl.texture.region.TextureRegion) -> setTextureRegion
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTileProperties(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap) -> getTMXTileProperties
org.anddev.andengine.entity.layer.tiled.tmx.TMXTileProperty -> org.anddev.andengine.entity.layer.tiled.tmx.TMXTileProperty:
org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet -> org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet:
    int mFirstGlobalTileID -> mFirstGlobalTileID
    java.lang.String mName -> mName
    int mTileWidth -> mTileWidth
    int mTileHeight -> mTileHeight
    java.lang.String mImageSource -> mImageSource
    org.anddev.andengine.opengl.texture.Texture mTexture -> mTexture
    org.anddev.andengine.opengl.texture.TextureOptions mTextureOptions -> mTextureOptions
    int mTilesHorizontal -> mTilesHorizontal
    int mTilesVertical -> mTilesVertical
    int mSpacing -> mSpacing
    int mMargin -> mMargin
    android.util.SparseArray mTMXTileProperties -> mTMXTileProperties
    int getFirstGlobalTileID() -> getFirstGlobalTileID
    java.lang.String getName() -> getName
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
    org.anddev.andengine.opengl.texture.Texture getTexture() -> getTexture
    void setImageSource(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager,org.xml.sax.Attributes) -> setImageSource
    java.lang.String getImageSource() -> getImageSource
    android.util.SparseArray getTMXTileProperties() -> getTMXTileProperties
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTilePropertiesFromGlobalTileID(int) -> getTMXTilePropertiesFromGlobalTileID
    void addTMXTileProperty(int,org.anddev.andengine.entity.layer.tiled.tmx.TMXTileProperty) -> addTMXTileProperty
    org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegionFromGlobalTileID(int) -> getTextureRegionFromGlobalTileID
    int determineCount(int,int,int,int) -> determineCount
org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap -> org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap:
    java.lang.String mOrientation -> mOrientation
    int mTileColumns -> mTileColumns
    int mTilesRows -> mTilesRows
    int mTileWidth -> mTileWidth
    int mTileHeight -> mTileHeight
    java.util.ArrayList mTMXTileSets -> mTMXTileSets
    java.util.ArrayList mTMXLayers -> mTMXLayers
    java.util.ArrayList mTMXObjectGroups -> mTMXObjectGroups
    org.anddev.andengine.opengl.vertex.RectangleVertexBuffer mSharedVertexBuffer -> mSharedVertexBuffer
    android.util.SparseArray mGlobalTileIDToTextureRegionCache -> mGlobalTileIDToTextureRegionCache
    android.util.SparseArray mGlobalTileIDToTMXTilePropertiesCache -> mGlobalTileIDToTMXTilePropertiesCache
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties mTMXTiledMapProperties -> mTMXTiledMapProperties
    java.lang.String getOrientation() -> getOrientation
    int getWidth() -> getWidth
    int getTileColumns() -> getTileColumns
    int getHeight() -> getHeight
    int getTileRows() -> getTileRows
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
    org.anddev.andengine.opengl.vertex.RectangleVertexBuffer getSharedVertexBuffer() -> getSharedVertexBuffer
    void addTMXTileSet(org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet) -> addTMXTileSet
    java.util.ArrayList getTMXTileSets() -> getTMXTileSets
    void addTMXLayer(org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer) -> addTMXLayer
    java.util.ArrayList getTMXLayers() -> getTMXLayers
    void addTMXObjectGroup(org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup) -> addTMXObjectGroup
    java.util.ArrayList getTMXObjectGroups() -> getTMXObjectGroups
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTilePropertiesByGlobalTileID(int) -> getTMXTilePropertiesByGlobalTileID
    void addTMXTiledMapProperty(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMapProperty) -> addTMXTiledMapProperty
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTiledMapProperties() -> getTMXTiledMapProperties
    void finalize() -> finalize
    org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTileProperties(int) -> getTMXTileProperties
    org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegionFromGlobalTileID(int) -> getTextureRegionFromGlobalTileID
org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMapProperty -> org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMapProperty:
org.anddev.andengine.entity.layer.tiled.tmx.TSXLoader -> org.anddev.andengine.entity.layer.tiled.tmx.TSXLoader:
    android.content.Context mContext -> mContext
    org.anddev.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.anddev.andengine.opengl.texture.TextureOptions mTextureOptions -> mTextureOptions
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet loadFromAsset(android.content.Context,int,java.lang.String) -> loadFromAsset
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet load(int,java.io.InputStream) -> load
org.anddev.andengine.entity.layer.tiled.tmx.TSXParser -> org.anddev.andengine.entity.layer.tiled.tmx.TSXParser:
    android.content.Context mContext -> mContext
    org.anddev.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.anddev.andengine.opengl.texture.TextureOptions mTextureOptions -> mTextureOptions
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet mTMXTileSet -> mTMXTileSet
    int mLastTileSetTileID -> mLastTileSetTileID
    boolean mInTileset -> mInTileset
    boolean mInImage -> mInImage
    boolean mInTile -> mInTile
    boolean mInProperties -> mInProperties
    boolean mInProperty -> mInProperty
    int mFirstGlobalTileID -> mFirstGlobalTileID
    org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet getTMXTileSet() -> getTMXTileSet
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.anddev.andengine.entity.layer.tiled.tmx.util.constants.TMXConstants -> org.anddev.andengine.entity.layer.tiled.tmx.util.constants.TMXConstants:
    int BYTES_PER_GLOBALTILEID -> BYTES_PER_GLOBALTILEID
    java.lang.String TAG_MAP -> TAG_MAP
    java.lang.String TAG_MAP_ATTRIBUTE_ORIENTATION -> TAG_MAP_ATTRIBUTE_ORIENTATION
    java.lang.String TAG_MAP_ATTRIBUTE_ORIENTATION_VALUE_ORTHOGONAL -> TAG_MAP_ATTRIBUTE_ORIENTATION_VALUE_ORTHOGONAL
    java.lang.String TAG_MAP_ATTRIBUTE_ORIENTATION_VALUE_ISOMETRIC -> TAG_MAP_ATTRIBUTE_ORIENTATION_VALUE_ISOMETRIC
    java.lang.String TAG_MAP_ATTRIBUTE_WIDTH -> TAG_MAP_ATTRIBUTE_WIDTH
    java.lang.String TAG_MAP_ATTRIBUTE_HEIGHT -> TAG_MAP_ATTRIBUTE_HEIGHT
    java.lang.String TAG_MAP_ATTRIBUTE_TILEWIDTH -> TAG_MAP_ATTRIBUTE_TILEWIDTH
    java.lang.String TAG_MAP_ATTRIBUTE_TILEHEIGHT -> TAG_MAP_ATTRIBUTE_TILEHEIGHT
    java.lang.String TAG_TILESET -> TAG_TILESET
    java.lang.String TAG_TILESET_ATTRIBUTE_FIRSTGID -> TAG_TILESET_ATTRIBUTE_FIRSTGID
    java.lang.String TAG_TILESET_ATTRIBUTE_SOURCE -> TAG_TILESET_ATTRIBUTE_SOURCE
    java.lang.String TAG_TILESET_ATTRIBUTE_NAME -> TAG_TILESET_ATTRIBUTE_NAME
    java.lang.String TAG_TILESET_ATTRIBUTE_TILEWIDTH -> TAG_TILESET_ATTRIBUTE_TILEWIDTH
    java.lang.String TAG_TILESET_ATTRIBUTE_TILEHEIGHT -> TAG_TILESET_ATTRIBUTE_TILEHEIGHT
    java.lang.String TAG_TILESET_ATTRIBUTE_SPACING -> TAG_TILESET_ATTRIBUTE_SPACING
    java.lang.String TAG_TILESET_ATTRIBUTE_MARGIN -> TAG_TILESET_ATTRIBUTE_MARGIN
    java.lang.String TAG_IMAGE -> TAG_IMAGE
    java.lang.String TAG_IMAGE_ATTRIBUTE_SOURCE -> TAG_IMAGE_ATTRIBUTE_SOURCE
    java.lang.String TAG_IMAGE_ATTRIBUTE_TRANS -> TAG_IMAGE_ATTRIBUTE_TRANS
    java.lang.String TAG_TILE -> TAG_TILE
    java.lang.String TAG_TILE_ATTRIBUTE_ID -> TAG_TILE_ATTRIBUTE_ID
    java.lang.String TAG_TILE_ATTRIBUTE_GID -> TAG_TILE_ATTRIBUTE_GID
    java.lang.String TAG_PROPERTIES -> TAG_PROPERTIES
    java.lang.String TAG_PROPERTY -> TAG_PROPERTY
    java.lang.String TAG_PROPERTY_ATTRIBUTE_NAME -> TAG_PROPERTY_ATTRIBUTE_NAME
    java.lang.String TAG_PROPERTY_ATTRIBUTE_VALUE -> TAG_PROPERTY_ATTRIBUTE_VALUE
    java.lang.String TAG_LAYER -> TAG_LAYER
    java.lang.String TAG_LAYER_ATTRIBUTE_NAME -> TAG_LAYER_ATTRIBUTE_NAME
    java.lang.String TAG_LAYER_ATTRIBUTE_WIDTH -> TAG_LAYER_ATTRIBUTE_WIDTH
    java.lang.String TAG_LAYER_ATTRIBUTE_HEIGHT -> TAG_LAYER_ATTRIBUTE_HEIGHT
    java.lang.String TAG_LAYER_ATTRIBUTE_VISIBLE -> TAG_LAYER_ATTRIBUTE_VISIBLE
    int TAG_LAYER_ATTRIBUTE_VISIBLE_VALUE_DEFAULT -> TAG_LAYER_ATTRIBUTE_VISIBLE_VALUE_DEFAULT
    java.lang.String TAG_LAYER_ATTRIBUTE_OPACITY -> TAG_LAYER_ATTRIBUTE_OPACITY
    float TAG_LAYER_ATTRIBUTE_OPACITY_VALUE_DEFAULT -> TAG_LAYER_ATTRIBUTE_OPACITY_VALUE_DEFAULT
    java.lang.String TAG_DATA -> TAG_DATA
    java.lang.String TAG_DATA_ATTRIBUTE_ENCODING -> TAG_DATA_ATTRIBUTE_ENCODING
    java.lang.String TAG_DATA_ATTRIBUTE_ENCODING_VALUE_BASE64 -> TAG_DATA_ATTRIBUTE_ENCODING_VALUE_BASE64
    java.lang.String TAG_DATA_ATTRIBUTE_COMPRESSION -> TAG_DATA_ATTRIBUTE_COMPRESSION
    java.lang.String TAG_DATA_ATTRIBUTE_COMPRESSION_VALUE_GZIP -> TAG_DATA_ATTRIBUTE_COMPRESSION_VALUE_GZIP
    java.lang.String TAG_DATA_ATTRIBUTE_COMPRESSION_VALUE_ZLIB -> TAG_DATA_ATTRIBUTE_COMPRESSION_VALUE_ZLIB
    java.lang.String TAG_OBJECTGROUP -> TAG_OBJECTGROUP
    java.lang.String TAG_OBJECTGROUP_ATTRIBUTE_NAME -> TAG_OBJECTGROUP_ATTRIBUTE_NAME
    java.lang.String TAG_OBJECTGROUP_ATTRIBUTE_WIDTH -> TAG_OBJECTGROUP_ATTRIBUTE_WIDTH
    java.lang.String TAG_OBJECTGROUP_ATTRIBUTE_HEIGHT -> TAG_OBJECTGROUP_ATTRIBUTE_HEIGHT
    java.lang.String TAG_OBJECT -> TAG_OBJECT
    java.lang.String TAG_OBJECT_ATTRIBUTE_NAME -> TAG_OBJECT_ATTRIBUTE_NAME
    java.lang.String TAG_OBJECT_ATTRIBUTE_TYPE -> TAG_OBJECT_ATTRIBUTE_TYPE
    java.lang.String TAG_OBJECT_ATTRIBUTE_X -> TAG_OBJECT_ATTRIBUTE_X
    java.lang.String TAG_OBJECT_ATTRIBUTE_Y -> TAG_OBJECT_ATTRIBUTE_Y
    java.lang.String TAG_OBJECT_ATTRIBUTE_WIDTH -> TAG_OBJECT_ATTRIBUTE_WIDTH
    java.lang.String TAG_OBJECT_ATTRIBUTE_HEIGHT -> TAG_OBJECT_ATTRIBUTE_HEIGHT
org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXException -> org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXLoadException -> org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXLoadException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXParseException -> org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXParseException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXLoadException -> org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXLoadException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXParseException -> org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXParseException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.entity.modifier.AlphaModifier -> org.anddev.andengine.entity.modifier.AlphaModifier:
    org.anddev.andengine.entity.modifier.AlphaModifier clone() -> clone
    void onSetInitialValue(org.anddev.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.anddev.andengine.entity.IEntity,float,float) -> onSetValue
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
org.anddev.andengine.entity.modifier.ColorModifier -> org.anddev.andengine.entity.modifier.ColorModifier:
    org.anddev.andengine.entity.modifier.ColorModifier clone() -> clone
    void onSetInitialValues(org.anddev.andengine.entity.IEntity,float,float,float) -> onSetInitialValues
    void onSetValues(org.anddev.andengine.entity.IEntity,float,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float,float) -> onSetValues
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onSetInitialValues(java.lang.Object,float,float,float) -> onSetInitialValues
org.anddev.andengine.entity.modifier.DelayModifier -> org.anddev.andengine.entity.modifier.DelayModifier:
    org.anddev.andengine.entity.modifier.DelayModifier clone() -> clone
    void onManagedInitialize(org.anddev.andengine.entity.IEntity) -> onManagedInitialize
    void onManagedUpdate(float,org.anddev.andengine.entity.IEntity) -> onManagedUpdate
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
org.anddev.andengine.entity.modifier.DoubleValueSpanEntityModifier -> org.anddev.andengine.entity.modifier.DoubleValueSpanEntityModifier:
org.anddev.andengine.entity.modifier.DurationEntityModifier -> org.anddev.andengine.entity.modifier.DurationEntityModifier:
org.anddev.andengine.entity.modifier.EntityModifier -> org.anddev.andengine.entity.modifier.EntityModifier:
org.anddev.andengine.entity.modifier.EntityModifierList -> org.anddev.andengine.entity.modifier.EntityModifierList:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.entity.modifier.FadeInModifier -> org.anddev.andengine.entity.modifier.FadeInModifier:
    org.anddev.andengine.entity.modifier.FadeInModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.entity.modifier.AlphaModifier clone() -> clone
org.anddev.andengine.entity.modifier.FadeOutModifier -> org.anddev.andengine.entity.modifier.FadeOutModifier:
    org.anddev.andengine.entity.modifier.FadeOutModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.entity.modifier.AlphaModifier clone() -> clone
org.anddev.andengine.entity.modifier.IEntityModifier -> org.anddev.andengine.entity.modifier.IEntityModifier:
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener -> org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener:
org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher -> org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher:
org.anddev.andengine.entity.modifier.LoopEntityModifier -> org.anddev.andengine.entity.modifier.LoopEntityModifier:
    org.anddev.andengine.entity.modifier.LoopEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.LoopModifier clone() -> clone
org.anddev.andengine.entity.modifier.LoopEntityModifier$ILoopEntityModifierListener -> org.anddev.andengine.entity.modifier.LoopEntityModifier$ILoopEntityModifierListener:
org.anddev.andengine.entity.modifier.MoveModifier -> org.anddev.andengine.entity.modifier.MoveModifier:
    org.anddev.andengine.entity.modifier.MoveModifier clone() -> clone
    void onSetInitialValues(org.anddev.andengine.entity.IEntity,float,float) -> onSetInitialValues
    void onSetValues(org.anddev.andengine.entity.IEntity,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
org.anddev.andengine.entity.modifier.MoveXModifier -> org.anddev.andengine.entity.modifier.MoveXModifier:
    org.anddev.andengine.entity.modifier.MoveXModifier clone() -> clone
    void onSetInitialValue(org.anddev.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.anddev.andengine.entity.IEntity,float,float) -> onSetValue
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
org.anddev.andengine.entity.modifier.MoveYModifier -> org.anddev.andengine.entity.modifier.MoveYModifier:
    org.anddev.andengine.entity.modifier.MoveYModifier clone() -> clone
    void onSetInitialValue(org.anddev.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.anddev.andengine.entity.IEntity,float,float) -> onSetValue
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
org.anddev.andengine.entity.modifier.ParallelEntityModifier -> org.anddev.andengine.entity.modifier.ParallelEntityModifier:
    org.anddev.andengine.entity.modifier.ParallelEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.ParallelModifier clone() -> clone
org.anddev.andengine.entity.modifier.PathModifier -> org.anddev.andengine.entity.modifier.PathModifier:
    org.anddev.andengine.util.modifier.SequenceModifier mSequenceModifier -> mSequenceModifier
    org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener mPathModifierListener -> mPathModifierListener
    org.anddev.andengine.entity.modifier.PathModifier$Path mPath -> mPath
    org.anddev.andengine.entity.modifier.PathModifier clone() -> clone
    org.anddev.andengine.entity.modifier.PathModifier$Path getPath() -> getPath
    boolean isFinished() -> isFinished
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener getPathModifierListener() -> getPathModifierListener
    void setPathModifierListener(org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener) -> setPathModifierListener
    void reset() -> reset
    float onUpdate(float,org.anddev.andengine.entity.IEntity) -> onUpdate
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    float onUpdate(float,java.lang.Object) -> onUpdate
    org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener access$3(org.anddev.andengine.entity.modifier.PathModifier) -> access$3
    org.anddev.andengine.util.modifier.IModifier$IModifierListener access$4(org.anddev.andengine.entity.modifier.PathModifier) -> access$4
org.anddev.andengine.entity.modifier.PathModifier$1 -> org.anddev.andengine.entity.modifier.a:
    org.anddev.andengine.entity.modifier.PathModifier this$0 -> a
    void onSubSequenceFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object,int) -> onSubSequenceFinished
    void onSubSequenceStarted(org.anddev.andengine.util.modifier.IModifier,java.lang.Object,int) -> onSubSequenceStarted
org.anddev.andengine.entity.modifier.PathModifier$2 -> org.anddev.andengine.entity.modifier.b:
    org.anddev.andengine.entity.modifier.PathModifier this$0 -> a
    void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
    void onModifierStarted(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener -> org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener:
    void onPathStarted(org.anddev.andengine.entity.modifier.PathModifier,org.anddev.andengine.entity.IEntity) -> onPathStarted
    void onPathWaypointStarted(org.anddev.andengine.entity.modifier.PathModifier,org.anddev.andengine.entity.IEntity,int) -> onPathWaypointStarted
    void onPathWaypointFinished(org.anddev.andengine.entity.modifier.PathModifier,org.anddev.andengine.entity.IEntity,int) -> onPathWaypointFinished
    void onPathFinished(org.anddev.andengine.entity.modifier.PathModifier,org.anddev.andengine.entity.IEntity) -> onPathFinished
org.anddev.andengine.entity.modifier.PathModifier$Path -> org.anddev.andengine.entity.modifier.PathModifier$Path:
    float[] mCoordinatesX -> mCoordinatesX
    float[] mCoordinatesY -> mCoordinatesY
    int mIndex -> mIndex
    boolean mLengthChanged -> mLengthChanged
    float mLength -> mLength
    org.anddev.andengine.entity.modifier.PathModifier$Path clone() -> clone
    org.anddev.andengine.entity.modifier.PathModifier$Path to(float,float) -> to
    float[] getCoordinatesX() -> getCoordinatesX
    float[] getCoordinatesY() -> getCoordinatesY
    int getSize() -> getSize
    float getLength() -> getLength
    float getSegmentLength(int) -> getSegmentLength
    void updateLength() -> updateLength
    java.lang.Object clone() -> clone
org.anddev.andengine.entity.modifier.RotationAtModifier -> org.anddev.andengine.entity.modifier.RotationAtModifier:
    float mRotationCenterX -> mRotationCenterX
    float mRotationCenterY -> mRotationCenterY
    org.anddev.andengine.entity.modifier.RotationAtModifier clone() -> clone
    void onManagedInitialize(org.anddev.andengine.entity.IEntity) -> onManagedInitialize
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.entity.modifier.RotationModifier clone() -> clone
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
org.anddev.andengine.entity.modifier.RotationByModifier -> org.anddev.andengine.entity.modifier.RotationByModifier:
    org.anddev.andengine.entity.modifier.RotationByModifier clone() -> clone
    void onChangeValue(org.anddev.andengine.entity.IEntity,float) -> onChangeValue
    void onChangeValue(java.lang.Object,float) -> onChangeValue
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
org.anddev.andengine.entity.modifier.RotationModifier -> org.anddev.andengine.entity.modifier.RotationModifier:
    org.anddev.andengine.entity.modifier.RotationModifier clone() -> clone
    void onSetInitialValue(org.anddev.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.anddev.andengine.entity.IEntity,float,float) -> onSetValue
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
org.anddev.andengine.entity.modifier.ScaleAtModifier -> org.anddev.andengine.entity.modifier.ScaleAtModifier:
    float mScaleCenterX -> mScaleCenterX
    float mScaleCenterY -> mScaleCenterY
    org.anddev.andengine.entity.modifier.ScaleAtModifier clone() -> clone
    void onManagedInitialize(org.anddev.andengine.entity.IEntity) -> onManagedInitialize
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.entity.modifier.ScaleModifier clone() -> clone
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
org.anddev.andengine.entity.modifier.ScaleModifier -> org.anddev.andengine.entity.modifier.ScaleModifier:
    org.anddev.andengine.entity.modifier.ScaleModifier clone() -> clone
    void onSetInitialValues(org.anddev.andengine.entity.IEntity,float,float) -> onSetInitialValues
    void onSetValues(org.anddev.andengine.entity.IEntity,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
org.anddev.andengine.entity.modifier.SequenceEntityModifier -> org.anddev.andengine.entity.modifier.SequenceEntityModifier:
    org.anddev.andengine.entity.modifier.SequenceEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.modifier.IEntityModifier clone() -> clone
    org.anddev.andengine.util.modifier.SequenceModifier clone() -> clone
org.anddev.andengine.entity.modifier.SequenceEntityModifier$ISubSequenceShapeModifierListener -> org.anddev.andengine.entity.modifier.SequenceEntityModifier$ISubSequenceShapeModifierListener:
org.anddev.andengine.entity.modifier.SingleValueChangeEntityModifier -> org.anddev.andengine.entity.modifier.SingleValueChangeEntityModifier:
org.anddev.andengine.entity.modifier.SingleValueSpanEntityModifier -> org.anddev.andengine.entity.modifier.SingleValueSpanEntityModifier:
org.anddev.andengine.entity.modifier.TripleValueSpanEntityModifier -> org.anddev.andengine.entity.modifier.TripleValueSpanEntityModifier:
org.anddev.andengine.entity.particle.Particle -> org.anddev.andengine.entity.particle.Particle:
    float mLifeTime -> mLifeTime
    float mDeathTime -> mDeathTime
    boolean mDead -> mDead
    org.anddev.andengine.engine.handler.physics.PhysicsHandler mPhysicsHandler -> mPhysicsHandler
    float getLifeTime() -> getLifeTime
    float getDeathTime() -> getDeathTime
    void setDeathTime(float) -> setDeathTime
    boolean isDead() -> isDead
    void setDead(boolean) -> setDead
    org.anddev.andengine.engine.handler.physics.PhysicsHandler getPhysicsHandler() -> getPhysicsHandler
    void onManagedUpdate(float) -> onManagedUpdate
    void reset() -> reset
org.anddev.andengine.entity.particle.ParticleSystem -> org.anddev.andengine.entity.particle.ParticleSystem:
    int BLENDFUNCTION_SOURCE_DEFAULT -> BLENDFUNCTION_SOURCE_DEFAULT
    int BLENDFUNCTION_DESTINATION_DEFAULT -> BLENDFUNCTION_DESTINATION_DEFAULT
    float[] POSITION_OFFSET -> POSITION_OFFSET
    org.anddev.andengine.entity.particle.emitter.IParticleEmitter mParticleEmitter -> mParticleEmitter
    org.anddev.andengine.entity.particle.Particle[] mParticles -> mParticles
    int mSourceBlendFunction -> mSourceBlendFunction
    int mDestinationBlendFunction -> mDestinationBlendFunction
    java.util.ArrayList mParticleInitializers -> mParticleInitializers
    java.util.ArrayList mParticleModifiers -> mParticleModifiers
    float mRateMinimum -> mRateMinimum
    float mRateMaximum -> mRateMaximum
    org.anddev.andengine.opengl.texture.region.TextureRegion mTextureRegion -> mTextureRegion
    boolean mParticlesSpawnEnabled -> mParticlesSpawnEnabled
    int mParticlesMaximum -> mParticlesMaximum
    int mParticlesAlive -> mParticlesAlive
    float mParticlesDueToSpawn -> mParticlesDueToSpawn
    int mParticleModifierCount -> mParticleModifierCount
    int mParticleInitializerCount -> mParticleInitializerCount
    org.anddev.andengine.opengl.vertex.RectangleVertexBuffer mSharedParticleVertexBuffer -> mSharedParticleVertexBuffer
    boolean isParticlesSpawnEnabled() -> isParticlesSpawnEnabled
    void setParticlesSpawnEnabled(boolean) -> setParticlesSpawnEnabled
    void setBlendFunction(int,int) -> setBlendFunction
    org.anddev.andengine.entity.particle.emitter.IParticleEmitter getParticleEmitter() -> getParticleEmitter
    void reset() -> reset
    void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
    void addParticleModifier(org.anddev.andengine.entity.particle.modifier.IParticleModifier) -> addParticleModifier
    void removeParticleModifier(org.anddev.andengine.entity.particle.modifier.IParticleModifier) -> removeParticleModifier
    void addParticleInitializer(org.anddev.andengine.entity.particle.initializer.IParticleInitializer) -> addParticleInitializer
    void removeParticleInitializer(org.anddev.andengine.entity.particle.initializer.IParticleInitializer) -> removeParticleInitializer
    void spawnParticles(float) -> spawnParticles
    void spawnParticle() -> spawnParticle
    float determineCurrentRate() -> determineCurrentRate
org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter -> org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter:
    float mRadiusX -> mRadiusX
    float mRadiusY -> mRadiusY
    float getRadiusX() -> getRadiusX
    void setRadiusX(float) -> setRadiusX
    float getRadiusY() -> getRadiusY
    void setRadiusY(float) -> setRadiusY
    void setRadius(float) -> setRadius
    void setRadius(float,float) -> setRadius
org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter -> org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter:
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    void setCenterX(float) -> setCenterX
    void setCenterY(float) -> setCenterY
    void setCenter(float,float) -> setCenter
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.entity.particle.emitter.BaseRectangleParticleEmitter -> org.anddev.andengine.entity.particle.emitter.BaseRectangleParticleEmitter:
    float mWidth -> mWidth
    float mHeight -> mHeight
    float mWidthHalf -> mWidthHalf
    float mHeightHalf -> mHeightHalf
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
org.anddev.andengine.entity.particle.emitter.CircleOutlineParticleEmitter -> org.anddev.andengine.entity.particle.emitter.CircleOutlineParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.anddev.andengine.entity.particle.emitter.CircleParticleEmitter -> org.anddev.andengine.entity.particle.emitter.CircleParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.anddev.andengine.entity.particle.emitter.IParticleEmitter -> org.anddev.andengine.entity.particle.emitter.IParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.anddev.andengine.entity.particle.emitter.PointParticleEmitter -> org.anddev.andengine.entity.particle.emitter.PointParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.anddev.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter -> org.anddev.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.anddev.andengine.entity.particle.emitter.RectangleParticleEmitter -> org.anddev.andengine.entity.particle.emitter.RectangleParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.anddev.andengine.entity.particle.initializer.AccelerationInitializer -> org.anddev.andengine.entity.particle.initializer.AccelerationInitializer:
    float getMinAccelerationX() -> getMinAccelerationX
    float getMaxAccelerationX() -> getMaxAccelerationX
    float getMinAccelerationY() -> getMinAccelerationY
    float getMaxAccelerationY() -> getMaxAccelerationY
    void setAccelerationX(float) -> setAccelerationX
    void setAccelerationY(float) -> setAccelerationY
    void setAccelerationX(float,float) -> setAccelerationX
    void setAccelerationY(float,float) -> setAccelerationY
    void setAcceleration(float,float,float,float) -> setAcceleration
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float) -> onInitializeParticle
org.anddev.andengine.entity.particle.initializer.AlphaInitializer -> org.anddev.andengine.entity.particle.initializer.AlphaInitializer:
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float) -> onInitializeParticle
org.anddev.andengine.entity.particle.initializer.BaseDoubleValueInitializer -> org.anddev.andengine.entity.particle.initializer.BaseDoubleValueInitializer:
    float mMinValueB -> mMinValueB
    float mMaxValueB -> mMaxValueB
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float) -> onInitializeParticle
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float) -> onInitializeParticle
    float getRandomValueB() -> getRandomValueB
org.anddev.andengine.entity.particle.initializer.BaseSingleValueInitializer -> org.anddev.andengine.entity.particle.initializer.BaseSingleValueInitializer:
    float mMinValue -> mMinValue
    float mMaxValue -> mMaxValue
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float) -> onInitializeParticle
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle) -> onInitializeParticle
    float getRandomValue() -> getRandomValue
org.anddev.andengine.entity.particle.initializer.BaseTripleValueInitializer -> org.anddev.andengine.entity.particle.initializer.BaseTripleValueInitializer:
    float mMinValueC -> mMinValueC
    float mMaxValueC -> mMaxValueC
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float,float) -> onInitializeParticle
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float) -> onInitializeParticle
    float getRandomValueC() -> getRandomValueC
org.anddev.andengine.entity.particle.initializer.ColorInitializer -> org.anddev.andengine.entity.particle.initializer.ColorInitializer:
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float,float) -> onInitializeParticle
org.anddev.andengine.entity.particle.initializer.GravityInitializer -> org.anddev.andengine.entity.particle.initializer.GravityInitializer:
org.anddev.andengine.entity.particle.initializer.IParticleInitializer -> org.anddev.andengine.entity.particle.initializer.IParticleInitializer:
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle) -> onInitializeParticle
org.anddev.andengine.entity.particle.initializer.RotationInitializer -> org.anddev.andengine.entity.particle.initializer.RotationInitializer:
    float getMinRotation() -> getMinRotation
    float getMaxRotation() -> getMaxRotation
    void setRotation(float) -> setRotation
    void setRotation(float,float) -> setRotation
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float) -> onInitializeParticle
org.anddev.andengine.entity.particle.initializer.VelocityInitializer -> org.anddev.andengine.entity.particle.initializer.VelocityInitializer:
    float getMinVelocityX() -> getMinVelocityX
    float getMaxVelocityX() -> getMaxVelocityX
    float getMinVelocityY() -> getMinVelocityY
    float getMaxVelocityY() -> getMaxVelocityY
    void setVelocityX(float) -> setVelocityX
    void setVelocityY(float) -> setVelocityY
    void setVelocityX(float,float) -> setVelocityX
    void setVelocityY(float,float) -> setVelocityY
    void setVelocity(float,float,float,float) -> setVelocity
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float) -> onInitializeParticle
org.anddev.andengine.entity.particle.modifier.AlphaModifier -> org.anddev.andengine.entity.particle.modifier.AlphaModifier:
    void onSetInitialValue(org.anddev.andengine.entity.particle.Particle,float) -> onSetInitialValue
    void onSetValue(org.anddev.andengine.entity.particle.Particle,float) -> onSetValue
org.anddev.andengine.entity.particle.modifier.BaseDoubleValueSpanModifier -> org.anddev.andengine.entity.particle.modifier.BaseDoubleValueSpanModifier:
    float mFromValueB -> mFromValueB
    float mToValueB -> mToValueB
    float mSpanValueB -> mSpanValueB
    void onSetValue(org.anddev.andengine.entity.particle.Particle,float) -> onSetValue
    void onSetInitialValues(org.anddev.andengine.entity.particle.Particle,float,float) -> onSetInitialValues
    void onSetValues(org.anddev.andengine.entity.particle.Particle,float,float) -> onSetValues
    void onSetInitialValue(org.anddev.andengine.entity.particle.Particle,float) -> onSetInitialValue
    void onSetValueInternal(org.anddev.andengine.entity.particle.Particle,float) -> onSetValueInternal
    float calculateValueB(float) -> calculateValueB
org.anddev.andengine.entity.particle.modifier.BaseSingleValueSpanModifier -> org.anddev.andengine.entity.particle.modifier.BaseSingleValueSpanModifier:
    float mFromValue -> mFromValue
    float mToValue -> mToValue
    float mFromTime -> mFromTime
    float mToTime -> mToTime
    float mDuration -> mDuration
    float mSpanValue -> mSpanValue
    void onSetInitialValue(org.anddev.andengine.entity.particle.Particle,float) -> onSetInitialValue
    void onSetValue(org.anddev.andengine.entity.particle.Particle,float) -> onSetValue
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle) -> onInitializeParticle
    void onUpdateParticle(org.anddev.andengine.entity.particle.Particle) -> onUpdateParticle
    void onSetValueInternal(org.anddev.andengine.entity.particle.Particle,float) -> onSetValueInternal
    float calculateValue(float) -> calculateValue
org.anddev.andengine.entity.particle.modifier.BaseTripleValueSpanModifier -> org.anddev.andengine.entity.particle.modifier.BaseTripleValueSpanModifier:
    float mFromValueC -> mFromValueC
    float mToValueC -> mToValueC
    float mSpanValueC -> mSpanValueC
    void onSetInitialValues(org.anddev.andengine.entity.particle.Particle,float,float,float) -> onSetInitialValues
    void onSetValues(org.anddev.andengine.entity.particle.Particle,float,float,float) -> onSetValues
    void onSetValues(org.anddev.andengine.entity.particle.Particle,float,float) -> onSetValues
    void onSetInitialValues(org.anddev.andengine.entity.particle.Particle,float,float) -> onSetInitialValues
    void onSetValueInternal(org.anddev.andengine.entity.particle.Particle,float) -> onSetValueInternal
    float calculateValueC(float) -> calculateValueC
org.anddev.andengine.entity.particle.modifier.ColorModifier -> org.anddev.andengine.entity.particle.modifier.ColorModifier:
    void onSetInitialValues(org.anddev.andengine.entity.particle.Particle,float,float,float) -> onSetInitialValues
    void onSetValues(org.anddev.andengine.entity.particle.Particle,float,float,float) -> onSetValues
org.anddev.andengine.entity.particle.modifier.ExpireModifier -> org.anddev.andengine.entity.particle.modifier.ExpireModifier:
    float mMinLifeTime -> mMinLifeTime
    float mMaxLifeTime -> mMaxLifeTime
    float getMinLifeTime() -> getMinLifeTime
    float getMaxLifeTime() -> getMaxLifeTime
    void setLifeTime(float) -> setLifeTime
    void setLifeTime(float,float) -> setLifeTime
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle) -> onInitializeParticle
    void onUpdateParticle(org.anddev.andengine.entity.particle.Particle) -> onUpdateParticle
org.anddev.andengine.entity.particle.modifier.IParticleModifier -> org.anddev.andengine.entity.particle.modifier.IParticleModifier:
    void onUpdateParticle(org.anddev.andengine.entity.particle.Particle) -> onUpdateParticle
org.anddev.andengine.entity.particle.modifier.OffCameraExpireModifier -> org.anddev.andengine.entity.particle.modifier.OffCameraExpireModifier:
    org.anddev.andengine.engine.camera.Camera mCamera -> mCamera
    org.anddev.andengine.engine.camera.Camera getCamera() -> getCamera
    void onInitializeParticle(org.anddev.andengine.entity.particle.Particle) -> onInitializeParticle
    void onUpdateParticle(org.anddev.andengine.entity.particle.Particle) -> onUpdateParticle
org.anddev.andengine.entity.particle.modifier.RotationModifier -> org.anddev.andengine.entity.particle.modifier.RotationModifier:
    void onSetInitialValue(org.anddev.andengine.entity.particle.Particle,float) -> onSetInitialValue
    void onSetValue(org.anddev.andengine.entity.particle.Particle,float) -> onSetValue
org.anddev.andengine.entity.particle.modifier.ScaleModifier -> org.anddev.andengine.entity.particle.modifier.ScaleModifier:
    void onSetInitialValues(org.anddev.andengine.entity.particle.Particle,float,float) -> onSetInitialValues
    void onSetValues(org.anddev.andengine.entity.particle.Particle,float,float) -> onSetValues
org.anddev.andengine.entity.primitive.BaseRectangle -> org.anddev.andengine.entity.primitive.BaseRectangle:
    org.anddev.andengine.opengl.vertex.RectangleVertexBuffer getVertexBuffer() -> getVertexBuffer
    void onUpdateVertexBuffer() -> onUpdateVertexBuffer
    org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer() -> getVertexBuffer
org.anddev.andengine.entity.primitive.Line -> org.anddev.andengine.entity.primitive.Line:
    float LINEWIDTH_DEFAULT -> LINEWIDTH_DEFAULT
    float mX2 -> mX2
    float mY2 -> mY2
    float mLineWidth -> mLineWidth
    org.anddev.andengine.opengl.vertex.LineVertexBuffer mLineVertexBuffer -> mLineVertexBuffer
    float getX() -> getX
    float getY() -> getY
    float getX1() -> getX1
    float getY1() -> getY1
    float getX2() -> getX2
    float getY2() -> getY2
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    float getBaseHeight() -> getBaseHeight
    float getBaseWidth() -> getBaseWidth
    float getHeight() -> getHeight
    float getWidth() -> getWidth
    void setPosition(float,float) -> setPosition
    void setPosition(float,float,float,float) -> setPosition
    boolean isCulled(org.anddev.andengine.engine.camera.Camera) -> isCulled
    void onInitDraw(javax.microedition.khronos.opengles.GL10) -> onInitDraw
    org.anddev.andengine.opengl.vertex.LineVertexBuffer getVertexBuffer() -> getVertexBuffer
    void onUpdateVertexBuffer() -> onUpdateVertexBuffer
    void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> drawVertices
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    boolean contains(float,float) -> contains
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    boolean collidesWith(org.anddev.andengine.entity.shape.IShape) -> collidesWith
    org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer() -> getVertexBuffer
org.anddev.andengine.entity.primitive.Rectangle -> org.anddev.andengine.entity.primitive.Rectangle:
    void onInitDraw(javax.microedition.khronos.opengles.GL10) -> onInitDraw
org.anddev.andengine.entity.scene.CameraScene -> org.anddev.andengine.entity.scene.CameraScene:
    org.anddev.andengine.engine.camera.Camera mCamera -> mCamera
    org.anddev.andengine.engine.camera.Camera getCamera() -> getCamera
    void setCamera(org.anddev.andengine.engine.camera.Camera) -> setCamera
    boolean onSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    boolean onChildSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onChildSceneTouchEvent
    void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onManagedDraw
    void centerShapeInCamera(org.anddev.andengine.entity.shape.Shape) -> centerShapeInCamera
    void centerShapeInCameraHorizontally(org.anddev.andengine.entity.shape.Shape) -> centerShapeInCameraHorizontally
    void centerShapeInCameraVertically(org.anddev.andengine.entity.shape.Shape) -> centerShapeInCameraVertically
org.anddev.andengine.entity.scene.Scene -> org.anddev.andengine.entity.scene.Scene:
    int TOUCHAREAS_CAPACITY_DEFAULT -> TOUCHAREAS_CAPACITY_DEFAULT
    float mSecondsElapsedTotal -> mSecondsElapsedTotal
    org.anddev.andengine.entity.scene.Scene mParentScene -> mParentScene
    org.anddev.andengine.entity.scene.Scene mChildScene -> mChildScene
    boolean mChildSceneModalDraw -> mChildSceneModalDraw
    boolean mChildSceneModalUpdate -> mChildSceneModalUpdate
    boolean mChildSceneModalTouch -> mChildSceneModalTouch
    org.anddev.andengine.util.SmartList mTouchAreas -> mTouchAreas
    org.anddev.andengine.engine.handler.runnable.RunnableHandler mRunnableHandler -> mRunnableHandler
    org.anddev.andengine.entity.scene.Scene$IOnSceneTouchListener mOnSceneTouchListener -> mOnSceneTouchListener
    org.anddev.andengine.entity.scene.Scene$IOnAreaTouchListener mOnAreaTouchListener -> mOnAreaTouchListener
    org.anddev.andengine.entity.scene.background.IBackground mBackground -> mBackground
    boolean mBackgroundEnabled -> mBackgroundEnabled
    boolean mOnAreaTouchTraversalBackToFront -> mOnAreaTouchTraversalBackToFront
    boolean mTouchAreaBindingEnabled -> mTouchAreaBindingEnabled
    android.util.SparseArray mTouchAreaBindings -> mTouchAreaBindings
    boolean mOnSceneTouchListenerBindingEnabled -> mOnSceneTouchListenerBindingEnabled
    android.util.SparseArray mOnSceneTouchListenerBindings -> mOnSceneTouchListenerBindings
    float getSecondsElapsedTotal() -> getSecondsElapsedTotal
    org.anddev.andengine.entity.scene.background.IBackground getBackground() -> getBackground
    void setBackground(org.anddev.andengine.entity.scene.background.IBackground) -> setBackground
    boolean isBackgroundEnabled() -> isBackgroundEnabled
    void setBackgroundEnabled(boolean) -> setBackgroundEnabled
    void setOnSceneTouchListener(org.anddev.andengine.entity.scene.Scene$IOnSceneTouchListener) -> setOnSceneTouchListener
    org.anddev.andengine.entity.scene.Scene$IOnSceneTouchListener getOnSceneTouchListener() -> getOnSceneTouchListener
    boolean hasOnSceneTouchListener() -> hasOnSceneTouchListener
    void setOnAreaTouchListener(org.anddev.andengine.entity.scene.Scene$IOnAreaTouchListener) -> setOnAreaTouchListener
    org.anddev.andengine.entity.scene.Scene$IOnAreaTouchListener getOnAreaTouchListener() -> getOnAreaTouchListener
    boolean hasOnAreaTouchListener() -> hasOnAreaTouchListener
    void setParentScene(org.anddev.andengine.entity.scene.Scene) -> setParentScene
    boolean hasChildScene() -> hasChildScene
    org.anddev.andengine.entity.scene.Scene getChildScene() -> getChildScene
    void setChildSceneModal(org.anddev.andengine.entity.scene.Scene) -> setChildSceneModal
    void setChildScene(org.anddev.andengine.entity.scene.Scene) -> setChildScene
    void setChildScene(org.anddev.andengine.entity.scene.Scene,boolean,boolean,boolean) -> setChildScene
    void clearChildScene() -> clearChildScene
    void setOnAreaTouchTraversalBackToFront() -> setOnAreaTouchTraversalBackToFront
    void setOnAreaTouchTraversalFrontToBack() -> setOnAreaTouchTraversalFrontToBack
    boolean isTouchAreaBindingEnabled() -> isTouchAreaBindingEnabled
    void setTouchAreaBindingEnabled(boolean) -> setTouchAreaBindingEnabled
    boolean isOnSceneTouchListenerBindingEnabled() -> isOnSceneTouchListenerBindingEnabled
    void setOnSceneTouchListenerBindingEnabled(boolean) -> setOnSceneTouchListenerBindingEnabled
    void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
    boolean onSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    java.lang.Boolean onAreaTouchEvent(org.anddev.andengine.input.touch.TouchEvent,float,float,org.anddev.andengine.entity.scene.Scene$ITouchArea) -> onAreaTouchEvent
    boolean onChildSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onChildSceneTouchEvent
    void reset() -> reset
    void setParent(org.anddev.andengine.entity.IEntity) -> setParent
    void postRunnable(java.lang.Runnable) -> postRunnable
    void registerTouchArea(org.anddev.andengine.entity.scene.Scene$ITouchArea) -> registerTouchArea
    boolean unregisterTouchArea(org.anddev.andengine.entity.scene.Scene$ITouchArea) -> unregisterTouchArea
    boolean unregisterTouchAreas(org.anddev.andengine.entity.scene.Scene$ITouchArea$ITouchAreaMatcher) -> unregisterTouchAreas
    void clearTouchAreas() -> clearTouchAreas
    java.util.ArrayList getTouchAreas() -> getTouchAreas
    void back() -> back
org.anddev.andengine.entity.scene.Scene$IOnAreaTouchListener -> org.anddev.andengine.entity.scene.Scene$IOnAreaTouchListener:
    boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,org.anddev.andengine.entity.scene.Scene$ITouchArea,float,float) -> onAreaTouched
org.anddev.andengine.entity.scene.Scene$IOnSceneTouchListener -> org.anddev.andengine.entity.scene.Scene$IOnSceneTouchListener:
    boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
org.anddev.andengine.entity.scene.Scene$ITouchArea -> org.anddev.andengine.entity.scene.Scene$ITouchArea:
    boolean contains(float,float) -> contains
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
org.anddev.andengine.entity.scene.Scene$ITouchArea$ITouchAreaMatcher -> org.anddev.andengine.entity.scene.Scene$ITouchArea$ITouchAreaMatcher:
org.anddev.andengine.entity.scene.SplashScene -> org.anddev.andengine.entity.scene.SplashScene:
org.anddev.andengine.entity.scene.background.AutoParallaxBackground -> org.anddev.andengine.entity.scene.background.AutoParallaxBackground:
    float mParallaxChangePerSecond -> mParallaxChangePerSecond
    void setParallaxChangePerSecond(float) -> setParallaxChangePerSecond
    void onUpdate(float) -> onUpdate
org.anddev.andengine.entity.scene.background.BaseBackground -> org.anddev.andengine.entity.scene.background.BaseBackground:
    org.anddev.andengine.util.modifier.ModifierList mBackgroundModifiers -> mBackgroundModifiers
    void addBackgroundModifier(org.anddev.andengine.util.modifier.IModifier) -> addBackgroundModifier
    boolean removeBackgroundModifier(org.anddev.andengine.util.modifier.IModifier) -> removeBackgroundModifier
    void clearBackgroundModifiers() -> clearBackgroundModifiers
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.entity.scene.background.ColorBackground -> org.anddev.andengine.entity.scene.background.ColorBackground:
    float mRed -> mRed
    float mGreen -> mGreen
    float mBlue -> mBlue
    float mAlpha -> mAlpha
    boolean mColorEnabled -> mColorEnabled
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(int,int,int) -> setColor
    void setColor(int,int,int,int) -> setColor
    void setColorEnabled(boolean) -> setColorEnabled
    boolean isColorEnabled() -> isColorEnabled
    void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onDraw
org.anddev.andengine.entity.scene.background.EntityBackground -> org.anddev.andengine.entity.scene.background.EntityBackground:
    org.anddev.andengine.entity.IEntity mEntity -> mEntity
    void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onDraw
org.anddev.andengine.entity.scene.background.IBackground -> org.anddev.andengine.entity.scene.background.IBackground:
    void addBackgroundModifier(org.anddev.andengine.util.modifier.IModifier) -> addBackgroundModifier
    boolean removeBackgroundModifier(org.anddev.andengine.util.modifier.IModifier) -> removeBackgroundModifier
    void clearBackgroundModifiers() -> clearBackgroundModifiers
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
org.anddev.andengine.entity.scene.background.ParallaxBackground -> org.anddev.andengine.entity.scene.background.ParallaxBackground:
    java.util.ArrayList mParallaxEntities -> mParallaxEntities
    int mParallaxEntityCount -> mParallaxEntityCount
    float mParallaxValue -> mParallaxValue
    void setParallaxValue(float) -> setParallaxValue
    void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onDraw
    void attachParallaxEntity(org.anddev.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity) -> attachParallaxEntity
    boolean detachParallaxEntity(org.anddev.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity) -> detachParallaxEntity
org.anddev.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity -> org.anddev.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity:
    float mParallaxFactor -> mParallaxFactor
    org.anddev.andengine.entity.shape.Shape mShape -> mShape
    void onDraw(javax.microedition.khronos.opengles.GL10,float,org.anddev.andengine.engine.camera.Camera) -> onDraw
org.anddev.andengine.entity.scene.background.RepeatingSpriteBackground -> org.anddev.andengine.entity.scene.background.RepeatingSpriteBackground:
    org.anddev.andengine.opengl.texture.Texture mTexture -> mTexture
    float mScale -> mScale
    org.anddev.andengine.opengl.texture.Texture getTexture() -> getTexture
    org.anddev.andengine.entity.sprite.Sprite loadSprite(float,float,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.source.ITextureSource) -> loadSprite
org.anddev.andengine.entity.scene.background.SpriteBackground -> org.anddev.andengine.entity.scene.background.SpriteBackground:
org.anddev.andengine.entity.scene.background.modifier.ColorModifier -> org.anddev.andengine.entity.scene.background.modifier.ColorModifier:
    org.anddev.andengine.entity.scene.background.modifier.ColorModifier clone() -> clone
    void onSetInitialValues(org.anddev.andengine.entity.scene.background.IBackground,float,float,float) -> onSetInitialValues
    void onSetValues(org.anddev.andengine.entity.scene.background.IBackground,float,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float,float) -> onSetValues
    org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void onSetInitialValues(java.lang.Object,float,float,float) -> onSetInitialValues
org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier -> org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier:
    org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier clone() -> clone
org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener -> org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener:
org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier -> org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier:
    org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier clone() -> clone
    org.anddev.andengine.util.modifier.LoopModifier clone() -> clone
org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier$ILoopBackgroundModifierListener -> org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier$ILoopBackgroundModifierListener:
org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier -> org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier:
    org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier clone() -> clone
    org.anddev.andengine.util.modifier.ParallelModifier clone() -> clone
org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier -> org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier:
    org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier clone() -> clone
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier clone() -> clone
    org.anddev.andengine.util.modifier.SequenceModifier clone() -> clone
org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier$ISubSequenceBackgroundModifierListener -> org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier$ISubSequenceBackgroundModifierListener:
org.anddev.andengine.entity.scene.menu.MenuScene -> org.anddev.andengine.entity.scene.menu.MenuScene:
    java.util.ArrayList mMenuItems -> mMenuItems
    org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    org.anddev.andengine.entity.scene.menu.animator.IMenuAnimator mMenuAnimator -> mMenuAnimator
    org.anddev.andengine.entity.scene.menu.item.IMenuItem mSelectedMenuItem -> mSelectedMenuItem
    org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener getOnMenuItemClickListener() -> getOnMenuItemClickListener
    void setOnMenuItemClickListener(org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener) -> setOnMenuItemClickListener
    int getMenuItemCount() -> getMenuItemCount
    void addMenuItem(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> addMenuItem
    org.anddev.andengine.entity.scene.menu.MenuScene getChildScene() -> getChildScene
    void setChildScene(org.anddev.andengine.entity.scene.Scene,boolean,boolean,boolean) -> setChildScene
    void clearChildScene() -> clearChildScene
    void setMenuAnimator(org.anddev.andengine.entity.scene.menu.animator.IMenuAnimator) -> setMenuAnimator
    boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,org.anddev.andengine.entity.scene.Scene$ITouchArea,float,float) -> onAreaTouched
    boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    void back() -> back
    void reset() -> reset
    void closeMenuScene() -> closeMenuScene
    void buildAnimations() -> buildAnimations
    void prepareAnimations() -> prepareAnimations
    org.anddev.andengine.entity.scene.Scene getChildScene() -> getChildScene
org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener -> org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener:
    boolean onMenuItemClicked(org.anddev.andengine.entity.scene.menu.MenuScene,org.anddev.andengine.entity.scene.menu.item.IMenuItem,float,float) -> onMenuItemClicked
org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator -> org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator:
    float ALPHA_FROM -> ALPHA_FROM
    float ALPHA_TO -> ALPHA_TO
    int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign
    void buildAnimations(java.util.ArrayList,float,float) -> buildAnimations
    void prepareAnimations(java.util.ArrayList,float,float) -> prepareAnimations
    int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign
org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator -> org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator:
    float DURATION -> DURATION
    float MENUITEMSPACING_DEFAULT -> MENUITEMSPACING_DEFAULT
    org.anddev.andengine.util.HorizontalAlign HORIZONTALALIGN_DEFAULT -> HORIZONTALALIGN_DEFAULT
    float mMenuItemSpacing -> mMenuItemSpacing
    org.anddev.andengine.util.HorizontalAlign mHorizontalAlign -> mHorizontalAlign
    org.anddev.andengine.util.modifier.ease.IEaseFunction mEaseFunction -> mEaseFunction
    float getMaximumWidth(java.util.ArrayList) -> getMaximumWidth
    float getOverallHeight(java.util.ArrayList) -> getOverallHeight
org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator -> org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator:
    int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign
    void buildAnimations(java.util.ArrayList,float,float) -> buildAnimations
    void prepareAnimations(java.util.ArrayList,float,float) -> prepareAnimations
    int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign
org.anddev.andengine.entity.scene.menu.animator.IMenuAnimator -> org.anddev.andengine.entity.scene.menu.animator.IMenuAnimator:
    org.anddev.andengine.entity.scene.menu.animator.IMenuAnimator DEFAULT -> DEFAULT
    void prepareAnimations(java.util.ArrayList,float,float) -> prepareAnimations
    void buildAnimations(java.util.ArrayList,float,float) -> buildAnimations
org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator -> org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator:
    int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign
    void buildAnimations(java.util.ArrayList,float,float) -> buildAnimations
    void prepareAnimations(java.util.ArrayList,float,float) -> prepareAnimations
    int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign
org.anddev.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem -> org.anddev.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem:
    int mID -> mID
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
org.anddev.andengine.entity.scene.menu.item.IMenuItem -> org.anddev.andengine.entity.scene.menu.item.IMenuItem:
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
org.anddev.andengine.entity.scene.menu.item.SpriteMenuItem -> org.anddev.andengine.entity.scene.menu.item.SpriteMenuItem:
    int mID -> mID
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
org.anddev.andengine.entity.scene.menu.item.TextMenuItem -> org.anddev.andengine.entity.scene.menu.item.TextMenuItem:
    int mID -> mID
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator -> org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator:
    org.anddev.andengine.entity.scene.menu.item.IMenuItem mMenuItem -> mMenuItem
    void onMenuItemSelected(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemSelected
    void onMenuItemUnselected(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemUnselected
    void onMenuItemReset(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemReset
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
    float getX() -> getX
    float getY() -> getY
    void setPosition(org.anddev.andengine.entity.IEntity) -> setPosition
    void setPosition(float,float) -> setPosition
    float getBaseWidth() -> getBaseWidth
    float getBaseHeight() -> getBaseHeight
    float getWidth() -> getWidth
    float getWidthScaled() -> getWidthScaled
    float getHeight() -> getHeight
    float getHeightScaled() -> getHeightScaled
    float getInitialX() -> getInitialX
    float getInitialY() -> getInitialY
    float getRed() -> getRed
    float getGreen() -> getGreen
    float getBlue() -> getBlue
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationCenterX() -> getRotationCenterX
    float getRotationCenterY() -> getRotationCenterY
    void setRotationCenterX(float) -> setRotationCenterX
    void setRotationCenterY(float) -> setRotationCenterY
    void setRotationCenter(float,float) -> setRotationCenter
    boolean isScaled() -> isScaled
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void setScaleX(float) -> setScaleX
    void setScaleY(float) -> setScaleY
    float getScaleCenterX() -> getScaleCenterX
    float getScaleCenterY() -> getScaleCenterY
    void setScaleCenterX(float) -> setScaleCenterX
    void setScaleCenterY(float) -> setScaleCenterY
    void setScaleCenter(float,float) -> setScaleCenter
    boolean collidesWith(org.anddev.andengine.entity.shape.IShape) -> collidesWith
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    boolean isCullingEnabled() -> isCullingEnabled
    void registerEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier) -> registerEntityModifier
    boolean unregisterEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier) -> unregisterEntityModifier
    boolean unregisterEntityModifiers(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher) -> unregisterEntityModifiers
    void clearEntityModifiers() -> clearEntityModifiers
    void setInitialPosition() -> setInitialPosition
    void setBlendFunction(int,int) -> setBlendFunction
    void setCullingEnabled(boolean) -> setCullingEnabled
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onDraw
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    boolean contains(float,float) -> contains
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float,float,float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[],float[]) -> convertLocalToSceneCoordinates
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float,float,float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[],float[]) -> convertSceneToLocalCoordinates
    boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
    int getChildCount() -> getChildCount
    void attachChild(org.anddev.andengine.entity.IEntity) -> attachChild
    org.anddev.andengine.entity.IEntity getFirstChild() -> getFirstChild
    org.anddev.andengine.entity.IEntity getLastChild() -> getLastChild
    org.anddev.andengine.entity.IEntity getChild(int) -> getChild
    org.anddev.andengine.entity.IEntity findChild(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> findChild
    void sortChildren() -> sortChildren
    void sortChildren(java.util.Comparator) -> sortChildren
    boolean detachSelf() -> detachSelf
    boolean detachChild(org.anddev.andengine.entity.IEntity) -> detachChild
    org.anddev.andengine.entity.IEntity detachChild(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> detachChild
    boolean detachChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher) -> detachChildren
    void detachChildren() -> detachChildren
    void callOnChildren(org.anddev.andengine.entity.IEntity$IEntityCallable) -> callOnChildren
    void callOnChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher,org.anddev.andengine.entity.IEntity$IEntityCallable) -> callOnChildren
    org.anddev.andengine.util.Transformation getLocalToSceneTransformation() -> getLocalToSceneTransformation
    org.anddev.andengine.util.Transformation getSceneToLocalTransformation() -> getSceneToLocalTransformation
    org.anddev.andengine.entity.IEntity getParent() -> getParent
    void setParent(org.anddev.andengine.entity.IEntity) -> setParent
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    boolean isChildrenVisible() -> isChildrenVisible
    void setChildrenVisible(boolean) -> setChildrenVisible
    boolean isIgnoreUpdate() -> isIgnoreUpdate
    void setIgnoreUpdate(boolean) -> setIgnoreUpdate
    boolean isChildrenIgnoreUpdate() -> isChildrenIgnoreUpdate
    void setChildrenIgnoreUpdate(boolean) -> setChildrenIgnoreUpdate
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    void registerUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    boolean unregisterUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    void clearUpdateHandlers() -> clearUpdateHandlers
    boolean unregisterUpdateHandlers(org.anddev.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher) -> unregisterUpdateHandlers
org.anddev.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator -> org.anddev.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator:
    float mSelectedRed -> mSelectedRed
    float mSelectedGreen -> mSelectedGreen
    float mSelectedBlue -> mSelectedBlue
    float mUnselectedRed -> mUnselectedRed
    float mUnselectedGreen -> mUnselectedGreen
    float mUnselectedBlue -> mUnselectedBlue
    void onMenuItemSelected(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemSelected
    void onMenuItemUnselected(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemUnselected
    void onMenuItemReset(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemReset
org.anddev.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator -> org.anddev.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator:
    float mSelectedScale -> mSelectedScale
    float mUnselectedScale -> mUnselectedScale
    void onMenuItemSelected(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemSelected
    void onMenuItemUnselected(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemUnselected
    void onMenuItemReset(org.anddev.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemReset
org.anddev.andengine.entity.scene.popup.PopupScene -> org.anddev.andengine.entity.scene.popup.PopupScene:
org.anddev.andengine.entity.scene.popup.PopupScene$1 -> org.anddev.andengine.entity.scene.popup.a:
    org.anddev.andengine.entity.scene.popup.PopupScene this$0 -> a
    org.anddev.andengine.entity.scene.Scene val$pParentScene -> b
    java.lang.Runnable val$pRunnable -> c
    void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler) -> onTimePassed
org.anddev.andengine.entity.scene.popup.TextPopupScene -> org.anddev.andengine.entity.scene.popup.TextPopupScene:
    org.anddev.andengine.entity.text.Text mText -> mText
    org.anddev.andengine.entity.text.Text getText() -> getText
org.anddev.andengine.entity.shape.IShape -> org.anddev.andengine.entity.shape.IShape:
    boolean isCullingEnabled() -> isCullingEnabled
    void setCullingEnabled(boolean) -> setCullingEnabled
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getBaseWidth() -> getBaseWidth
    float getBaseHeight() -> getBaseHeight
    float getWidthScaled() -> getWidthScaled
    float getHeightScaled() -> getHeightScaled
    boolean collidesWith(org.anddev.andengine.entity.shape.IShape) -> collidesWith
    void setBlendFunction(int,int) -> setBlendFunction
org.anddev.andengine.entity.shape.RectangularShape -> org.anddev.andengine.entity.shape.RectangularShape:
    float mBaseWidth -> mBaseWidth
    float mBaseHeight -> mBaseHeight
    float mWidth -> mWidth
    float mHeight -> mHeight
    org.anddev.andengine.opengl.vertex.VertexBuffer mVertexBuffer -> mVertexBuffer
    org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer() -> getVertexBuffer
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getBaseWidth() -> getBaseWidth
    float getBaseHeight() -> getBaseHeight
    void setWidth(float) -> setWidth
    void setHeight(float) -> setHeight
    void setSize(float,float) -> setSize
    void setBaseSize() -> setBaseSize
    boolean isCulled(org.anddev.andengine.engine.camera.Camera) -> isCulled
    void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> drawVertices
    void reset() -> reset
    boolean contains(float,float) -> contains
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    boolean collidesWith(org.anddev.andengine.entity.shape.IShape) -> collidesWith
org.anddev.andengine.entity.shape.Shape -> org.anddev.andengine.entity.shape.Shape:
    int BLENDFUNCTION_SOURCE_DEFAULT -> BLENDFUNCTION_SOURCE_DEFAULT
    int BLENDFUNCTION_DESTINATION_DEFAULT -> BLENDFUNCTION_DESTINATION_DEFAULT
    int BLENDFUNCTION_SOURCE_PREMULTIPLYALPHA_DEFAULT -> BLENDFUNCTION_SOURCE_PREMULTIPLYALPHA_DEFAULT
    int BLENDFUNCTION_DESTINATION_PREMULTIPLYALPHA_DEFAULT -> BLENDFUNCTION_DESTINATION_PREMULTIPLYALPHA_DEFAULT
    int mSourceBlendFunction -> mSourceBlendFunction
    int mDestinationBlendFunction -> mDestinationBlendFunction
    boolean mCullingEnabled -> mCullingEnabled
    void setBlendFunction(int,int) -> setBlendFunction
    boolean isCullingEnabled() -> isCullingEnabled
    void setCullingEnabled(boolean) -> setCullingEnabled
    float getWidthScaled() -> getWidthScaled
    float getHeightScaled() -> getHeightScaled
    boolean isVertexBufferManaged() -> isVertexBufferManaged
    void setVertexBufferManaged(boolean) -> setVertexBufferManaged
    void onUpdateVertexBuffer() -> onUpdateVertexBuffer
    org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer() -> getVertexBuffer
    void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> drawVertices
    void doDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> doDraw
    boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
    boolean isCulled(org.anddev.andengine.engine.camera.Camera) -> isCulled
    void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onManagedDraw
    void reset() -> reset
    void finalize() -> finalize
    void onInitDraw(javax.microedition.khronos.opengles.GL10) -> onInitDraw
    void onApplyVertices(javax.microedition.khronos.opengles.GL10) -> onApplyVertices
    void updateVertexBuffer() -> updateVertexBuffer
org.anddev.andengine.entity.sprite.AnimatedSprite -> org.anddev.andengine.entity.sprite.AnimatedSprite:
    int LOOP_CONTINUOUS -> LOOP_CONTINUOUS
    boolean mAnimationRunning -> mAnimationRunning
    long mAnimationProgress -> mAnimationProgress
    long mAnimationDuration -> mAnimationDuration
    long[] mFrameEndsInNanoseconds -> mFrameEndsInNanoseconds
    int mFirstTileIndex -> mFirstTileIndex
    int mInitialLoopCount -> mInitialLoopCount
    int mLoopCount -> mLoopCount
    org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener mAnimationListener -> mAnimationListener
    int mFrameCount -> mFrameCount
    int[] mFrames -> mFrames
    boolean isAnimationRunning() -> isAnimationRunning
    void onManagedUpdate(float) -> onManagedUpdate
    void stopAnimation() -> stopAnimation
    void stopAnimation(int) -> stopAnimation
    int calculateCurrentFrameIndex() -> calculateCurrentFrameIndex
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long,boolean) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long,int) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long,boolean,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long,int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[]) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],boolean) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],boolean,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int,int,boolean) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int,int,int) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int[],int) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int[],int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int,int,int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    org.anddev.andengine.entity.sprite.AnimatedSprite init(long[],int,int[],int,int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> init
org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener -> org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener:
    void onAnimationEnd(org.anddev.andengine.entity.sprite.AnimatedSprite) -> onAnimationEnd
org.anddev.andengine.entity.sprite.BaseSprite -> org.anddev.andengine.entity.sprite.BaseSprite:
    org.anddev.andengine.opengl.texture.region.BaseTextureRegion mTextureRegion -> mTextureRegion
    org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion() -> getTextureRegion
    void setFlippedHorizontal(boolean) -> setFlippedHorizontal
    void setFlippedVertical(boolean) -> setFlippedVertical
    void reset() -> reset
    void onInitDraw(javax.microedition.khronos.opengles.GL10) -> onInitDraw
    void doDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> doDraw
    void finalize() -> finalize
    void initBlendFunction() -> initBlendFunction
org.anddev.andengine.entity.sprite.Sprite -> org.anddev.andengine.entity.sprite.Sprite:
    org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegion() -> getTextureRegion
    org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion() -> getTextureRegion
org.anddev.andengine.entity.sprite.TiledSprite -> org.anddev.andengine.entity.sprite.TiledSprite:
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion getTextureRegion() -> getTextureRegion
    int getCurrentTileIndex() -> getCurrentTileIndex
    void setCurrentTileIndex(int) -> setCurrentTileIndex
    void setCurrentTileIndex(int,int) -> setCurrentTileIndex
    void nextTile() -> nextTile
    org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion() -> getTextureRegion
org.anddev.andengine.entity.sprite.batch.SpriteBatch -> org.anddev.andengine.entity.sprite.batch.SpriteBatch:
    org.anddev.andengine.opengl.texture.Texture mTexture -> mTexture
    int mCapacity -> mCapacity
    int mIndex -> mIndex
    int mVertices -> mVertices
    boolean mDirty -> mDirty
    int mSourceBlendFunction -> mSourceBlendFunction
    int mDestinationBlendFunction -> mDestinationBlendFunction
    org.anddev.andengine.opengl.vertex.SpriteBatchVertexBuffer mSpriteBatchVertexBuffer -> mSpriteBatchVertexBuffer
    org.anddev.andengine.opengl.texture.region.buffer.SpriteBatchTextureRegionBuffer mSpriteBatchTextureRegionBuffer -> mSpriteBatchTextureRegionBuffer
    void setBlendFunction(int,int) -> setBlendFunction
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    void doDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> doDraw
    void reset() -> reset
    void finalize() -> finalize
    void begin(javax.microedition.khronos.opengles.GL10) -> begin
    void onDrawSpriteBatch() -> onDrawSpriteBatch
    void end(javax.microedition.khronos.opengles.GL10) -> end
    void draw(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float) -> draw
    void drawWithoutChecks(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float) -> drawWithoutChecks
    void draw(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,float,float,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.anddev.andengine.entity.sprite.BaseSprite) -> draw
    void drawWithoutChecks(org.anddev.andengine.entity.sprite.BaseSprite) -> drawWithoutChecks
    void submit() -> submit
    void initBlendFunction() -> initBlendFunction
    void onInitDraw(javax.microedition.khronos.opengles.GL10) -> onInitDraw
    void onApplyVertices(javax.microedition.khronos.opengles.GL10) -> onApplyVertices
    void onApplyTextureRegion(javax.microedition.khronos.opengles.GL10) -> onApplyTextureRegion
    void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> drawVertices
    void assertCapacity(int) -> assertCapacity
    void assertCapacity() -> assertCapacity
    void assertTexture(org.anddev.andengine.opengl.texture.region.BaseTextureRegion) -> assertTexture
org.anddev.andengine.entity.sprite.batch.SpriteGroup -> org.anddev.andengine.entity.sprite.batch.SpriteGroup:
    void attachChild(org.anddev.andengine.entity.IEntity) -> attachChild
    void attachChild(org.anddev.andengine.entity.sprite.BaseSprite) -> attachChild
    void attachChildren(java.util.ArrayList) -> attachChildren
    void onDrawSpriteBatch() -> onDrawSpriteBatch
    void assertCapacity() -> assertCapacity
org.anddev.andengine.entity.text.ChangeableText -> org.anddev.andengine.entity.text.ChangeableText:
    java.lang.String ELLIPSIS -> ELLIPSIS
    int ELLIPSIS_CHARACTER_COUNT -> ELLIPSIS_CHARACTER_COUNT
    int mCharacterCountCurrentText -> mCharacterCountCurrentText
    void setText(java.lang.String) -> setText
    void setText(java.lang.String,boolean) -> setText
    void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> drawVertices
org.anddev.andengine.entity.text.Text -> org.anddev.andengine.entity.text.Text:
    org.anddev.andengine.opengl.texture.buffer.TextTextureBuffer mTextTextureBuffer -> mTextTextureBuffer
    java.lang.String mText -> mText
    java.lang.String[] mLines -> mLines
    int[] mWidths -> mWidths
    org.anddev.andengine.opengl.font.Font mFont -> mFont
    int mMaximumLineWidth -> mMaximumLineWidth
    int mCharactersMaximum -> mCharactersMaximum
    int mVertexCount -> mVertexCount
    void updateText(java.lang.String) -> updateText
    java.lang.String getText() -> getText
    int getCharactersMaximum() -> getCharactersMaximum
    org.anddev.andengine.opengl.vertex.TextVertexBuffer getVertexBuffer() -> getVertexBuffer
    void onInitDraw(javax.microedition.khronos.opengles.GL10) -> onInitDraw
    void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> drawVertices
    void onUpdateVertexBuffer() -> onUpdateVertexBuffer
    void onApplyTransformations(javax.microedition.khronos.opengles.GL10) -> onApplyTransformations
    void finalize() -> finalize
    void initBlendFunction() -> initBlendFunction
    void applyTexture(javax.microedition.khronos.opengles.GL10) -> applyTexture
    org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer() -> getVertexBuffer
org.anddev.andengine.entity.text.TickerText -> org.anddev.andengine.entity.text.TickerText:
    float mCharactersPerSecond -> mCharactersPerSecond
    int mCharactersVisible -> mCharactersVisible
    float mSecondsElapsed -> mSecondsElapsed
    boolean mReverse -> mReverse
    float mDuration -> mDuration
    boolean isReverse() -> isReverse
    void setReverse(boolean) -> setReverse
    float getCharactersPerSecond() -> getCharactersPerSecond
    void setCharactersPerSecond(float) -> setCharactersPerSecond
    int getCharactersVisible() -> getCharactersVisible
    void onManagedUpdate(float) -> onManagedUpdate
    void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> drawVertices
    void reset() -> reset
org.anddev.andengine.entity.util.AverageFPSCounter -> org.anddev.andengine.entity.util.AverageFPSCounter:
    float AVERAGE_DURATION_DEFAULT -> AVERAGE_DURATION_DEFAULT
    float mAverageDuration -> mAverageDuration
    void onHandleAverageDurationElapsed(float) -> onHandleAverageDurationElapsed
    void onUpdate(float) -> onUpdate
org.anddev.andengine.entity.util.FPSCounter -> org.anddev.andengine.entity.util.FPSCounter:
    float mSecondsElapsed -> mSecondsElapsed
    int mFrames -> mFrames
    float getFPS() -> getFPS
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.entity.util.FPSLogger -> org.anddev.andengine.entity.util.FPSLogger:
    float mShortestFrame -> mShortestFrame
    float mLongestFrame -> mLongestFrame
    void onHandleAverageDurationElapsed(float) -> onHandleAverageDurationElapsed
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void onLogFPS() -> onLogFPS
org.anddev.andengine.entity.util.FrameCountCrasher -> org.anddev.andengine.entity.util.FrameCountCrasher:
    int mFramesLeft -> mFramesLeft
    float[] mFrameLengths -> mFrameLengths
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.entity.util.FrameCounter -> org.anddev.andengine.entity.util.FrameCounter:
    int mFrames -> mFrames
    int getFrames() -> getFrames
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.entity.util.ScreenCapture -> org.anddev.andengine.entity.util.ScreenCapture:
    java.lang.String mFilePath -> mFilePath
    org.anddev.andengine.entity.util.ScreenGrabber mScreenGrabber -> mScreenGrabber
    org.anddev.andengine.entity.util.ScreenCapture$IScreenCaptureCallback mScreenCaptureCallback -> mScreenCaptureCallback
    void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
    void reset() -> reset
    void onScreenGrabbed(android.graphics.Bitmap) -> onScreenGrabbed
    void onScreenGrabFailed(java.lang.Exception) -> onScreenGrabFailed
    void capture(int,int,java.lang.String,org.anddev.andengine.entity.util.ScreenCapture$IScreenCaptureCallback) -> capture
    void capture(int,int,int,int,java.lang.String,org.anddev.andengine.entity.util.ScreenCapture$IScreenCaptureCallback) -> capture
    void saveCapture(android.graphics.Bitmap,java.lang.String) -> saveCapture
org.anddev.andengine.entity.util.ScreenCapture$IScreenCaptureCallback -> org.anddev.andengine.entity.util.ScreenCapture$IScreenCaptureCallback:
    void onScreenCaptured(java.lang.String) -> onScreenCaptured
    void onScreenCaptureFailed(java.lang.String,java.lang.Exception) -> onScreenCaptureFailed
org.anddev.andengine.entity.util.ScreenGrabber -> org.anddev.andengine.entity.util.ScreenGrabber:
    int mGrabX -> mGrabX
    int mGrabY -> mGrabY
    int mGrabWidth -> mGrabWidth
    int mGrabHeight -> mGrabHeight
    boolean mScreenGrabPending -> mScreenGrabPending
    org.anddev.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback mScreenGrabCallback -> mScreenGrabCallback
    void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
    void reset() -> reset
    void grab(int,int,org.anddev.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback) -> grab
    void grab(int,int,int,int,org.anddev.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback) -> grab
    android.graphics.Bitmap grab(int,int,int,int,javax.microedition.khronos.opengles.GL10) -> grab
org.anddev.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback -> org.anddev.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback:
    void onScreenGrabbed(android.graphics.Bitmap) -> onScreenGrabbed
    void onScreenGrabFailed(java.lang.Exception) -> onScreenGrabFailed
org.anddev.andengine.extension.physics.box2d.FixedStepPhysicsWorld -> org.anddev.andengine.extension.physics.box2d.FixedStepPhysicsWorld:
    int STEPSPERSECOND_DEFAULT -> STEPSPERSECOND_DEFAULT
    float mTimeStep -> mTimeStep
    int mMaximumStepsPerUpdate -> mMaximumStepsPerUpdate
    float mSecondsElapsedAccumulator -> mSecondsElapsedAccumulator
    void onUpdate(float) -> onUpdate
org.anddev.andengine.extension.physics.box2d.PhysicsConnector -> org.anddev.andengine.extension.physics.box2d.PhysicsConnector:
    org.anddev.andengine.entity.shape.IShape mShape -> mShape
    com.badlogic.gdx.physics.box2d.Body mBody -> mBody
    float mShapeHalfBaseWidth -> mShapeHalfBaseWidth
    float mShapeHalfBaseHeight -> mShapeHalfBaseHeight
    boolean mUpdatePosition -> mUpdatePosition
    boolean mUpdateRotation -> mUpdateRotation
    float mPixelToMeterRatio -> mPixelToMeterRatio
    org.anddev.andengine.entity.shape.IShape getShape() -> getShape
    com.badlogic.gdx.physics.box2d.Body getBody() -> getBody
    boolean isUpdatePosition() -> isUpdatePosition
    boolean isUpdateRotation() -> isUpdateRotation
    void setUpdatePosition(boolean) -> setUpdatePosition
    void setUpdateRotation(boolean) -> setUpdateRotation
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager -> org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager:
    long serialVersionUID -> serialVersionUID
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    com.badlogic.gdx.physics.box2d.Body findBodyByShape(org.anddev.andengine.entity.shape.IShape) -> findBodyByShape
    org.anddev.andengine.extension.physics.box2d.PhysicsConnector findPhysicsConnectorByShape(org.anddev.andengine.entity.shape.IShape) -> findPhysicsConnectorByShape
org.anddev.andengine.extension.physics.box2d.PhysicsFactory -> org.anddev.andengine.extension.physics.box2d.PhysicsFactory:
    com.badlogic.gdx.physics.box2d.FixtureDef createFixtureDef(float,float,float) -> createFixtureDef
    com.badlogic.gdx.physics.box2d.FixtureDef createFixtureDef(float,float,float,boolean) -> createFixtureDef
    com.badlogic.gdx.physics.box2d.FixtureDef createFixtureDef(float,float,float,boolean,short,short,short) -> createFixtureDef
    com.badlogic.gdx.physics.box2d.Body createBoxBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef) -> createBoxBody
    com.badlogic.gdx.physics.box2d.Body createBoxBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float) -> createBoxBody
    com.badlogic.gdx.physics.box2d.Body createBoxBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,float,float,float,float,float,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef) -> createBoxBody
    com.badlogic.gdx.physics.box2d.Body createBoxBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,float,float,float,float,float,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float) -> createBoxBody
    com.badlogic.gdx.physics.box2d.Body createCircleBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef) -> createCircleBody
    com.badlogic.gdx.physics.box2d.Body createCircleBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float) -> createCircleBody
    com.badlogic.gdx.physics.box2d.Body createCircleBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,float,float,float,float,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef) -> createCircleBody
    com.badlogic.gdx.physics.box2d.Body createCircleBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,float,float,float,float,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float) -> createCircleBody
    com.badlogic.gdx.physics.box2d.Body createLineBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.primitive.Line,com.badlogic.gdx.physics.box2d.FixtureDef) -> createLineBody
    com.badlogic.gdx.physics.box2d.Body createLineBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.primitive.Line,com.badlogic.gdx.physics.box2d.FixtureDef,float) -> createLineBody
    com.badlogic.gdx.physics.box2d.Body createPolygonBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.math.Vector2[],com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef) -> createPolygonBody
    com.badlogic.gdx.physics.box2d.Body createPolygonBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.math.Vector2[],com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float) -> createPolygonBody
    com.badlogic.gdx.physics.box2d.Body createTrianglulatedBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,java.util.List,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef) -> createTrianglulatedBody
    com.badlogic.gdx.physics.box2d.Body createTrianglulatedBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,java.util.List,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float) -> createTrianglulatedBody
org.anddev.andengine.extension.physics.box2d.PhysicsWorld -> org.anddev.andengine.extension.physics.box2d.PhysicsWorld:
    int VELOCITY_ITERATIONS_DEFAULT -> VELOCITY_ITERATIONS_DEFAULT
    int POSITION_ITERATIONS_DEFAULT -> POSITION_ITERATIONS_DEFAULT
    org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager mPhysicsConnectorManager -> mPhysicsConnectorManager
    org.anddev.andengine.engine.handler.runnable.RunnableHandler mRunnableHandler -> mRunnableHandler
    com.badlogic.gdx.physics.box2d.World mWorld -> mWorld
    int mVelocityIterations -> mVelocityIterations
    int mPositionIterations -> mPositionIterations
    int getPositionIterations() -> getPositionIterations
    void setPositionIterations(int) -> setPositionIterations
    int getVelocityIterations() -> getVelocityIterations
    void setVelocityIterations(int) -> setVelocityIterations
    org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager getPhysicsConnectorManager() -> getPhysicsConnectorManager
    void clearPhysicsConnectors() -> clearPhysicsConnectors
    void registerPhysicsConnector(org.anddev.andengine.extension.physics.box2d.PhysicsConnector) -> registerPhysicsConnector
    void unregisterPhysicsConnector(org.anddev.andengine.extension.physics.box2d.PhysicsConnector) -> unregisterPhysicsConnector
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void postRunnable(java.lang.Runnable) -> postRunnable
    void clearForces() -> clearForces
    com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> createBody
    com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createJoint
    void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> destroyBody
    void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> destroyJoint
    void dispose() -> dispose
    boolean getAutoClearForces() -> getAutoClearForces
    java.util.Iterator getBodies() -> getBodies
    int getBodyCount() -> getBodyCount
    int getContactCount() -> getContactCount
    java.util.List getContactList() -> getContactList
    com.badlogic.gdx.math.Vector2 getGravity() -> getGravity
    java.util.Iterator getJoints() -> getJoints
    int getJointCount() -> getJointCount
    int getProxyCount() -> getProxyCount
    boolean isLocked() -> isLocked
    void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float) -> QueryAABB
    void setAutoClearForces(boolean) -> setAutoClearForces
    void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter) -> setContactFilter
    void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> setContactListener
    void setContinuousPhysics(boolean) -> setContinuousPhysics
    void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener) -> setDestructionListener
    void setGravity(com.badlogic.gdx.math.Vector2) -> setGravity
    void setWarmStarting(boolean) -> setWarmStarting
org.anddev.andengine.extension.physics.box2d.util.Vector2Pool -> org.anddev.andengine.extension.physics.box2d.util.Vector2Pool:
    org.anddev.andengine.util.pool.GenericPool POOL -> POOL
    com.badlogic.gdx.math.Vector2 obtain() -> obtain
    com.badlogic.gdx.math.Vector2 obtain(com.badlogic.gdx.math.Vector2) -> obtain
    com.badlogic.gdx.math.Vector2 obtain(float,float) -> obtain
    void recycle(com.badlogic.gdx.math.Vector2) -> recycle
org.anddev.andengine.extension.physics.box2d.util.Vector2Pool$1 -> org.anddev.andengine.extension.physics.box2d.util.a:
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.extension.physics.box2d.util.constants.PhysicsConstants -> org.anddev.andengine.extension.physics.box2d.util.constants.PhysicsConstants:
    float PIXEL_TO_METER_RATIO_DEFAULT -> PIXEL_TO_METER_RATIO_DEFAULT
org.anddev.andengine.extension.physics.box2d.util.hull.BaseHullAlgorithm -> org.anddev.andengine.extension.physics.box2d.util.hull.BaseHullAlgorithm:
    com.badlogic.gdx.math.Vector2[] mVertices -> mVertices
    int mVertexCount -> mVertexCount
    int mHullVertexCount -> mHullVertexCount
    int indexOfLowestVertex() -> indexOfLowestVertex
    void swap(int,int) -> swap
org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan -> org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan:
    int computeHull(com.badlogic.gdx.math.Vector2[]) -> computeHull
    void grahamScan() -> grahamScan
    void makeAllVerticesRelativeTo(com.badlogic.gdx.math.Vector2) -> makeAllVerticesRelativeTo
    boolean isConvex(int) -> isConvex
    void sort() -> sort
    void quicksort(int,int) -> quicksort
org.anddev.andengine.extension.physics.box2d.util.hull.IHullAlgorithm -> org.anddev.andengine.extension.physics.box2d.util.hull.IHullAlgorithm:
    int computeHull(com.badlogic.gdx.math.Vector2[]) -> computeHull
org.anddev.andengine.extension.physics.box2d.util.hull.JarvisMarch -> org.anddev.andengine.extension.physics.box2d.util.hull.JarvisMarch:
    int computeHull(com.badlogic.gdx.math.Vector2[]) -> computeHull
    void jarvisMarch() -> jarvisMarch
    int indexOfRightmostVertexOf(com.badlogic.gdx.math.Vector2) -> indexOfRightmostVertexOf
org.anddev.andengine.extension.physics.box2d.util.hull.QuickHull -> org.anddev.andengine.extension.physics.box2d.util.hull.QuickHull:
    float EPSILON -> EPSILON
    int computeHull(com.badlogic.gdx.math.Vector2[]) -> computeHull
    void quickHull() -> quickHull
    void computeHullVertices(org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line,int,int) -> computeHullVertices
    int indexOfFurthestVertex(org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line,int,int) -> indexOfFurthestVertex
    int partition(org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line,int,int) -> partition
org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line -> org.anddev.andengine.extension.physics.box2d.util.hull.a:
    com.badlogic.gdx.math.Vector2 mVertexA -> a
    com.badlogic.gdx.math.Vector2 mVertexB -> b
org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util -> org.anddev.andengine.extension.physics.box2d.util.hull.b:
    boolean isLess(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    float getManhattanDistance(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    float area2(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    float area2(com.badlogic.gdx.math.Vector2,org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line) -> a
    boolean isRightOf(com.badlogic.gdx.math.Vector2,org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line) -> b
org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator -> org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator:
    int CONCAVE -> CONCAVE
    int CONVEX -> CONVEX
    int mConcaveVertexCount -> mConcaveVertexCount
    java.util.List computeTriangles(java.util.List) -> computeTriangles
    boolean areVerticesClockwise(java.util.ArrayList) -> areVerticesClockwise
    int[] classifyVertices(java.util.ArrayList) -> classifyVertices
    boolean isTriangleConvex(float,float,float,float,float,float) -> isTriangleConvex
    int computeSpannedAreaSign(float,float,float,float,float,float) -> computeSpannedAreaSign
    boolean isAnyVertexInTriangle(java.util.ArrayList,int[],float,float,float,float,float,float) -> isAnyVertexInTriangle
    boolean isEarTip(java.util.ArrayList,int,int[]) -> isEarTip
    void cutEarTip(java.util.ArrayList,int,java.util.ArrayList) -> cutEarTip
    void removeCollinearNeighborEarsAfterRemovingEarTip(java.util.ArrayList,int) -> removeCollinearNeighborEarsAfterRemovingEarTip
    boolean isCollinear(java.util.ArrayList,int) -> isCollinear
    boolean isCollinear(java.util.ArrayList,int,int,int) -> isCollinear
    int computePreviousIndex(java.util.List,int) -> computePreviousIndex
    int computeNextIndex(java.util.List,int) -> computeNextIndex
org.anddev.andengine.extension.physics.box2d.util.triangulation.ITriangulationAlgoritm -> org.anddev.andengine.extension.physics.box2d.util.triangulation.ITriangulationAlgoritm:
    java.util.List computeTriangles(java.util.List) -> computeTriangles
org.anddev.andengine.input.touch.TouchEvent -> org.anddev.andengine.input.touch.TouchEvent:
    int ACTION_CANCEL -> ACTION_CANCEL
    int ACTION_DOWN -> ACTION_DOWN
    int ACTION_MOVE -> ACTION_MOVE
    int ACTION_OUTSIDE -> ACTION_OUTSIDE
    int ACTION_UP -> ACTION_UP
    org.anddev.andengine.input.touch.TouchEvent$TouchEventPool TOUCHEVENT_POOL -> TOUCHEVENT_POOL
    int mPointerID -> mPointerID
    float mX -> mX
    float mY -> mY
    int mAction -> mAction
    android.view.MotionEvent mMotionEvent -> mMotionEvent
    org.anddev.andengine.input.touch.TouchEvent obtain(float,float,int,int,android.view.MotionEvent) -> obtain
    void set(float,float,int,int,android.view.MotionEvent) -> set
    void recycle() -> recycle
    void recycle(org.anddev.andengine.input.touch.TouchEvent) -> recycle
    float getX() -> getX
    float getY() -> getY
    void set(float,float) -> set
    void offset(float,float) -> offset
    int getPointerID() -> getPointerID
    int getAction() -> getAction
    boolean isActionDown() -> isActionDown
    boolean isActionUp() -> isActionUp
    boolean isActionMove() -> isActionMove
    boolean isActionCancel() -> isActionCancel
    boolean isActionOutside() -> isActionOutside
    android.view.MotionEvent getMotionEvent() -> getMotionEvent
org.anddev.andengine.input.touch.TouchEvent$TouchEventPool -> org.anddev.andengine.input.touch.a:
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.input.touch.controller.BaseTouchController -> org.anddev.andengine.input.touch.controller.BaseTouchController:
    org.anddev.andengine.input.touch.controller.ITouchController$ITouchEventCallback mTouchEventCallback -> mTouchEventCallback
    boolean mRunOnUpdateThread -> mRunOnUpdateThread
    org.anddev.andengine.util.pool.RunnablePoolUpdateHandler mTouchEventRunnablePoolUpdateHandler -> mTouchEventRunnablePoolUpdateHandler
    void setTouchEventCallback(org.anddev.andengine.input.touch.controller.ITouchController$ITouchEventCallback) -> setTouchEventCallback
    void reset() -> reset
    void onUpdate(float) -> onUpdate
    boolean fireTouchEvent(float,float,int,int,android.view.MotionEvent) -> fireTouchEvent
    void applyTouchOptions(org.anddev.andengine.engine.options.TouchOptions) -> applyTouchOptions
    org.anddev.andengine.input.touch.controller.ITouchController$ITouchEventCallback access$0(org.anddev.andengine.input.touch.controller.BaseTouchController) -> access$0
org.anddev.andengine.input.touch.controller.BaseTouchController$1 -> org.anddev.andengine.input.touch.controller.a:
    org.anddev.andengine.input.touch.controller.BaseTouchController this$0 -> a
    org.anddev.andengine.util.pool.RunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem -> org.anddev.andengine.input.touch.controller.b:
    org.anddev.andengine.input.touch.TouchEvent mTouchEvent -> a
    org.anddev.andengine.input.touch.controller.BaseTouchController this$0 -> b
    void set(org.anddev.andengine.input.touch.TouchEvent) -> a
    void run() -> run
    void onRecycle() -> onRecycle
org.anddev.andengine.input.touch.controller.ITouchController -> org.anddev.andengine.input.touch.controller.ITouchController:
    void setTouchEventCallback(org.anddev.andengine.input.touch.controller.ITouchController$ITouchEventCallback) -> setTouchEventCallback
    void applyTouchOptions(org.anddev.andengine.engine.options.TouchOptions) -> applyTouchOptions
    boolean onHandleMotionEvent(android.view.MotionEvent) -> onHandleMotionEvent
org.anddev.andengine.input.touch.controller.ITouchController$ITouchEventCallback -> org.anddev.andengine.input.touch.controller.ITouchController$ITouchEventCallback:
    boolean onTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onTouchEvent
org.anddev.andengine.input.touch.controller.SingleTouchControler -> org.anddev.andengine.input.touch.controller.SingleTouchControler:
    boolean onHandleMotionEvent(android.view.MotionEvent) -> onHandleMotionEvent
org.anddev.andengine.input.touch.detector.BaseDetector -> org.anddev.andengine.input.touch.detector.BaseDetector:
    boolean mEnabled -> mEnabled
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    boolean onTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onTouchEvent
org.anddev.andengine.input.touch.detector.ClickDetector -> org.anddev.andengine.input.touch.detector.ClickDetector:
    long TRIGGER_CLICK_MAXIMUM_MILLISECONDS_DEFAULT -> TRIGGER_CLICK_MAXIMUM_MILLISECONDS_DEFAULT
    long mTriggerClickMaximumMilliseconds -> mTriggerClickMaximumMilliseconds
    org.anddev.andengine.input.touch.detector.ClickDetector$IClickDetectorListener mClickDetectorListener -> mClickDetectorListener
    long mDownTimeMilliseconds -> mDownTimeMilliseconds
    long getTriggerClickMaximumMilliseconds() -> getTriggerClickMaximumMilliseconds
    void setTriggerClickMaximumMilliseconds(long) -> setTriggerClickMaximumMilliseconds
    boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
org.anddev.andengine.input.touch.detector.ClickDetector$IClickDetectorListener -> org.anddev.andengine.input.touch.detector.ClickDetector$IClickDetectorListener:
    void onClick(org.anddev.andengine.input.touch.detector.ClickDetector,org.anddev.andengine.input.touch.TouchEvent) -> onClick
org.anddev.andengine.input.touch.detector.HoldDetector -> org.anddev.andengine.input.touch.detector.HoldDetector:
    long TRIGGER_HOLD_MINIMUM_MILLISECONDS_DEFAULT -> TRIGGER_HOLD_MINIMUM_MILLISECONDS_DEFAULT
    float TRIGGER_HOLD_MAXIMUM_DISTANCE_DEFAULT -> TRIGGER_HOLD_MAXIMUM_DISTANCE_DEFAULT
    float TIME_BETWEEN_UPDATES_DEFAULT -> TIME_BETWEEN_UPDATES_DEFAULT
    long mTriggerHoldMinimumMilliseconds -> mTriggerHoldMinimumMilliseconds
    float mTriggerHoldMaximumDistance -> mTriggerHoldMaximumDistance
    org.anddev.andengine.input.touch.detector.HoldDetector$IHoldDetectorListener mHoldDetectorListener -> mHoldDetectorListener
    long mDownTimeMilliseconds -> mDownTimeMilliseconds
    float mDownX -> mDownX
    float mDownY -> mDownY
    float mHoldX -> mHoldX
    float mHoldY -> mHoldY
    boolean mMaximumDistanceExceeded -> mMaximumDistanceExceeded
    boolean mTriggerOnHold -> mTriggerOnHold
    boolean mTriggerOnHoldFinished -> mTriggerOnHoldFinished
    org.anddev.andengine.engine.handler.timer.TimerHandler mTimerHandler -> mTimerHandler
    long getTriggerHoldMinimumMilliseconds() -> getTriggerHoldMinimumMilliseconds
    void setTriggerHoldMinimumMilliseconds(long) -> setTriggerHoldMinimumMilliseconds
    float getTriggerHoldMaximumDistance() -> getTriggerHoldMaximumDistance
    void setTriggerHoldMaximumDistance(float) -> setTriggerHoldMaximumDistance
    boolean isHolding() -> isHolding
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    void fireListener() -> fireListener
org.anddev.andengine.input.touch.detector.HoldDetector$1 -> org.anddev.andengine.input.touch.detector.a:
    org.anddev.andengine.input.touch.detector.HoldDetector this$0 -> a
    void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler) -> onTimePassed
org.anddev.andengine.input.touch.detector.HoldDetector$IHoldDetectorListener -> org.anddev.andengine.input.touch.detector.HoldDetector$IHoldDetectorListener:
    void onHold(org.anddev.andengine.input.touch.detector.HoldDetector,long,float,float) -> onHold
    void onHoldFinished(org.anddev.andengine.input.touch.detector.HoldDetector,long,float,float) -> onHoldFinished
org.anddev.andengine.input.touch.detector.ScrollDetector -> org.anddev.andengine.input.touch.detector.ScrollDetector:
    float TRIGGER_SCROLL_MINIMUM_DISTANCE_DEFAULT -> TRIGGER_SCROLL_MINIMUM_DISTANCE_DEFAULT
    float mTriggerScrollMinimumDistance -> mTriggerScrollMinimumDistance
    org.anddev.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener mScrollDetectorListener -> mScrollDetectorListener
    boolean mTriggered -> mTriggered
    float mLastX -> mLastX
    float mLastY -> mLastY
    float getTriggerScrollMinimumDistance() -> getTriggerScrollMinimumDistance
    void setTriggerScrollMinimumDistance(float) -> setTriggerScrollMinimumDistance
    boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    float getX(org.anddev.andengine.input.touch.TouchEvent) -> getX
    float getY(org.anddev.andengine.input.touch.TouchEvent) -> getY
org.anddev.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener -> org.anddev.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener:
    void onScroll(org.anddev.andengine.input.touch.detector.ScrollDetector,org.anddev.andengine.input.touch.TouchEvent,float,float) -> onScroll
org.anddev.andengine.input.touch.detector.SurfaceGestureDetector -> org.anddev.andengine.input.touch.detector.SurfaceGestureDetector:
    float SWIPE_MIN_DISTANCE_DEFAULT -> SWIPE_MIN_DISTANCE_DEFAULT
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    boolean onSingleTap() -> onSingleTap
    boolean onDoubleTap() -> onDoubleTap
    boolean onSwipeUp() -> onSwipeUp
    boolean onSwipeDown() -> onSwipeDown
    boolean onSwipeLeft() -> onSwipeLeft
    boolean onSwipeRight() -> onSwipeRight
    boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$InnerOnGestureDetectorListener -> org.anddev.andengine.input.touch.detector.b:
    float mSwipeMinDistance -> a
    org.anddev.andengine.input.touch.detector.SurfaceGestureDetector this$0 -> b
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter -> org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter:
    boolean onDoubleTap() -> onDoubleTap
    boolean onSingleTap() -> onSingleTap
    boolean onSwipeDown() -> onSwipeDown
    boolean onSwipeLeft() -> onSwipeLeft
    boolean onSwipeRight() -> onSwipeRight
    boolean onSwipeUp() -> onSwipeUp
org.anddev.andengine.input.touch.detector.SurfaceScrollDetector -> org.anddev.andengine.input.touch.detector.SurfaceScrollDetector:
    float getX(org.anddev.andengine.input.touch.TouchEvent) -> getX
    float getY(org.anddev.andengine.input.touch.TouchEvent) -> getY
org.anddev.andengine.level.LevelLoader -> org.anddev.andengine.level.LevelLoader:
    java.lang.String mAssetBasePath -> mAssetBasePath
    org.anddev.andengine.level.LevelLoader$IEntityLoader mDefaultEntityLoader -> mDefaultEntityLoader
    java.util.HashMap mEntityLoaders -> mEntityLoaders
    org.anddev.andengine.level.LevelLoader$IEntityLoader getDefaultEntityLoader() -> getDefaultEntityLoader
    void setDefaultEntityLoader(org.anddev.andengine.level.LevelLoader$IEntityLoader) -> setDefaultEntityLoader
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    void onAfterLoadLevel() -> onAfterLoadLevel
    void onBeforeLoadLevel() -> onBeforeLoadLevel
    void registerEntityLoader(java.lang.String,org.anddev.andengine.level.LevelLoader$IEntityLoader) -> registerEntityLoader
    void registerEntityLoader(java.lang.String[],org.anddev.andengine.level.LevelLoader$IEntityLoader) -> registerEntityLoader
    void loadLevelFromAsset(android.content.Context,java.lang.String) -> loadLevelFromAsset
    void loadLevelFromResource(android.content.Context,int) -> loadLevelFromResource
    void loadLevelFromStream(java.io.InputStream) -> loadLevelFromStream
org.anddev.andengine.level.LevelLoader$IEntityLoader -> org.anddev.andengine.level.LevelLoader$IEntityLoader:
    void onLoadEntity(java.lang.String,org.xml.sax.Attributes) -> onLoadEntity
org.anddev.andengine.level.LevelParser -> org.anddev.andengine.level.LevelParser:
    org.anddev.andengine.level.LevelLoader$IEntityLoader mDefaultEntityLoader -> mDefaultEntityLoader
    java.util.HashMap mEntityLoaders -> mEntityLoaders
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
org.anddev.andengine.level.util.constants.LevelConstants -> org.anddev.andengine.level.util.constants.LevelConstants:
    java.lang.String TAG_LEVEL -> TAG_LEVEL
    java.lang.String TAG_LEVEL_ATTRIBUTE_NAME -> TAG_LEVEL_ATTRIBUTE_NAME
    java.lang.String TAG_LEVEL_ATTRIBUTE_UID -> TAG_LEVEL_ATTRIBUTE_UID
    java.lang.String TAG_LEVEL_ATTRIBUTE_WIDTH -> TAG_LEVEL_ATTRIBUTE_WIDTH
    java.lang.String TAG_LEVEL_ATTRIBUTE_HEIGHT -> TAG_LEVEL_ATTRIBUTE_HEIGHT
org.anddev.andengine.opengl.IDrawable -> org.anddev.andengine.opengl.IDrawable:
    void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera) -> onDraw
org.anddev.andengine.opengl.buffer.BufferObject -> org.anddev.andengine.opengl.buffer.BufferObject:
    int[] HARDWAREBUFFERID_FETCHER -> HARDWAREBUFFERID_FETCHER
    int[] mBufferData -> mBufferData
    int mDrawType -> mDrawType
    org.anddev.andengine.opengl.util.FastFloatBuffer mFloatBuffer -> mFloatBuffer
    int mHardwareBufferID -> mHardwareBufferID
    boolean mLoadedToHardware -> mLoadedToHardware
    boolean mHardwareBufferNeedsUpdate -> mHardwareBufferNeedsUpdate
    boolean mManaged -> mManaged
    boolean isManaged() -> isManaged
    void setManaged(boolean) -> setManaged
    org.anddev.andengine.opengl.util.FastFloatBuffer getFloatBuffer() -> getFloatBuffer
    int getHardwareBufferID() -> getHardwareBufferID
    boolean isLoadedToHardware() -> isLoadedToHardware
    void setLoadedToHardware(boolean) -> setLoadedToHardware
    void setHardwareBufferNeedsUpdate() -> setHardwareBufferNeedsUpdate
    void selectOnHardware(javax.microedition.khronos.opengles.GL11) -> selectOnHardware
    void loadToActiveBufferObjectManager() -> loadToActiveBufferObjectManager
    void unloadFromActiveBufferObjectManager() -> unloadFromActiveBufferObjectManager
    void loadToHardware(javax.microedition.khronos.opengles.GL11) -> loadToHardware
    void unloadFromHardware(javax.microedition.khronos.opengles.GL11) -> unloadFromHardware
    void deleteBufferOnHardware(javax.microedition.khronos.opengles.GL11) -> deleteBufferOnHardware
    int generateHardwareBufferID(javax.microedition.khronos.opengles.GL11) -> generateHardwareBufferID
org.anddev.andengine.opengl.buffer.BufferObjectManager -> org.anddev.andengine.opengl.buffer.BufferObjectManager:
    java.util.HashSet mBufferObjectsManaged -> mBufferObjectsManaged
    java.util.ArrayList mBufferObjectsLoaded -> mBufferObjectsLoaded
    java.util.ArrayList mBufferObjectsToBeLoaded -> mBufferObjectsToBeLoaded
    java.util.ArrayList mBufferObjectsToBeUnloaded -> mBufferObjectsToBeUnloaded
    org.anddev.andengine.opengl.buffer.BufferObjectManager mActiveInstance -> mActiveInstance
    org.anddev.andengine.opengl.buffer.BufferObjectManager getActiveInstance() -> getActiveInstance
    void setActiveInstance(org.anddev.andengine.opengl.buffer.BufferObjectManager) -> setActiveInstance
    void clear() -> clear
    void loadBufferObject(org.anddev.andengine.opengl.buffer.BufferObject) -> loadBufferObject
    void unloadBufferObject(org.anddev.andengine.opengl.buffer.BufferObject) -> unloadBufferObject
    void loadBufferObjects(org.anddev.andengine.opengl.buffer.BufferObject[]) -> loadBufferObjects
    void unloadBufferObjects(org.anddev.andengine.opengl.buffer.BufferObject[]) -> unloadBufferObjects
    void reloadBufferObjects() -> reloadBufferObjects
    void updateBufferObjects(javax.microedition.khronos.opengles.GL11) -> updateBufferObjects
org.anddev.andengine.opengl.font.Font -> org.anddev.andengine.opengl.font.Font:
    float LETTER_LEFT_OFFSET -> LETTER_LEFT_OFFSET
    int LETTER_EXTRA_WIDTH -> LETTER_EXTRA_WIDTH
    org.anddev.andengine.opengl.texture.Texture mTexture -> mTexture
    float mTextureWidth -> mTextureWidth
    float mTextureHeight -> mTextureHeight
    int mCurrentTextureX -> mCurrentTextureX
    int mCurrentTextureY -> mCurrentTextureY
    android.util.SparseArray mManagedCharacterToLetterMap -> mManagedCharacterToLetterMap
    java.util.ArrayList mLettersPendingToBeDrawnToTexture -> mLettersPendingToBeDrawnToTexture
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    android.graphics.Paint$FontMetrics mFontMetrics -> mFontMetrics
    int mLineHeight -> mLineHeight
    int mLineGap -> mLineGap
    org.anddev.andengine.opengl.font.Size mCreateLetterTemporarySize -> mCreateLetterTemporarySize
    android.graphics.Rect mGetLetterBitmapTemporaryRect -> mGetLetterBitmapTemporaryRect
    android.graphics.Rect mGetStringWidthTemporaryRect -> mGetStringWidthTemporaryRect
    android.graphics.Rect mGetLetterBoundsTemporaryRect -> mGetLetterBoundsTemporaryRect
    float[] mTemporaryTextWidthFetchers -> mTemporaryTextWidthFetchers
    android.graphics.Canvas mCanvas -> mCanvas
    int getLineGap() -> getLineGap
    int getLineHeight() -> getLineHeight
    org.anddev.andengine.opengl.texture.Texture getTexture() -> getTexture
    void reload() -> reload
    int getLetterAdvance(char) -> getLetterAdvance
    android.graphics.Bitmap getLetterBitmap(char) -> getLetterBitmap
    void drawCharacterString(java.lang.String) -> drawCharacterString
    int getStringWidth(java.lang.String) -> getStringWidth
    void getLetterBounds(char,org.anddev.andengine.opengl.font.Size) -> getLetterBounds
    void prepareLettes(char[]) -> prepareLettes
    org.anddev.andengine.opengl.font.Letter getLetter(char) -> getLetter
    org.anddev.andengine.opengl.font.Letter createLetter(char) -> createLetter
    void update(javax.microedition.khronos.opengles.GL10) -> update
org.anddev.andengine.opengl.font.FontFactory -> org.anddev.andengine.opengl.font.FontFactory:
    java.lang.String sAssetBasePath -> sAssetBasePath
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    void reset() -> reset
    org.anddev.andengine.opengl.font.Font create(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int) -> create
    org.anddev.andengine.opengl.font.StrokeFont createStroke(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int,float,int) -> createStroke
    org.anddev.andengine.opengl.font.StrokeFont createStroke(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int,float,int,boolean) -> createStroke
    org.anddev.andengine.opengl.font.Font createFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,float,boolean,int) -> createFromAsset
    org.anddev.andengine.opengl.font.StrokeFont createStrokeFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,float,boolean,int,float,int) -> createStrokeFromAsset
    org.anddev.andengine.opengl.font.StrokeFont createStrokeFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,float,boolean,int,float,int,boolean) -> createStrokeFromAsset
org.anddev.andengine.opengl.font.FontLibrary -> org.anddev.andengine.opengl.font.FontLibrary:
    void loadFonts(org.anddev.andengine.opengl.font.FontManager) -> loadFonts
org.anddev.andengine.opengl.font.FontManager -> org.anddev.andengine.opengl.font.FontManager:
    java.util.ArrayList mFontsManaged -> mFontsManaged
    void clear() -> clear
    void loadFont(org.anddev.andengine.opengl.font.Font) -> loadFont
    void loadFonts(org.anddev.andengine.opengl.font.FontLibrary) -> loadFonts
    void loadFonts(org.anddev.andengine.opengl.font.Font[]) -> loadFonts
    void updateFonts(javax.microedition.khronos.opengles.GL10) -> updateFonts
    void reloadFonts() -> reloadFonts
org.anddev.andengine.opengl.font.Letter -> org.anddev.andengine.opengl.font.Letter:
    int mAdvance -> mAdvance
    int mWidth -> mWidth
    int mHeight -> mHeight
    float mTextureX -> mTextureX
    float mTextureY -> mTextureY
    float mTextureWidth -> mTextureWidth
    float mTextureHeight -> mTextureHeight
    char mCharacter -> mCharacter
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.anddev.andengine.opengl.font.Size -> org.anddev.andengine.opengl.font.a:
    float mWidth -> a
    float mHeight -> b
    float getWidth() -> a
    float getHeight() -> b
    void set(int,int) -> a
org.anddev.andengine.opengl.font.StrokeFont -> org.anddev.andengine.opengl.font.StrokeFont:
    android.graphics.Paint mStrokePaint -> mStrokePaint
    boolean mStrokeOnly -> mStrokeOnly
    void drawCharacterString(java.lang.String) -> drawCharacterString
org.anddev.andengine.opengl.texture.BuildableTexture -> org.anddev.andengine.opengl.texture.BuildableTexture:
    java.util.ArrayList mTextureSourcesToPlace -> mTextureSourcesToPlace
    org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation addTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int) -> addTextureSource
    void clearTextureSources() -> clearTextureSources
    void addTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.util.Callback) -> addTextureSource
    void removeTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource) -> removeTextureSource
    void build(org.anddev.andengine.opengl.texture.builder.ITextureBuilder) -> build
org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback -> org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback:
    org.anddev.andengine.opengl.texture.source.ITextureSource mTextureSource -> mTextureSource
    org.anddev.andengine.util.Callback mCallback -> mCallback
    org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback clone() -> clone
    org.anddev.andengine.util.Callback getCallback() -> getCallback
    org.anddev.andengine.opengl.texture.source.ITextureSource getTextureSource() -> getTextureSource
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    java.lang.Object clone() -> clone
    org.anddev.andengine.opengl.texture.source.ITextureSource access$2(org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback) -> access$2
org.anddev.andengine.opengl.texture.Texture -> org.anddev.andengine.opengl.texture.Texture:
    int[] HARDWARETEXTUREID_FETCHER -> HARDWARETEXTUREID_FETCHER
    org.anddev.andengine.opengl.texture.Texture$TextureFormat mTextureFormat -> mTextureFormat
    int mWidth -> mWidth
    int mHeight -> mHeight
    boolean mLoadedToHardware -> mLoadedToHardware
    int mHardwareTextureID -> mHardwareTextureID
    org.anddev.andengine.opengl.texture.TextureOptions mTextureOptions -> mTextureOptions
    java.util.ArrayList mTextureSources -> mTextureSources
    org.anddev.andengine.opengl.texture.Texture$ITextureStateListener mTextureStateListener -> mTextureStateListener
    boolean mUpdateOnHardwareNeeded -> mUpdateOnHardwareNeeded
    int getHardwareTextureID() -> getHardwareTextureID
    boolean isLoadedToHardware() -> isLoadedToHardware
    boolean isUpdateOnHardwareNeeded() -> isUpdateOnHardwareNeeded
    void setLoadedToHardware(boolean) -> setLoadedToHardware
    org.anddev.andengine.opengl.texture.Texture$TextureFormat getTextureFormat() -> getTextureFormat
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    org.anddev.andengine.opengl.texture.TextureOptions getTextureOptions() -> getTextureOptions
    org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation addTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int) -> addTextureSource
    void checkTextureSourcePosition(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int) -> checkTextureSourcePosition
    void removeTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int) -> removeTextureSource
    void clearTextureSources() -> clearTextureSources
    void loadToHardware(javax.microedition.khronos.opengles.GL10) -> loadToHardware
    void unloadFromHardware(javax.microedition.khronos.opengles.GL10) -> unloadFromHardware
    void writeTextureToHardware(javax.microedition.khronos.opengles.GL10) -> writeTextureToHardware
    void applyTextureOptions(javax.microedition.khronos.opengles.GL10) -> applyTextureOptions
    void allocateAndBindTextureOnHardware(javax.microedition.khronos.opengles.GL10) -> allocateAndBindTextureOnHardware
    void deleteTextureOnHardware(javax.microedition.khronos.opengles.GL10) -> deleteTextureOnHardware
    int generateHardwareTextureID(javax.microedition.khronos.opengles.GL10) -> generateHardwareTextureID
    void sendPlaceholderBitmapToHardware(int,int) -> sendPlaceholderBitmapToHardware
org.anddev.andengine.opengl.texture.Texture$ITextureStateListener -> org.anddev.andengine.opengl.texture.Texture$ITextureStateListener:
    void onLoadedToHardware(org.anddev.andengine.opengl.texture.Texture) -> onLoadedToHardware
    void onTextureSourceLoadExeption(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,java.lang.Throwable) -> onTextureSourceLoadExeption
    void onUnloadedFromHardware(org.anddev.andengine.opengl.texture.Texture) -> onUnloadedFromHardware
org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$DebugTextureStateListener -> org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$DebugTextureStateListener:
    void onLoadedToHardware(org.anddev.andengine.opengl.texture.Texture) -> onLoadedToHardware
    void onTextureSourceLoadExeption(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,java.lang.Throwable) -> onTextureSourceLoadExeption
    void onUnloadedFromHardware(org.anddev.andengine.opengl.texture.Texture) -> onUnloadedFromHardware
org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$TextureStateAdapter -> org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$TextureStateAdapter:
    void onLoadedToHardware(org.anddev.andengine.opengl.texture.Texture) -> onLoadedToHardware
    void onTextureSourceLoadExeption(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,java.lang.Throwable) -> onTextureSourceLoadExeption
    void onUnloadedFromHardware(org.anddev.andengine.opengl.texture.Texture) -> onUnloadedFromHardware
org.anddev.andengine.opengl.texture.Texture$TextureFormat -> org.anddev.andengine.opengl.texture.Texture$TextureFormat:
    org.anddev.andengine.opengl.texture.Texture$TextureFormat RGBA_8888 -> RGBA_8888
    org.anddev.andengine.opengl.texture.Texture$TextureFormat RGB_565 -> RGB_565
    int mGLFormat -> mGLFormat
    int mGLDataType -> mGLDataType
    android.graphics.Bitmap$Config mBitmapConfig -> mBitmapConfig
    org.anddev.andengine.opengl.texture.Texture$TextureFormat[] ENUM$VALUES -> ENUM$VALUES
    int getGLFormat() -> getGLFormat
    int getGLDataType() -> getGLDataType
    android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    org.anddev.andengine.opengl.texture.Texture$TextureFormat[] values() -> values
    org.anddev.andengine.opengl.texture.Texture$TextureFormat valueOf(java.lang.String) -> valueOf
org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation -> org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation:
    org.anddev.andengine.opengl.texture.source.ITextureSource mTextureSource -> mTextureSource
    int mTexturePositionX -> mTexturePositionX
    int mTexturePositionY -> mTexturePositionY
    int getTexturePositionX() -> getTexturePositionX
    int getTexturePositionY() -> getTexturePositionY
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.anddev.andengine.opengl.texture.source.ITextureSource access$0(org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation) -> access$0
    int access$1(org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation) -> access$1
    int access$2(org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation) -> access$2
org.anddev.andengine.opengl.texture.TextureFactory -> org.anddev.andengine.opengl.texture.TextureFactory:
    org.anddev.andengine.opengl.texture.Texture createForTextureSourceSize(org.anddev.andengine.opengl.texture.Texture$TextureFormat,org.anddev.andengine.opengl.texture.region.TextureRegion) -> createForTextureSourceSize
    org.anddev.andengine.opengl.texture.Texture createForTextureRegionSize(org.anddev.andengine.opengl.texture.Texture$TextureFormat,org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.texture.TextureOptions) -> createForTextureRegionSize
    org.anddev.andengine.opengl.texture.Texture createForTextureSourceSize(org.anddev.andengine.opengl.texture.Texture$TextureFormat,org.anddev.andengine.opengl.texture.source.ITextureSource) -> createForTextureSourceSize
    org.anddev.andengine.opengl.texture.Texture createForTextureSourceSize(org.anddev.andengine.opengl.texture.Texture$TextureFormat,org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.TextureOptions) -> createForTextureSourceSize
org.anddev.andengine.opengl.texture.TextureManager -> org.anddev.andengine.opengl.texture.TextureManager:
    java.util.HashSet mTexturesManaged -> mTexturesManaged
    java.util.ArrayList mTexturesLoaded -> mTexturesLoaded
    java.util.ArrayList mTexturesToBeLoaded -> mTexturesToBeLoaded
    java.util.ArrayList mTexturesToBeUnloaded -> mTexturesToBeUnloaded
    void clear() -> clear
    boolean loadTexture(org.anddev.andengine.opengl.texture.Texture) -> loadTexture
    boolean unloadTexture(org.anddev.andengine.opengl.texture.Texture) -> unloadTexture
    void loadTextures(org.anddev.andengine.opengl.texture.Texture[]) -> loadTextures
    void unloadTextures(org.anddev.andengine.opengl.texture.Texture[]) -> unloadTextures
    void reloadTextures() -> reloadTextures
    void updateTextures(javax.microedition.khronos.opengles.GL10) -> updateTextures
org.anddev.andengine.opengl.texture.TextureOptions -> org.anddev.andengine.opengl.texture.TextureOptions:
    org.anddev.andengine.opengl.texture.TextureOptions NEAREST -> NEAREST
    org.anddev.andengine.opengl.texture.TextureOptions BILINEAR -> BILINEAR
    org.anddev.andengine.opengl.texture.TextureOptions REPEATING_NEAREST -> REPEATING_NEAREST
    org.anddev.andengine.opengl.texture.TextureOptions REPEATING_BILINEAR -> REPEATING_BILINEAR
    org.anddev.andengine.opengl.texture.TextureOptions NEAREST_PREMULTIPLYALPHA -> NEAREST_PREMULTIPLYALPHA
    org.anddev.andengine.opengl.texture.TextureOptions BILINEAR_PREMULTIPLYALPHA -> BILINEAR_PREMULTIPLYALPHA
    org.anddev.andengine.opengl.texture.TextureOptions REPEATING_NEAREST_PREMULTIPLYALPHA -> REPEATING_NEAREST_PREMULTIPLYALPHA
    org.anddev.andengine.opengl.texture.TextureOptions REPEATING_BILINEAR_PREMULTIPLYALPHA -> REPEATING_BILINEAR_PREMULTIPLYALPHA
    org.anddev.andengine.opengl.texture.TextureOptions DEFAULT -> DEFAULT
    int mMagFilter -> mMagFilter
    int mMinFilter -> mMinFilter
    float mWrapT -> mWrapT
    float mWrapS -> mWrapS
    int mTextureEnvironment -> mTextureEnvironment
    boolean mPreMultipyAlpha -> mPreMultipyAlpha
org.anddev.andengine.opengl.texture.buffer.TextTextureBuffer -> org.anddev.andengine.opengl.texture.buffer.TextTextureBuffer:
    void update(org.anddev.andengine.opengl.font.Font,java.lang.String[]) -> update
org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder -> org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder:
    java.util.Comparator TEXTURESOURCE_COMPARATOR -> TEXTURESOURCE_COMPARATOR
    int mTextureSourceSpacing -> mTextureSourceSpacing
    void pack(org.anddev.andengine.opengl.texture.BuildableTexture,java.util.ArrayList) -> pack
org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$1 -> org.anddev.andengine.opengl.texture.builder.a:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node -> org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node:
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node mChildA -> mChildA
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node mChildB -> mChildB
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect mRect -> mRect
    org.anddev.andengine.opengl.texture.source.ITextureSource mTextureSource -> mTextureSource
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect getRect() -> getRect
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node getChildA() -> getChildA
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node getChildB() -> getChildB
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node insert(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int,int) -> insert
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node createChildren(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int,int,int,int) -> createChildren
    org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect access$0(org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node) -> access$0
org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect -> org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect:
    int mLeft -> mLeft
    int mTop -> mTop
    int mWidth -> mWidth
    int mHeight -> mHeight
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getLeft() -> getLeft
    int getTop() -> getTop
    int getRight() -> getRight
    int getBottom() -> getBottom
    java.lang.String toString() -> toString
    int access$0(org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect) -> access$0
    int access$1(org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect) -> access$1
org.anddev.andengine.opengl.texture.builder.ITextureBuilder -> org.anddev.andengine.opengl.texture.builder.ITextureBuilder:
    void pack(org.anddev.andengine.opengl.texture.BuildableTexture,java.util.ArrayList) -> pack
org.anddev.andengine.opengl.texture.builder.ITextureBuilder$TextureSourcePackingException -> org.anddev.andengine.opengl.texture.builder.ITextureBuilder$TextureSourcePackingException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.opengl.texture.region.BaseTextureRegion -> org.anddev.andengine.opengl.texture.region.BaseTextureRegion:
    org.anddev.andengine.opengl.texture.Texture mTexture -> mTexture
    org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer mTextureRegionBuffer -> mTextureRegionBuffer
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mTexturePositionX -> mTexturePositionX
    int mTexturePositionY -> mTexturePositionY
    void initTextureBuffer() -> initTextureBuffer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setWidth(int) -> setWidth
    void setHeight(int) -> setHeight
    void setTexturePosition(int,int) -> setTexturePosition
    int getTexturePositionX() -> getTexturePositionX
    int getTexturePositionY() -> getTexturePositionY
    org.anddev.andengine.opengl.texture.Texture getTexture() -> getTexture
    org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer getTextureBuffer() -> getTextureBuffer
    boolean isFlippedHorizontal() -> isFlippedHorizontal
    void setFlippedHorizontal(boolean) -> setFlippedHorizontal
    boolean isFlippedVertical() -> isFlippedVertical
    void setFlippedVertical(boolean) -> setFlippedVertical
    boolean isTextureRegionBufferManaged() -> isTextureRegionBufferManaged
    void setTextureRegionBufferManaged(boolean) -> setTextureRegionBufferManaged
    float getTextureCoordinateX1() -> getTextureCoordinateX1
    float getTextureCoordinateY1() -> getTextureCoordinateY1
    float getTextureCoordinateX2() -> getTextureCoordinateX2
    float getTextureCoordinateY2() -> getTextureCoordinateY2
    void updateTextureRegionBuffer() -> updateTextureRegionBuffer
    void onApply(javax.microedition.khronos.opengles.GL10) -> onApply
org.anddev.andengine.opengl.texture.region.TextureRegion -> org.anddev.andengine.opengl.texture.region.TextureRegion:
    org.anddev.andengine.opengl.texture.region.TextureRegion clone() -> clone
    float getTextureCoordinateX1() -> getTextureCoordinateX1
    float getTextureCoordinateY1() -> getTextureCoordinateY1
    float getTextureCoordinateX2() -> getTextureCoordinateX2
    float getTextureCoordinateY2() -> getTextureCoordinateY2
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.region.TextureRegionFactory -> org.anddev.andengine.opengl.texture.region.TextureRegionFactory:
    java.lang.String sAssetBasePath -> sAssetBasePath
    boolean sCreateTextureRegionBuffersManaged -> sCreateTextureRegionBuffersManaged
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    void setCreateTextureRegionBuffersManaged(boolean) -> setCreateTextureRegionBuffersManaged
    void reset() -> reset
    org.anddev.andengine.opengl.texture.region.TextureRegion extractFromTexture(org.anddev.andengine.opengl.texture.Texture,int,int,int,int) -> extractFromTexture
    org.anddev.andengine.opengl.texture.region.TextureRegion createFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,int,int) -> createFromAsset
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,int,int,int,int) -> createTiledFromAsset
    org.anddev.andengine.opengl.texture.region.TextureRegion createFromResource(org.anddev.andengine.opengl.texture.Texture,android.content.Context,int,int,int) -> createFromResource
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromResource(org.anddev.andengine.opengl.texture.Texture,android.content.Context,int,int,int,int,int) -> createTiledFromResource
    org.anddev.andengine.opengl.texture.region.TextureRegion createFromSource(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,int,int) -> createFromSource
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,int,int,int,int) -> createTiledFromSource
    org.anddev.andengine.opengl.texture.region.TextureRegion createFromAsset(org.anddev.andengine.opengl.texture.BuildableTexture,android.content.Context,java.lang.String) -> createFromAsset
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAsset(org.anddev.andengine.opengl.texture.BuildableTexture,android.content.Context,java.lang.String,int,int) -> createTiledFromAsset
    org.anddev.andengine.opengl.texture.region.TextureRegion createFromResource(org.anddev.andengine.opengl.texture.BuildableTexture,android.content.Context,int) -> createFromResource
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromResource(org.anddev.andengine.opengl.texture.BuildableTexture,android.content.Context,int,int,int) -> createTiledFromResource
    org.anddev.andengine.opengl.texture.region.TextureRegion createFromSource(org.anddev.andengine.opengl.texture.BuildableTexture,org.anddev.andengine.opengl.texture.source.ITextureSource) -> createFromSource
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.anddev.andengine.opengl.texture.BuildableTexture,org.anddev.andengine.opengl.texture.source.ITextureSource,int,int) -> createTiledFromSource
org.anddev.andengine.opengl.texture.region.TextureRegionFactory$1 -> org.anddev.andengine.opengl.texture.region.a:
    org.anddev.andengine.opengl.texture.region.TextureRegion val$textureRegion -> a
    void onCallback(java.lang.Object) -> onCallback
org.anddev.andengine.opengl.texture.region.TextureRegionFactory$2 -> org.anddev.andengine.opengl.texture.region.b:
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion val$tiledTextureRegion -> a
    void onCallback(java.lang.Object) -> onCallback
org.anddev.andengine.opengl.texture.region.TextureRegionLibrary -> org.anddev.andengine.opengl.texture.region.TextureRegionLibrary:
    org.anddev.andengine.opengl.texture.region.TextureRegion get(int) -> get
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion getTiled(int) -> getTiled
    java.lang.Object get(int) -> get
org.anddev.andengine.opengl.texture.region.TiledTextureRegion -> org.anddev.andengine.opengl.texture.region.TiledTextureRegion:
    int mTileColumns -> mTileColumns
    int mTileRows -> mTileRows
    int mCurrentTileColumn -> mCurrentTileColumn
    int mCurrentTileRow -> mCurrentTileRow
    int mTileCount -> mTileCount
    void initTextureBuffer() -> initTextureBuffer
    int getTileCount() -> getTileCount
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
    int getCurrentTileColumn() -> getCurrentTileColumn
    int getCurrentTileRow() -> getCurrentTileRow
    int getCurrentTileIndex() -> getCurrentTileIndex
    void setCurrentTileIndex(int,int) -> setCurrentTileIndex
    void setCurrentTileIndex(int) -> setCurrentTileIndex
    float getTexturePositionOfCurrentTileX() -> getTexturePositionOfCurrentTileX
    float getTexturePositionOfCurrentTileY() -> getTexturePositionOfCurrentTileY
    org.anddev.andengine.opengl.texture.region.TiledTextureRegion clone() -> clone
    float getTextureCoordinateX1() -> getTextureCoordinateX1
    float getTextureCoordinateY1() -> getTextureCoordinateY1
    float getTextureCoordinateX2() -> getTextureCoordinateX2
    float getTextureCoordinateY2() -> getTextureCoordinateY2
    void nextTile() -> nextTile
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.region.buffer.SpriteBatchTextureRegionBuffer -> org.anddev.andengine.opengl.texture.region.buffer.SpriteBatchTextureRegionBuffer:
    int mIndex -> mIndex
    void setIndex(int) -> setIndex
    void add(org.anddev.andengine.opengl.texture.region.BaseTextureRegion) -> add
    void submit() -> submit
org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer -> org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer:
    org.anddev.andengine.opengl.texture.region.BaseTextureRegion mTextureRegion -> mTextureRegion
    boolean mFlippedVertical -> mFlippedVertical
    boolean mFlippedHorizontal -> mFlippedHorizontal
    org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion() -> getTextureRegion
    boolean isFlippedHorizontal() -> isFlippedHorizontal
    void setFlippedHorizontal(boolean) -> setFlippedHorizontal
    boolean isFlippedVertical() -> isFlippedVertical
    void setFlippedVertical(boolean) -> setFlippedVertical
    void update() -> update
org.anddev.andengine.opengl.texture.source.AssetTextureSource -> org.anddev.andengine.opengl.texture.source.AssetTextureSource:
    int mWidth -> mWidth
    int mHeight -> mHeight
    java.lang.String mAssetPath -> mAssetPath
    android.content.Context mContext -> mContext
    org.anddev.andengine.opengl.texture.source.AssetTextureSource clone() -> clone
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource -> org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource:
    int mWidth -> mWidth
    int mHeight -> mHeight
    org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource clone() -> clone
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.source.ExternalStorageFileTextureSource -> org.anddev.andengine.opengl.texture.source.ExternalStorageFileTextureSource:
org.anddev.andengine.opengl.texture.source.FileTextureSource -> org.anddev.andengine.opengl.texture.source.FileTextureSource:
    int mWidth -> mWidth
    int mHeight -> mHeight
    java.io.File mFile -> mFile
    org.anddev.andengine.opengl.texture.source.FileTextureSource clone() -> clone
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.source.ITextureSource -> org.anddev.andengine.opengl.texture.source.ITextureSource:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
org.anddev.andengine.opengl.texture.source.InternalStorageFileTextureSource -> org.anddev.andengine.opengl.texture.source.InternalStorageFileTextureSource:
org.anddev.andengine.opengl.texture.source.PictureTextureSource -> org.anddev.andengine.opengl.texture.source.PictureTextureSource:
    android.graphics.Picture mPicture -> mPicture
    int mWidth -> mWidth
    int mHeight -> mHeight
    org.anddev.andengine.opengl.texture.source.PictureTextureSource clone() -> clone
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.source.ResourceTextureSource -> org.anddev.andengine.opengl.texture.source.ResourceTextureSource:
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mDrawableResourceID -> mDrawableResourceID
    android.content.Context mContext -> mContext
    org.anddev.andengine.opengl.texture.source.ResourceTextureSource clone() -> clone
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator -> org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator:
    org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape mTextureSourceDecoratorShape -> mTextureSourceDecoratorShape
    org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone() -> clone
    void onDecorateBitmap(android.graphics.Canvas) -> onDecorateBitmap
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator -> org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator:
    org.anddev.andengine.opengl.texture.source.ITextureSource mTextureSource -> mTextureSource
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions mTextureSourceDecoratorOptions -> mTextureSourceDecoratorOptions
    android.graphics.Paint mPaint -> mPaint
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator clone() -> clone
    android.graphics.Paint getPaint() -> getPaint
    void setPaint(android.graphics.Paint) -> setPaint
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions getTextureSourceDecoratorOptions() -> getTextureSourceDecoratorOptions
    void setTextureSourceDecoratorOptions(org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions) -> setTextureSourceDecoratorOptions
    void onDecorateBitmap(android.graphics.Canvas) -> onDecorateBitmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    android.graphics.Bitmap ensureLoadedBitmapIsMutable(android.graphics.Bitmap) -> ensureLoadedBitmapIsMutable
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions -> org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions:
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions DEFAULT -> DEFAULT
    float mInsetLeft -> mInsetLeft
    float mInsetRight -> mInsetRight
    float mInsetTop -> mInsetTop
    float mInsetBottom -> mInsetBottom
    boolean mAntiAliasing -> mAntiAliasing
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions clone() -> clone
    boolean getAntiAliasing() -> getAntiAliasing
    float getInsetLeft() -> getInsetLeft
    float getInsetRight() -> getInsetRight
    float getInsetTop() -> getInsetTop
    float getInsetBottom() -> getInsetBottom
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setAntiAliasing(boolean) -> setAntiAliasing
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsetLeft(float) -> setInsetLeft
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsetRight(float) -> setInsetRight
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsetTop(float) -> setInsetTop
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsetBottom(float) -> setInsetBottom
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsets(float) -> setInsets
    org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsets(float,float,float,float) -> setInsets
    java.lang.Object clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator -> org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator:
    org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator clone() -> clone
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    org.anddev.andengine.opengl.texture.source.decorator.ColorSwapTextureSourceDecorator clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.ColorSwapTextureSourceDecorator -> org.anddev.andengine.opengl.texture.source.decorator.ColorSwapTextureSourceDecorator:
    int TOLERANCE_DEFAULT -> TOLERANCE_DEFAULT
    int mColorKeyColor -> mColorKeyColor
    int mTolerance -> mTolerance
    int mColorSwapColor -> mColorSwapColor
    org.anddev.andengine.opengl.texture.source.decorator.ColorSwapTextureSourceDecorator clone() -> clone
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator -> org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator:
    int mFillColor -> mFillColor
    org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator clone() -> clone
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator -> org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator:
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection mLinearGradientDirection -> mLinearGradientDirection
    int[] mColors -> mColors
    float[] mPositions -> mPositions
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator clone() -> clone
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection -> org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection:
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection LEFT_TO_RIGHT -> LEFT_TO_RIGHT
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection RIGHT_TO_LEFT -> RIGHT_TO_LEFT
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection BOTTOM_TO_TOP -> BOTTOM_TO_TOP
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection TOP_TO_BOTTOM -> TOP_TO_BOTTOM
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection TOPLEFT_TO_BOTTOMRIGHT -> TOPLEFT_TO_BOTTOMRIGHT
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection BOTTOMRIGHT_TO_TOPLEFT -> BOTTOMRIGHT_TO_TOPLEFT
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection TOPRIGHT_TO_BOTTOMLEFT -> TOPRIGHT_TO_BOTTOMLEFT
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection BOTTOMLEFT_TO_TOPRIGHT -> BOTTOMLEFT_TO_TOPRIGHT
    int mFromX -> mFromX
    int mFromY -> mFromY
    int mToX -> mToX
    int mToY -> mToY
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection[] ENUM$VALUES -> ENUM$VALUES
    int getFromX(int) -> getFromX
    int getFromY(int) -> getFromY
    int getToX(int) -> getToX
    int getToY(int) -> getToY
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection[] values() -> values
    org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection valueOf(java.lang.String) -> valueOf
org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator -> org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator:
    int mOutlineColor -> mOutlineColor
    org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator clone() -> clone
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone() -> clone
org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator -> org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator:
    float[] POSITIONS_DEFAULT -> POSITIONS_DEFAULT
    org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection mRadialGradientDirection -> mRadialGradientDirection
    int[] mColors -> mColors
    float[] mPositions -> mPositions
    int[] $SWITCH_TABLE$org$anddev$andengine$opengl$texture$source$decorator$RadialGradientFillTextureSourceDecorator$RadialGradientDirection -> $SWITCH_TABLE$org$anddev$andengine$opengl$texture$source$decorator$RadialGradientFillTextureSourceDecorator$RadialGradientDirection
    org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator clone() -> clone
    org.anddev.andengine.opengl.texture.source.ITextureSource clone() -> clone
    org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone() -> clone
    int[] $SWITCH_TABLE$org$anddev$andengine$opengl$texture$source$decorator$RadialGradientFillTextureSourceDecorator$RadialGradientDirection() -> $SWITCH_TABLE$org$anddev$andengine$opengl$texture$source$decorator$RadialGradientFillTextureSourceDecorator$RadialGradientDirection
org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection -> org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection:
    org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection INSIDE_OUT -> INSIDE_OUT
    org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection OUTSIDE_IN -> OUTSIDE_IN
    org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection[] ENUM$VALUES -> ENUM$VALUES
    org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection[] values() -> values
    org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection valueOf(java.lang.String) -> valueOf
org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape -> org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape:
    float STARTANGLE_DEFAULT -> STARTANGLE_DEFAULT
    float SWEEPANGLE_DEFAULT -> SWEEPANGLE_DEFAULT
    boolean USECENTER_DEFAULT -> USECENTER_DEFAULT
    org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    android.graphics.RectF mRectF -> mRectF
    float mStartAngle -> mStartAngle
    float mSweepAngle -> mSweepAngle
    boolean mUseCenter -> mUseCenter
    org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions) -> onDecorateBitmap
org.anddev.andengine.opengl.texture.source.decorator.shape.CircleTextureSourceDecoratorShape -> org.anddev.andengine.opengl.texture.source.decorator.shape.CircleTextureSourceDecoratorShape:
    org.anddev.andengine.opengl.texture.source.decorator.shape.CircleTextureSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    org.anddev.andengine.opengl.texture.source.decorator.shape.CircleTextureSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions) -> onDecorateBitmap
org.anddev.andengine.opengl.texture.source.decorator.shape.EllipseTextureSourceDecoratorShape -> org.anddev.andengine.opengl.texture.source.decorator.shape.EllipseTextureSourceDecoratorShape:
    org.anddev.andengine.opengl.texture.source.decorator.shape.EllipseTextureSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    android.graphics.RectF mRectF -> mRectF
    org.anddev.andengine.opengl.texture.source.decorator.shape.EllipseTextureSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions) -> onDecorateBitmap
org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape -> org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape:
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions) -> onDecorateBitmap
org.anddev.andengine.opengl.texture.source.decorator.shape.RectangleTextureSourceDecoratorShape -> org.anddev.andengine.opengl.texture.source.decorator.shape.RectangleTextureSourceDecoratorShape:
    org.anddev.andengine.opengl.texture.source.decorator.shape.RectangleTextureSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    org.anddev.andengine.opengl.texture.source.decorator.shape.RectangleTextureSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions) -> onDecorateBitmap
org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape -> org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape:
    float CORNER_RADIUS_DEFAULT -> CORNER_RADIUS_DEFAULT
    android.graphics.RectF mRectF -> mRectF
    float mCornerRadiusX -> mCornerRadiusX
    float mCornerRadiusY -> mCornerRadiusY
    org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions) -> onDecorateBitmap
org.anddev.andengine.opengl.util.FastFloatBuffer -> org.anddev.andengine.opengl.util.FastFloatBuffer:
    java.lang.ref.SoftReference sWeakIntArray -> sWeakIntArray
    java.nio.ByteBuffer mByteBuffer -> mByteBuffer
    java.nio.FloatBuffer mFloatBuffer -> mFloatBuffer
    java.nio.IntBuffer mIntBuffer -> mIntBuffer
    void flip() -> flip
    void put(float) -> put
    void put(float[]) -> put
    void put(int[]) -> put
    int[] convert(float[]) -> convert
    void put(org.anddev.andengine.opengl.util.FastFloatBuffer) -> put
    int capacity() -> capacity
    int position() -> position
    void position(int) -> position
    java.nio.FloatBuffer slice() -> slice
    int remaining() -> remaining
    int limit() -> limit
    void clear() -> clear
org.anddev.andengine.opengl.util.GLHelper -> org.anddev.andengine.opengl.util.GLHelper:
    int BYTES_PER_FLOAT -> BYTES_PER_FLOAT
    int BYTES_PER_PIXEL_RGBA -> BYTES_PER_PIXEL_RGBA
    boolean IS_LITTLE_ENDIAN -> IS_LITTLE_ENDIAN
    int[] HARDWARETEXTUREID_CONTAINER -> HARDWARETEXTUREID_CONTAINER
    int[] HARDWAREBUFFERID_CONTAINER -> HARDWAREBUFFERID_CONTAINER
    int sCurrentHardwareBufferID -> sCurrentHardwareBufferID
    int sCurrentHardwareTextureID -> sCurrentHardwareTextureID
    int sCurrentMatrix -> sCurrentMatrix
    int sCurrentSourceBlendMode -> sCurrentSourceBlendMode
    int sCurrentDestinationBlendMode -> sCurrentDestinationBlendMode
    org.anddev.andengine.opengl.util.FastFloatBuffer sCurrentTextureFloatBuffer -> sCurrentTextureFloatBuffer
    org.anddev.andengine.opengl.util.FastFloatBuffer sCurrentVertexFloatBuffer -> sCurrentVertexFloatBuffer
    boolean sEnableDither -> sEnableDither
    boolean sEnableLightning -> sEnableLightning
    boolean sEnableDepthTest -> sEnableDepthTest
    boolean sEnableMultisample -> sEnableMultisample
    boolean sEnableScissorTest -> sEnableScissorTest
    boolean sEnableBlend -> sEnableBlend
    boolean sEnableCulling -> sEnableCulling
    boolean sEnableTextures -> sEnableTextures
    boolean sEnableTexCoordArray -> sEnableTexCoordArray
    boolean sEnableVertexArray -> sEnableVertexArray
    float sLineWidth -> sLineWidth
    float sRed -> sRed
    float sGreen -> sGreen
    float sBlue -> sBlue
    float sAlpha -> sAlpha
    boolean EXTENSIONS_VERTEXBUFFEROBJECTS -> EXTENSIONS_VERTEXBUFFEROBJECTS
    boolean EXTENSIONS_DRAWTEXTURE -> EXTENSIONS_DRAWTEXTURE
    int[] $SWITCH_TABLE$org$anddev$andengine$opengl$texture$Texture$TextureFormat -> $SWITCH_TABLE$org$anddev$andengine$opengl$texture$Texture$TextureFormat
    void reset(javax.microedition.khronos.opengles.GL10) -> reset
    void enableExtensions(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.options.RenderOptions) -> enableExtensions
    void hackBrokenDevices() -> hackBrokenDevices
    void setColor(javax.microedition.khronos.opengles.GL10,float,float,float,float) -> setColor
    void enableVertexArray(javax.microedition.khronos.opengles.GL10) -> enableVertexArray
    void disableVertexArray(javax.microedition.khronos.opengles.GL10) -> disableVertexArray
    void enableTexCoordArray(javax.microedition.khronos.opengles.GL10) -> enableTexCoordArray
    void disableTexCoordArray(javax.microedition.khronos.opengles.GL10) -> disableTexCoordArray
    void enableScissorTest(javax.microedition.khronos.opengles.GL10) -> enableScissorTest
    void disableScissorTest(javax.microedition.khronos.opengles.GL10) -> disableScissorTest
    void enableBlend(javax.microedition.khronos.opengles.GL10) -> enableBlend
    void disableBlend(javax.microedition.khronos.opengles.GL10) -> disableBlend
    void enableCulling(javax.microedition.khronos.opengles.GL10) -> enableCulling
    void disableCulling(javax.microedition.khronos.opengles.GL10) -> disableCulling
    void enableTextures(javax.microedition.khronos.opengles.GL10) -> enableTextures
    void disableTextures(javax.microedition.khronos.opengles.GL10) -> disableTextures
    void enableLightning(javax.microedition.khronos.opengles.GL10) -> enableLightning
    void disableLightning(javax.microedition.khronos.opengles.GL10) -> disableLightning
    void enableDither(javax.microedition.khronos.opengles.GL10) -> enableDither
    void disableDither(javax.microedition.khronos.opengles.GL10) -> disableDither
    void enableDepthTest(javax.microedition.khronos.opengles.GL10) -> enableDepthTest
    void disableDepthTest(javax.microedition.khronos.opengles.GL10) -> disableDepthTest
    void enableMultisample(javax.microedition.khronos.opengles.GL10) -> enableMultisample
    void disableMultisample(javax.microedition.khronos.opengles.GL10) -> disableMultisample
    void bindBuffer(javax.microedition.khronos.opengles.GL11,int) -> bindBuffer
    void deleteBuffer(javax.microedition.khronos.opengles.GL11,int) -> deleteBuffer
    void bindTexture(javax.microedition.khronos.opengles.GL10,int) -> bindTexture
    void deleteTexture(javax.microedition.khronos.opengles.GL10,int) -> deleteTexture
    void texCoordPointer(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.opengl.util.FastFloatBuffer) -> texCoordPointer
    void texCoordZeroPointer(javax.microedition.khronos.opengles.GL11) -> texCoordZeroPointer
    void vertexPointer(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.opengl.util.FastFloatBuffer) -> vertexPointer
    void vertexZeroPointer(javax.microedition.khronos.opengles.GL11) -> vertexZeroPointer
    void blendFunction(javax.microedition.khronos.opengles.GL10,int,int) -> blendFunction
    void lineWidth(javax.microedition.khronos.opengles.GL10,float) -> lineWidth
    void switchToModelViewMatrix(javax.microedition.khronos.opengles.GL10) -> switchToModelViewMatrix
    void switchToProjectionMatrix(javax.microedition.khronos.opengles.GL10) -> switchToProjectionMatrix
    void setProjectionIdentityMatrix(javax.microedition.khronos.opengles.GL10) -> setProjectionIdentityMatrix
    void setModelViewIdentityMatrix(javax.microedition.khronos.opengles.GL10) -> setModelViewIdentityMatrix
    void setShadeModelFlat(javax.microedition.khronos.opengles.GL10) -> setShadeModelFlat
    void setPerspectiveCorrectionHintFastest(javax.microedition.khronos.opengles.GL10) -> setPerspectiveCorrectionHintFastest
    void bufferData(javax.microedition.khronos.opengles.GL11,java.nio.ByteBuffer,int) -> bufferData
    void glTexSubImage2D(javax.microedition.khronos.opengles.GL10,int,int,int,int,android.graphics.Bitmap,int,int,org.anddev.andengine.opengl.texture.Texture$TextureFormat) -> glTexSubImage2D
    int[] convertARGB_8888toRGBA_8888(int[]) -> convertARGB_8888toRGBA_8888
    byte[] convertARGB_8888toRGB_565(int[]) -> convertARGB_8888toRGB_565
    int[] getPixelsARGB_8888(android.graphics.Bitmap) -> getPixelsARGB_8888
    int[] $SWITCH_TABLE$org$anddev$andengine$opengl$texture$Texture$TextureFormat() -> $SWITCH_TABLE$org$anddev$andengine$opengl$texture$Texture$TextureFormat
org.anddev.andengine.opengl.vertex.LineVertexBuffer -> org.anddev.andengine.opengl.vertex.LineVertexBuffer:
    int VERTICES_PER_LINE -> VERTICES_PER_LINE
    void update(float,float,float,float) -> update
org.anddev.andengine.opengl.vertex.RectangleVertexBuffer -> org.anddev.andengine.opengl.vertex.RectangleVertexBuffer:
    int VERTICES_PER_RECTANGLE -> VERTICES_PER_RECTANGLE
    int FLOAT_TO_RAW_INT_BITS_ZERO -> FLOAT_TO_RAW_INT_BITS_ZERO
    void update(float,float) -> update
org.anddev.andengine.opengl.vertex.SpriteBatchVertexBuffer -> org.anddev.andengine.opengl.vertex.SpriteBatchVertexBuffer:
    int VERTICES_PER_RECTANGLE -> VERTICES_PER_RECTANGLE
    float[] VERTICES_TMP -> VERTICES_TMP
    org.anddev.andengine.util.Transformation TRANSFORATION_TMP -> TRANSFORATION_TMP
    int mIndex -> mIndex
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    void add(float,float,float,float,float) -> add
    void add(float,float,float,float,float,float) -> add
    void add(float,float,float,float,float,float,float) -> add
    void add(float,float,org.anddev.andengine.util.Transformation) -> add
    void add(float,float,float,float) -> add
    void addInner(float,float,float,float) -> addInner
    void addInner(float,float,float,float,float,float,float,float) -> addInner
    void submit() -> submit
org.anddev.andengine.opengl.vertex.TextVertexBuffer -> org.anddev.andengine.opengl.vertex.TextVertexBuffer:
    int VERTICES_PER_CHARACTER -> VERTICES_PER_CHARACTER
    org.anddev.andengine.util.HorizontalAlign mHorizontalAlign -> mHorizontalAlign
    int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign
    void update(org.anddev.andengine.opengl.font.Font,int,int[],java.lang.String[]) -> update
    int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign
org.anddev.andengine.opengl.vertex.VertexBuffer -> org.anddev.andengine.opengl.vertex.VertexBuffer:
org.anddev.andengine.opengl.view.BaseConfigChooser -> org.anddev.andengine.opengl.view.b:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
org.anddev.andengine.opengl.view.ComponentSizeChooser -> org.anddev.andengine.opengl.view.ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
org.anddev.andengine.opengl.view.EGLConfigChooser -> org.anddev.andengine.opengl.view.EGLConfigChooser:
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
org.anddev.andengine.opengl.view.GLSurfaceView -> org.anddev.andengine.opengl.view.GLSurfaceView:
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    java.util.concurrent.Semaphore sEglSemaphore -> sEglSemaphore
    org.anddev.andengine.opengl.view.GLSurfaceView$GLThread mGLThread -> mGLThread
    org.anddev.andengine.opengl.view.EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    org.anddev.andengine.opengl.view.GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mRenderMode -> mRenderMode
    org.anddev.andengine.opengl.view.GLSurfaceView$Renderer mRenderer -> mRenderer
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mHasSurface -> mHasSurface
    void init() -> init
    void setGLWrapper(org.anddev.andengine.opengl.view.GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(org.anddev.andengine.opengl.view.GLSurfaceView$Renderer) -> setRenderer
    void setEGLConfigChooser(org.anddev.andengine.opengl.view.EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    java.util.concurrent.Semaphore access$0() -> access$0
    org.anddev.andengine.opengl.view.EGLConfigChooser access$1(org.anddev.andengine.opengl.view.GLSurfaceView) -> access$1
    org.anddev.andengine.opengl.view.GLWrapper access$2(org.anddev.andengine.opengl.view.GLSurfaceView) -> access$2
org.anddev.andengine.opengl.view.GLSurfaceView$EglHelper -> org.anddev.andengine.opengl.view.c:
    javax.microedition.khronos.egl.EGL10 mEgl -> a
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> b
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> c
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> d
    javax.microedition.khronos.egl.EGLContext mEglContext -> e
    org.anddev.andengine.opengl.view.GLSurfaceView this$0 -> f
    void start() -> a
    void finish() -> b
org.anddev.andengine.opengl.view.GLSurfaceView$GLThread -> org.anddev.andengine.opengl.view.d:
    boolean mDone -> a
    boolean mPaused -> b
    boolean mHasSurface -> c
    int mWidth -> d
    int mHeight -> e
    int mRenderMode -> f
    boolean mRequestRender -> g
    org.anddev.andengine.opengl.view.GLSurfaceView$Renderer mRenderer -> h
    java.util.ArrayList mEventQueue -> i
    org.anddev.andengine.opengl.view.GLSurfaceView$EglHelper mEglHelper -> j
    boolean mSizeChanged -> k
    org.anddev.andengine.opengl.view.GLSurfaceView this$0 -> l
    void run() -> run
    void setRenderMode(int) -> a
    void requestRender() -> a
    void surfaceCreated() -> b
    void surfaceDestroyed() -> c
    void onPause() -> d
    void onResume() -> e
    void onWindowResize(int,int) -> a
    void requestExitAndWait() -> f
    void queueEvent(java.lang.Runnable) -> a
    java.lang.Runnable getEvent() -> g
org.anddev.andengine.opengl.view.GLSurfaceView$Renderer -> org.anddev.andengine.opengl.view.GLSurfaceView$Renderer:
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
org.anddev.andengine.opengl.view.GLWrapper -> org.anddev.andengine.opengl.view.GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
org.anddev.andengine.opengl.view.RenderSurfaceView -> org.anddev.andengine.opengl.view.RenderSurfaceView:
    org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer mRenderer -> mRenderer
    void setRenderer(org.anddev.andengine.engine.Engine) -> setRenderer
    void onMeasure(int,int) -> onMeasure
    void setMeasuredDimensionProxy(int,int) -> setMeasuredDimensionProxy
org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer -> org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer:
    org.anddev.andengine.engine.Engine mEngine -> mEngine
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    org.anddev.andengine.engine.Engine access$0(org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer) -> access$0
org.anddev.andengine.opengl.view.SimpleEGLConfigChooser -> org.anddev.andengine.opengl.view.a:
org.anddev.andengine.sensor.BaseSensorData -> org.anddev.andengine.sensor.BaseSensorData:
    float[] mValues -> mValues
    int mAccuracy -> mAccuracy
    int mDisplayRotation -> mDisplayRotation
    float[] getValues() -> getValues
    void setValues(float[]) -> setValues
    void setAccuracy(int) -> setAccuracy
    int getAccuracy() -> getAccuracy
    java.lang.String toString() -> toString
org.anddev.andengine.sensor.SensorDelay -> org.anddev.andengine.sensor.SensorDelay:
    org.anddev.andengine.sensor.SensorDelay NORMAL -> NORMAL
    org.anddev.andengine.sensor.SensorDelay UI -> UI
    org.anddev.andengine.sensor.SensorDelay GAME -> GAME
    org.anddev.andengine.sensor.SensorDelay FASTEST -> FASTEST
    int mDelay -> mDelay
    org.anddev.andengine.sensor.SensorDelay[] ENUM$VALUES -> ENUM$VALUES
    int getDelay() -> getDelay
    org.anddev.andengine.sensor.SensorDelay[] values() -> values
    org.anddev.andengine.sensor.SensorDelay valueOf(java.lang.String) -> valueOf
org.anddev.andengine.sensor.accelerometer.AccelerometerData -> org.anddev.andengine.sensor.accelerometer.AccelerometerData:
    org.anddev.andengine.sensor.accelerometer.AccelerometerData$IAxisSwap[] AXISSWAPS -> AXISSWAPS
    float getX() -> getX
    float getY() -> getY
    float getZ() -> getZ
    void setX(float) -> setX
    void setY(float) -> setY
    void setZ(float) -> setZ
    void setValues(float[]) -> setValues
    java.lang.String toString() -> toString
org.anddev.andengine.sensor.accelerometer.AccelerometerData$1 -> org.anddev.andengine.sensor.accelerometer.a:
    void swapAxis(float[]) -> a
org.anddev.andengine.sensor.accelerometer.AccelerometerData$2 -> org.anddev.andengine.sensor.accelerometer.b:
    void swapAxis(float[]) -> a
org.anddev.andengine.sensor.accelerometer.AccelerometerData$3 -> org.anddev.andengine.sensor.accelerometer.c:
    void swapAxis(float[]) -> a
org.anddev.andengine.sensor.accelerometer.AccelerometerData$4 -> org.anddev.andengine.sensor.accelerometer.d:
    void swapAxis(float[]) -> a
org.anddev.andengine.sensor.accelerometer.AccelerometerData$IAxisSwap -> org.anddev.andengine.sensor.accelerometer.e:
    void swapAxis(float[]) -> a
org.anddev.andengine.sensor.accelerometer.AccelerometerSensorOptions -> org.anddev.andengine.sensor.accelerometer.AccelerometerSensorOptions:
    org.anddev.andengine.sensor.SensorDelay mSensorDelay -> mSensorDelay
    org.anddev.andengine.sensor.SensorDelay getSensorDelay() -> getSensorDelay
org.anddev.andengine.sensor.accelerometer.IAccelerometerListener -> org.anddev.andengine.sensor.accelerometer.IAccelerometerListener:
    void onAccelerometerChanged(org.anddev.andengine.sensor.accelerometer.AccelerometerData) -> onAccelerometerChanged
org.anddev.andengine.sensor.location.ILocationListener -> org.anddev.andengine.sensor.location.ILocationListener:
    void onLocationProviderEnabled() -> onLocationProviderEnabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onLocationLost() -> onLocationLost
    void onLocationProviderDisabled() -> onLocationProviderDisabled
    void onLocationProviderStatusChanged(org.anddev.andengine.sensor.location.LocationProviderStatus,android.os.Bundle) -> onLocationProviderStatusChanged
org.anddev.andengine.sensor.location.LocationProviderStatus -> org.anddev.andengine.sensor.location.LocationProviderStatus:
    org.anddev.andengine.sensor.location.LocationProviderStatus AVAILABLE -> AVAILABLE
    org.anddev.andengine.sensor.location.LocationProviderStatus OUT_OF_SERVICE -> OUT_OF_SERVICE
    org.anddev.andengine.sensor.location.LocationProviderStatus TEMPORARILY_UNAVAILABLE -> TEMPORARILY_UNAVAILABLE
    org.anddev.andengine.sensor.location.LocationProviderStatus[] ENUM$VALUES -> ENUM$VALUES
    org.anddev.andengine.sensor.location.LocationProviderStatus[] values() -> values
    org.anddev.andengine.sensor.location.LocationProviderStatus valueOf(java.lang.String) -> valueOf
org.anddev.andengine.sensor.location.LocationSensorOptions -> org.anddev.andengine.sensor.location.LocationSensorOptions:
    long MINIMUMTRIGGERTIME_DEFAULT -> MINIMUMTRIGGERTIME_DEFAULT
    long MINIMUMTRIGGERDISTANCE_DEFAULT -> MINIMUMTRIGGERDISTANCE_DEFAULT
    boolean mEnabledOnly -> mEnabledOnly
    long mMinimumTriggerTime -> mMinimumTriggerTime
    long mMinimumTriggerDistance -> mMinimumTriggerDistance
    void setEnabledOnly(boolean) -> setEnabledOnly
    boolean isEnabledOnly() -> isEnabledOnly
    long getMinimumTriggerTime() -> getMinimumTriggerTime
    void setMinimumTriggerTime(long) -> setMinimumTriggerTime
    long getMinimumTriggerDistance() -> getMinimumTriggerDistance
    void setMinimumTriggerDistance(long) -> setMinimumTriggerDistance
org.anddev.andengine.sensor.orientation.IOrientationListener -> org.anddev.andengine.sensor.orientation.IOrientationListener:
    void onOrientationChanged(org.anddev.andengine.sensor.orientation.OrientationData) -> onOrientationChanged
org.anddev.andengine.sensor.orientation.OrientationData -> org.anddev.andengine.sensor.orientation.OrientationData:
    float[] mAccelerometerValues -> mAccelerometerValues
    float[] mMagneticFieldValues -> mMagneticFieldValues
    float[] mRotationMatrix -> mRotationMatrix
    int mMagneticFieldAccuracy -> mMagneticFieldAccuracy
    float getRoll() -> getRoll
    float getPitch() -> getPitch
    float getYaw() -> getYaw
    void setValues(float[]) -> setValues
    void setAccuracy(int) -> setAccuracy
    void setAccelerometerValues(float[]) -> setAccelerometerValues
    void setMagneticFieldValues(float[]) -> setMagneticFieldValues
    void updateOrientation() -> updateOrientation
    int getAccelerometerAccuracy() -> getAccelerometerAccuracy
    void setAccelerometerAccuracy(int) -> setAccelerometerAccuracy
    int getMagneticFieldAccuracy() -> getMagneticFieldAccuracy
    void setMagneticFieldAccuracy(int) -> setMagneticFieldAccuracy
    java.lang.String toString() -> toString
org.anddev.andengine.sensor.orientation.OrientationSensorOptions -> org.anddev.andengine.sensor.orientation.OrientationSensorOptions:
    org.anddev.andengine.sensor.SensorDelay mSensorDelay -> mSensorDelay
    org.anddev.andengine.sensor.SensorDelay getSensorDelay() -> getSensorDelay
org.anddev.andengine.ui.IGameInterface -> org.anddev.andengine.ui.IGameInterface:
    org.anddev.andengine.engine.Engine onLoadEngine() -> onLoadEngine
    void onLoadResources() -> onLoadResources
    void onUnloadResources() -> onUnloadResources
    org.anddev.andengine.entity.scene.Scene onLoadScene() -> onLoadScene
    void onLoadComplete() -> onLoadComplete
    void onPauseGame() -> onPauseGame
    void onResumeGame() -> onResumeGame
org.anddev.andengine.ui.activity.BaseActivity -> org.anddev.andengine.ui.activity.BaseActivity:
    void doAsync(int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback) -> doAsync
    void doAsync(int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback) -> doAsync
    void doProgressAsync(int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback) -> doProgressAsync
    void doProgressAsync(int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback) -> doProgressAsync
    void doAsync(int,int,org.anddev.andengine.util.AsyncCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback) -> doAsync
org.anddev.andengine.ui.activity.BaseActivity$CancelledException -> org.anddev.andengine.ui.activity.BaseActivity$CancelledException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.ui.activity.BaseGameActivity -> org.anddev.andengine.ui.activity.BaseGameActivity:
    org.anddev.andengine.engine.Engine mEngine -> mEngine
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    org.anddev.andengine.opengl.view.RenderSurfaceView mRenderSurfaceView -> mRenderSurfaceView
    boolean mHasWindowFocused -> mHasWindowFocused
    boolean mPaused -> mPaused
    boolean mGameLoaded -> mGameLoaded
    int[] $SWITCH_TABLE$org$anddev$andengine$engine$options$EngineOptions$ScreenOrientation -> $SWITCH_TABLE$org$anddev$andengine$engine$options$EngineOptions$ScreenOrientation
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onUnloadResources() -> onUnloadResources
    org.anddev.andengine.engine.Engine getEngine() -> getEngine
    org.anddev.andengine.audio.sound.SoundManager getSoundManager() -> getSoundManager
    org.anddev.andengine.audio.music.MusicManager getMusicManager() -> getMusicManager
    void onResumeGame() -> onResumeGame
    void onPauseGame() -> onPauseGame
    void doResume() -> doResume
    void doPause() -> doPause
    void runOnUpdateThread(java.lang.Runnable) -> runOnUpdateThread
    void onSetContentView() -> onSetContentView
    void acquireWakeLock(org.anddev.andengine.engine.options.WakeLockOptions) -> acquireWakeLock
    void releaseWakeLock() -> releaseWakeLock
    void applyEngineOptions(org.anddev.andengine.engine.options.EngineOptions) -> applyEngineOptions
    android.widget.FrameLayout$LayoutParams createSurfaceViewLayoutParams() -> createSurfaceViewLayoutParams
    void enableVibrator() -> enableVibrator
    void enableLocationSensor(org.anddev.andengine.sensor.location.ILocationListener,org.anddev.andengine.sensor.location.LocationSensorOptions) -> enableLocationSensor
    void disableLocationSensor() -> disableLocationSensor
    boolean enableAccelerometerSensor(org.anddev.andengine.sensor.accelerometer.IAccelerometerListener) -> enableAccelerometerSensor
    boolean enableAccelerometerSensor(org.anddev.andengine.sensor.accelerometer.IAccelerometerListener,org.anddev.andengine.sensor.accelerometer.AccelerometerSensorOptions) -> enableAccelerometerSensor
    boolean disableAccelerometerSensor() -> disableAccelerometerSensor
    boolean enableOrientationSensor(org.anddev.andengine.sensor.orientation.IOrientationListener) -> enableOrientationSensor
    boolean enableOrientationSensor(org.anddev.andengine.sensor.orientation.IOrientationListener,org.anddev.andengine.sensor.orientation.OrientationSensorOptions) -> enableOrientationSensor
    boolean disableOrientationSensor() -> disableOrientationSensor
    int[] $SWITCH_TABLE$org$anddev$andengine$engine$options$EngineOptions$ScreenOrientation() -> $SWITCH_TABLE$org$anddev$andengine$engine$options$EngineOptions$ScreenOrientation
org.anddev.andengine.ui.activity.BaseSplashActivity -> org.anddev.andengine.ui.activity.BaseSplashActivity:
    org.anddev.andengine.engine.camera.Camera mCamera -> mCamera
    org.anddev.andengine.opengl.texture.source.ITextureSource mSplashTextureSource -> mSplashTextureSource
    org.anddev.andengine.opengl.texture.region.TextureRegion mLoadingScreenTextureRegion -> mLoadingScreenTextureRegion
    org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation getScreenOrientation() -> getScreenOrientation
    org.anddev.andengine.opengl.texture.source.ITextureSource onGetSplashTextureSource() -> onGetSplashTextureSource
    float getSplashDuration() -> getSplashDuration
    java.lang.Class getFollowUpActivity() -> getFollowUpActivity
    float getSplashScaleFrom() -> getSplashScaleFrom
    float getSplashScaleTo() -> getSplashScaleTo
    void onLoadComplete() -> onLoadComplete
    org.anddev.andengine.engine.Engine onLoadEngine() -> onLoadEngine
    void onLoadResources() -> onLoadResources
    org.anddev.andengine.entity.scene.Scene onLoadScene() -> onLoadScene
    org.anddev.andengine.engine.camera.Camera getSplashCamera(int,int) -> getSplashCamera
    org.anddev.andengine.engine.options.resolutionpolicy.IResolutionPolicy getSplashResolutionPolicy(int,int) -> getSplashResolutionPolicy
org.anddev.andengine.ui.activity.BaseSplashActivity$1 -> org.anddev.andengine.ui.activity.a:
    org.anddev.andengine.ui.activity.BaseSplashActivity this$0 -> a
    void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler) -> onTimePassed
org.anddev.andengine.ui.activity.LayoutGameActivity -> org.anddev.andengine.ui.activity.LayoutGameActivity:
    int getLayoutID() -> getLayoutID
    int getRenderSurfaceViewID() -> getRenderSurfaceViewID
    void onSetContentView() -> onSetContentView
org.anddev.andengine.ui.dialog.GenericInputDialogBuilder -> org.anddev.andengine.ui.dialog.GenericInputDialogBuilder:
    org.anddev.andengine.util.Callback mSuccessCallback -> mSuccessCallback
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> mOnCancelListener
    int mTitleResID -> mTitleResID
    int mMessageResID -> mMessageResID
    int mIconResID -> mIconResID
    android.content.Context mContext -> mContext
    int mErrorResID -> mErrorResID
    java.lang.String mDefaultText -> mDefaultText
    java.lang.Object generateResult(java.lang.String) -> generateResult
    android.app.Dialog create() -> create
    void setView(android.app.AlertDialog$Builder,android.widget.EditText) -> setView
    int access$0(org.anddev.andengine.ui.dialog.GenericInputDialogBuilder) -> access$0
org.anddev.andengine.ui.dialog.GenericInputDialogBuilder$1 -> org.anddev.andengine.ui.dialog.a:
    org.anddev.andengine.ui.dialog.GenericInputDialogBuilder this$0 -> a
    android.widget.EditText val$etInput -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.anddev.andengine.ui.dialog.GenericInputDialogBuilder$2 -> org.anddev.andengine.ui.dialog.b:
    org.anddev.andengine.ui.dialog.GenericInputDialogBuilder this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.anddev.andengine.ui.dialog.StringInputDialogBuilder -> org.anddev.andengine.ui.dialog.StringInputDialogBuilder:
    java.lang.String generateResult(java.lang.String) -> generateResult
    java.lang.Object generateResult(java.lang.String) -> generateResult
org.anddev.andengine.util.ActivityUtils -> org.anddev.andengine.util.ActivityUtils:
    void requestFullscreen(android.app.Activity) -> requestFullscreen
    void setScreenBrightness(android.app.Activity,float) -> setScreenBrightness
    void keepScreenOn(android.app.Activity) -> keepScreenOn
    void doAsync(android.content.Context,int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.util.concurrent.Callable,org.anddev.andengine.util.Callback) -> doAsync
    void doAsync(android.content.Context,int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,boolean) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,boolean) -> doAsync
    void doAsync(android.content.Context,int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback) -> doAsync
    void doAsync(android.content.Context,int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback,boolean) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback,boolean) -> doAsync
    void doProgressAsync(android.content.Context,int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback) -> doProgressAsync
    void doProgressAsync(android.content.Context,int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback) -> doProgressAsync
    void doAsync(android.content.Context,int,int,org.anddev.andengine.util.AsyncCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback) -> doAsync
org.anddev.andengine.util.ActivityUtils$1 -> org.anddev.andengine.util.k:
    android.app.ProgressDialog mPD -> a
    java.lang.Exception mException -> b
    android.content.Context val$pContext -> c
    java.lang.CharSequence val$pTitle -> d
    java.lang.CharSequence val$pMessage -> e
    boolean val$pCancelable -> f
    java.util.concurrent.Callable val$pCallable -> g
    org.anddev.andengine.util.Callback val$pCallback -> h
    org.anddev.andengine.util.Callback val$pExceptionCallback -> i
    void onPreExecute() -> onPreExecute
    java.lang.Object doInBackground$532ebdd5() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.anddev.andengine.util.ActivityUtils$1$1 -> org.anddev.andengine.util.c:
    org.anddev.andengine.util.ActivityUtils$1 this$1 -> a
    org.anddev.andengine.util.Callback val$pExceptionCallback -> b
    void onCancel(android.content.DialogInterface) -> onCancel
org.anddev.andengine.util.ActivityUtils$2 -> org.anddev.andengine.util.j:
    android.app.ProgressDialog mPD -> a
    java.lang.Exception mException -> b
    android.content.Context val$pContext -> c
    int val$pTitleResID -> d
    org.anddev.andengine.util.progress.ProgressCallable val$pCallable -> e
    org.anddev.andengine.util.Callback val$pCallback -> f
    org.anddev.andengine.util.Callback val$pExceptionCallback -> g
    void onPreExecute() -> onPreExecute
    java.lang.Object doInBackground$532ebdd5() -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
org.anddev.andengine.util.ActivityUtils$2$1 -> org.anddev.andengine.util.h:
    org.anddev.andengine.util.ActivityUtils$2 this$1 -> a
    void onProgressChanged(int) -> onProgressChanged
org.anddev.andengine.util.ActivityUtils$3 -> org.anddev.andengine.util.l:
    android.app.ProgressDialog val$pd -> a
    org.anddev.andengine.util.Callback val$pCallback -> b
    void onCallback(java.lang.Object) -> onCallback
org.anddev.andengine.util.ArrayUtils -> org.anddev.andengine.util.ArrayUtils:
    java.lang.Object random(java.lang.Object[]) -> random
    void reverse(byte[]) -> reverse
    void reverse(short[]) -> reverse
    void reverse(int[]) -> reverse
    void reverse(long[]) -> reverse
    void reverse(float[]) -> reverse
    void reverse(double[]) -> reverse
    void reverse(java.lang.Object[]) -> reverse
    boolean equals(byte[],int,byte[],int,int) -> equals
org.anddev.andengine.util.AsyncCallable -> org.anddev.andengine.util.AsyncCallable:
    void call(org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback) -> call
org.anddev.andengine.util.Base64 -> org.anddev.andengine.util.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
org.anddev.andengine.util.Base64$Coder -> org.anddev.andengine.util.d:
    byte[] output -> d
    int op -> e
    boolean process(byte[],int,int,boolean) -> a
    int maxOutputSize$134621() -> a
org.anddev.andengine.util.Base64$Decoder -> org.anddev.andengine.util.b:
    int[] DECODE -> a
    int[] DECODE_WEBSAFE -> b
    int state -> c
    int value -> f
    int[] alphabet -> g
    int maxOutputSize$134621() -> a
    boolean process(byte[],int,int,boolean) -> a
org.anddev.andengine.util.Base64$Encoder -> org.anddev.andengine.util.a:
    byte[] ENCODE -> f
    byte[] ENCODE_WEBSAFE -> g
    byte[] tail -> h
    int tailLen -> i
    int count -> j
    boolean do_padding -> a
    boolean do_newline -> b
    boolean do_cr -> c
    byte[] alphabet -> k
    boolean $assertionsDisabled -> l
    int maxOutputSize$134621() -> a
    boolean process(byte[],int,int,boolean) -> a
org.anddev.andengine.util.Base64InputStream -> org.anddev.andengine.util.Base64InputStream:
    org.anddev.andengine.util.Base64$Coder coder -> coder
    byte[] EMPTY -> EMPTY
    int BUFFER_SIZE -> BUFFER_SIZE
    boolean eof -> eof
    byte[] inputBuffer -> inputBuffer
    int outputStart -> outputStart
    int outputEnd -> outputEnd
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void close() -> close
    int available() -> available
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
    void refill() -> refill
org.anddev.andengine.util.BetaUtils -> org.anddev.andengine.util.BetaUtils:
    java.lang.String PREFERENCES_BETAUTILS_ID -> PREFERENCES_BETAUTILS_ID
    boolean finishWhenExpired(android.app.Activity,java.util.GregorianCalendar,int,int) -> finishWhenExpired
    boolean finishWhenExpired(android.app.Activity,java.util.GregorianCalendar,int,int,android.content.Intent,android.content.Intent) -> finishWhenExpired
org.anddev.andengine.util.BetaUtils$1 -> org.anddev.andengine.util.e:
    android.content.Intent val$pOkIntent -> a
    android.app.Activity val$pActivity -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.anddev.andengine.util.BetaUtils$2 -> org.anddev.andengine.util.f:
    android.content.Intent val$pCancelIntent -> a
    android.app.Activity val$pActivity -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.anddev.andengine.util.Callable -> org.anddev.andengine.util.Callable:
    java.lang.Object call() -> call
org.anddev.andengine.util.Callback -> org.anddev.andengine.util.Callback:
    void onCallback(java.lang.Object) -> onCallback
org.anddev.andengine.util.ColorUtils -> org.anddev.andengine.util.ColorUtils:
    float[] HSV_TO_COLOR -> HSV_TO_COLOR
    int HSV_TO_COLOR_HUE_INDEX -> HSV_TO_COLOR_HUE_INDEX
    int HSV_TO_COLOR_SATURATION_INDEX -> HSV_TO_COLOR_SATURATION_INDEX
    int HSV_TO_COLOR_VALUE_INDEX -> HSV_TO_COLOR_VALUE_INDEX
    int COLOR_FLOAT_TO_INT_FACTOR -> COLOR_FLOAT_TO_INT_FACTOR
    int HSVToColor(float,float,float) -> HSVToColor
    int RGBToColor(float,float,float) -> RGBToColor
org.anddev.andengine.util.DataUtils -> org.anddev.andengine.util.DataUtils:
    int unsignedByteToInt(byte) -> unsignedByteToInt
org.anddev.andengine.util.Debug -> org.anddev.andengine.util.Debug:
    java.lang.String sDebugTag -> sDebugTag
    org.anddev.andengine.util.Debug$DebugLevel sDebugLevel -> sDebugLevel
    java.lang.String getDebugTag() -> getDebugTag
    void setDebugTag(java.lang.String) -> setDebugTag
    org.anddev.andengine.util.Debug$DebugLevel getDebugLevel() -> getDebugLevel
    void setDebugLevel(org.anddev.andengine.util.Debug$DebugLevel) -> setDebugLevel
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String) -> w
    void w(java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String) -> e
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
org.anddev.andengine.util.Debug$DebugLevel -> org.anddev.andengine.util.Debug$DebugLevel:
    org.anddev.andengine.util.Debug$DebugLevel NONE -> NONE
    org.anddev.andengine.util.Debug$DebugLevel ERROR -> ERROR
    org.anddev.andengine.util.Debug$DebugLevel WARNING -> WARNING
    org.anddev.andengine.util.Debug$DebugLevel INFO -> INFO
    org.anddev.andengine.util.Debug$DebugLevel DEBUG -> DEBUG
    org.anddev.andengine.util.Debug$DebugLevel VERBOSE -> VERBOSE
    org.anddev.andengine.util.Debug$DebugLevel ALL -> ALL
    org.anddev.andengine.util.Debug$DebugLevel[] ENUM$VALUES -> ENUM$VALUES
    boolean isSameOrLessThan(org.anddev.andengine.util.Debug$DebugLevel) -> isSameOrLessThan
    org.anddev.andengine.util.Debug$DebugLevel[] values() -> values
    org.anddev.andengine.util.Debug$DebugLevel valueOf(java.lang.String) -> valueOf
    boolean access$2(org.anddev.andengine.util.Debug$DebugLevel,org.anddev.andengine.util.Debug$DebugLevel) -> access$2
org.anddev.andengine.util.DialogUtils -> org.anddev.andengine.util.DialogUtils:
    void keepScreenOn(android.app.Dialog) -> keepScreenOn
org.anddev.andengine.util.FileUtils -> org.anddev.andengine.util.FileUtils:
    void copyToExternalStorage(android.content.Context,int,java.lang.String) -> copyToExternalStorage
    void copyToInternalStorage(android.content.Context,int,java.lang.String) -> copyToInternalStorage
    void copyToExternalStorage(android.content.Context,java.lang.String,java.lang.String) -> copyToExternalStorage
    void copyToInternalStorage(android.content.Context,java.lang.String,java.lang.String) -> copyToInternalStorage
    void copyToInternalStorage(android.content.Context,java.io.InputStream,java.lang.String) -> copyToInternalStorage
    void copyToExternalStorage(android.content.Context,java.io.InputStream,java.lang.String) -> copyToExternalStorage
    boolean isFileExistingOnExternalStorage(android.content.Context,java.lang.String) -> isFileExistingOnExternalStorage
    boolean isDirectoryExistingOnExternalStorage(android.content.Context,java.lang.String) -> isDirectoryExistingOnExternalStorage
    boolean ensureDirectoriesExistOnExternalStorage(android.content.Context,java.lang.String) -> ensureDirectoriesExistOnExternalStorage
    java.io.InputStream openOnExternalStorage(android.content.Context,java.lang.String) -> openOnExternalStorage
    java.lang.String[] getDirectoryListOnExternalStorage(android.content.Context,java.lang.String) -> getDirectoryListOnExternalStorage
    java.lang.String[] getDirectoryListOnExternalStorage(android.content.Context,java.lang.String,java.io.FilenameFilter) -> getDirectoryListOnExternalStorage
    java.lang.String getAbsolutePathOnInternalStorage(android.content.Context,java.lang.String) -> getAbsolutePathOnInternalStorage
    java.lang.String getAbsolutePathOnExternalStorage(android.content.Context,java.lang.String) -> getAbsolutePathOnExternalStorage
    boolean isExternalStorageWriteable() -> isExternalStorageWriteable
    boolean isExternalStorageReadable() -> isExternalStorageReadable
    void copyFile(java.io.File,java.io.File) -> copyFile
    boolean deleteDirectory(java.io.File) -> deleteDirectory
org.anddev.andengine.util.HorizontalAlign -> org.anddev.andengine.util.HorizontalAlign:
    org.anddev.andengine.util.HorizontalAlign LEFT -> LEFT
    org.anddev.andengine.util.HorizontalAlign CENTER -> CENTER
    org.anddev.andengine.util.HorizontalAlign RIGHT -> RIGHT
    org.anddev.andengine.util.HorizontalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.anddev.andengine.util.HorizontalAlign[] values() -> values
    org.anddev.andengine.util.HorizontalAlign valueOf(java.lang.String) -> valueOf
org.anddev.andengine.util.IMatcher -> org.anddev.andengine.util.IMatcher:
    boolean matches(java.lang.Object) -> matches
org.anddev.andengine.util.Library -> org.anddev.andengine.util.Library:
    android.util.SparseArray mItems -> mItems
    void put(int,java.lang.Object) -> put
    void remove(int) -> remove
    java.lang.Object get(int) -> get
org.anddev.andengine.util.ListUtils -> org.anddev.andengine.util.ListUtils:
    java.util.ArrayList toList(java.lang.Object) -> toList
    java.util.ArrayList toList(java.lang.Object[]) -> toList
org.anddev.andengine.util.MathUtils -> org.anddev.andengine.util.MathUtils:
    java.util.Random RANDOM -> RANDOM
    float atan2(float,float) -> atan2
    float radToDeg(float) -> radToDeg
    float degToRad(float) -> degToRad
    int randomSign() -> randomSign
    float random(float,float) -> random
    int random(int,int) -> random
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int nextPowerOfTwo(float) -> nextPowerOfTwo
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    int sum(int[]) -> sum
    void arraySumInternal(int[]) -> arraySumInternal
    void arraySumInternal(long[]) -> arraySumInternal
    void arraySumInternal(long[],long) -> arraySumInternal
    void arraySumInto(long[],long[],long) -> arraySumInto
    float arraySum(float[]) -> arraySum
    float arrayAverage(float[]) -> arrayAverage
    float[] rotateAroundCenter(float[],float,float,float) -> rotateAroundCenter
    float[] scaleAroundCenter(float[],float,float,float,float) -> scaleAroundCenter
    float[] rotateAndScaleAroundCenter(float[],float,float,float,float,float,float,float) -> rotateAndScaleAroundCenter
    float[] revertScaleAroundCenter(float[],float,float,float,float) -> revertScaleAroundCenter
    float[] revertRotateAroundCenter(float[],float,float,float) -> revertRotateAroundCenter
    float[] revertRotateAndScaleAroundCenter(float[],float,float,float,float,float,float,float) -> revertRotateAndScaleAroundCenter
    int bringToBounds(int,int,int) -> bringToBounds
    float bringToBounds(float,float,float) -> bringToBounds
    float distance(float,float,float,float) -> distance
org.anddev.andengine.util.MultiKey -> org.anddev.andengine.util.MultiKey:
    java.lang.Object[] mKeys -> mKeys
    int mCachedHashCode -> mCachedHashCode
    java.lang.Object[] getKeys() -> getKeys
    boolean equals(java.lang.Object) -> equals
    int hash(java.lang.Object[]) -> hash
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object getKey(int) -> getKey
    int size() -> size
org.anddev.andengine.util.MultiKeyHashMap -> org.anddev.andengine.util.MultiKeyHashMap:
    long serialVersionUID -> serialVersionUID
    java.lang.Object get(java.lang.Object[]) -> get
    boolean isEqualKey(java.lang.Object[],java.lang.Object[]) -> isEqualKey
org.anddev.andengine.util.ParameterCallable -> org.anddev.andengine.util.ParameterCallable:
    void call(java.lang.Object) -> call
org.anddev.andengine.util.ProbabilityGenerator -> org.anddev.andengine.util.ProbabilityGenerator:
    float mProbabilitySum -> mProbabilitySum
    java.util.ArrayList mEntries -> mEntries
    void add(float,java.lang.Object[]) -> add
    java.lang.Object next() -> next
    void clear() -> clear
org.anddev.andengine.util.ProbabilityGenerator$Entry -> org.anddev.andengine.util.g:
    float mFactor -> a
    java.lang.Object[] mData -> b
    java.lang.Object getReturnValue() -> a
org.anddev.andengine.util.SAXUtils -> org.anddev.andengine.util.SAXUtils:
    java.lang.String getAttribute(org.xml.sax.Attributes,java.lang.String,java.lang.String) -> getAttribute
    java.lang.String getAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getAttributeOrThrow
    boolean getBooleanAttribute(org.xml.sax.Attributes,java.lang.String,boolean) -> getBooleanAttribute
    boolean getBooleanAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getBooleanAttributeOrThrow
    byte getByteAttribute(org.xml.sax.Attributes,java.lang.String,byte) -> getByteAttribute
    byte getByteAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getByteAttributeOrThrow
    short getShortAttribute(org.xml.sax.Attributes,java.lang.String,short) -> getShortAttribute
    short getShortAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getShortAttributeOrThrow
    int getIntAttribute(org.xml.sax.Attributes,java.lang.String,int) -> getIntAttribute
    int getIntAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getIntAttributeOrThrow
    long getLongAttribute(org.xml.sax.Attributes,java.lang.String,long) -> getLongAttribute
    long getLongAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getLongAttributeOrThrow
    float getFloatAttribute(org.xml.sax.Attributes,java.lang.String,float) -> getFloatAttribute
    float getFloatAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getFloatAttributeOrThrow
    double getDoubleAttribute(org.xml.sax.Attributes,java.lang.String,double) -> getDoubleAttribute
    double getDoubleAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getDoubleAttributeOrThrow
    void appendAttribute(java.lang.StringBuilder,java.lang.String,boolean) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,byte) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,short) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,int) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,long) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,float) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,double) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendAttribute
org.anddev.andengine.util.SimplePreferences -> org.anddev.andengine.util.SimplePreferences:
    android.content.SharedPreferences INSTANCE -> INSTANCE
    android.content.SharedPreferences$Editor EDITORINSTANCE -> EDITORINSTANCE
    android.content.SharedPreferences getInstance(android.content.Context) -> getInstance
    android.content.SharedPreferences$Editor getEditorInstance(android.content.Context) -> getEditorInstance
    int incrementAccessCount(android.content.Context,java.lang.String) -> incrementAccessCount
    int incrementAccessCount(android.content.Context,java.lang.String,int) -> incrementAccessCount
    int getAccessCount(android.content.Context,java.lang.String) -> getAccessCount
org.anddev.andengine.util.SmartList -> org.anddev.andengine.util.SmartList:
    long serialVersionUID -> serialVersionUID
    boolean remove(java.lang.Object,org.anddev.andengine.util.ParameterCallable) -> remove
    java.lang.Object remove(org.anddev.andengine.util.IMatcher) -> remove
    java.lang.Object remove(org.anddev.andengine.util.IMatcher,org.anddev.andengine.util.ParameterCallable) -> remove
    boolean removeAll(org.anddev.andengine.util.IMatcher) -> removeAll
    boolean removeAll(org.anddev.andengine.util.IMatcher,org.anddev.andengine.util.ParameterCallable) -> removeAll
    void clear(org.anddev.andengine.util.ParameterCallable) -> clear
    java.lang.Object find(org.anddev.andengine.util.IMatcher) -> find
    void call(org.anddev.andengine.util.ParameterCallable) -> call
    void call(org.anddev.andengine.util.IMatcher,org.anddev.andengine.util.ParameterCallable) -> call
org.anddev.andengine.util.SocketUtils -> org.anddev.andengine.util.SocketUtils:
    void closeSocket(java.net.DatagramSocket) -> closeSocket
    void closeSocket(java.net.Socket) -> closeSocket
    void closeSocket(java.net.ServerSocket) -> closeSocket
org.anddev.andengine.util.StreamUtils -> org.anddev.andengine.util.StreamUtils:
    int IO_BUFFER_SIZE -> IO_BUFFER_SIZE
    java.lang.String readFully(java.io.InputStream) -> readFully
    byte[] streamToBytes(java.io.InputStream) -> streamToBytes
    byte[] streamToBytes(java.io.InputStream,int) -> streamToBytes
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    boolean copyAndClose(java.io.InputStream,java.io.OutputStream) -> copyAndClose
    void copy(java.io.InputStream,java.io.OutputStream,long) -> copy
    void close(java.io.Closeable) -> close
    void flushCloseStream(java.io.OutputStream) -> flushCloseStream
    void flushCloseWriter(java.io.Writer) -> flushCloseWriter
org.anddev.andengine.util.StringUtils -> org.anddev.andengine.util.StringUtils:
    java.lang.String padFront(java.lang.String,char,int) -> padFront
    int countOccurrences(java.lang.String,char) -> countOccurrences
    java.lang.String[] split(java.lang.String,char) -> split
    java.lang.String[] split(java.lang.String,char,java.lang.String[]) -> split
org.anddev.andengine.util.SystemUtils -> org.anddev.andengine.util.SystemUtils:
    java.lang.String BOGOMIPS_PATTERN -> BOGOMIPS_PATTERN
    java.lang.String MEMTOTAL_PATTERN -> MEMTOTAL_PATTERN
    java.lang.String MEMFREE_PATTERN -> MEMFREE_PATTERN
    int getPackageVersionCode(android.content.Context) -> getPackageVersionCode
    java.lang.String getPackageVersionName(android.content.Context) -> getPackageVersionName
    android.content.pm.PackageInfo getPackageInfo(android.content.Context) -> getPackageInfo
    boolean hasSystemFeature(android.content.Context,java.lang.String) -> hasSystemFeature
    boolean isAndroidVersionOrHigher(int) -> isAndroidVersionOrHigher
    float getCPUBogoMips() -> getCPUBogoMips
    int getMemoryTotal() -> getMemoryTotal
    int getMemoryFree() -> getMemoryFree
    int getCPUFrequencyCurrent() -> getCPUFrequencyCurrent
    int getCPUFrequencyMin() -> getCPUFrequencyMin
    int getCPUFrequencyMax() -> getCPUFrequencyMax
    int getCPUFrequencyMinScaling() -> getCPUFrequencyMinScaling
    int getCPUFrequencyMaxScaling() -> getCPUFrequencyMaxScaling
    java.util.regex.MatchResult matchSystemFile(java.lang.String,java.lang.String,int) -> matchSystemFile
    int readSystemFileAsInt(java.lang.String) -> readSystemFileAsInt
org.anddev.andengine.util.SystemUtils$SystemUtilsException -> org.anddev.andengine.util.SystemUtils$SystemUtilsException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.util.TimeUtils -> org.anddev.andengine.util.TimeUtils:
    java.lang.String formatSeconds(int) -> formatSeconds
    java.lang.String formatSeconds(int,java.lang.StringBuilder) -> formatSeconds
org.anddev.andengine.util.Transformation -> org.anddev.andengine.util.Transformation:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    float tx -> tx
    float ty -> ty
    java.lang.String toString() -> toString
    void reset() -> reset
    void setToIdentity() -> setToIdentity
    void setTo(org.anddev.andengine.util.Transformation) -> setTo
    void preTranslate(float,float) -> preTranslate
    void postTranslate(float,float) -> postTranslate
    org.anddev.andengine.util.Transformation setToTranslate(float,float) -> setToTranslate
    void preScale(float,float) -> preScale
    void postScale(float,float) -> postScale
    org.anddev.andengine.util.Transformation setToScale(float,float) -> setToScale
    void preRotate(float) -> preRotate
    void postRotate(float) -> postRotate
    org.anddev.andengine.util.Transformation setToRotate(float) -> setToRotate
    void postConcat(org.anddev.andengine.util.Transformation) -> postConcat
    void postConcat(float,float,float,float,float,float) -> postConcat
    void preConcat(org.anddev.andengine.util.Transformation) -> preConcat
    void preConcat(float,float,float,float,float,float) -> preConcat
    void transform(float[]) -> transform
org.anddev.andengine.util.TransformationPool -> org.anddev.andengine.util.TransformationPool:
    org.anddev.andengine.util.pool.GenericPool POOL -> POOL
    org.anddev.andengine.util.Transformation obtain() -> obtain
    void recycle(org.anddev.andengine.util.Transformation) -> recycle
org.anddev.andengine.util.TransformationPool$1 -> org.anddev.andengine.util.i:
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.util.VerticalAlign -> org.anddev.andengine.util.VerticalAlign:
    org.anddev.andengine.util.VerticalAlign TOP -> TOP
    org.anddev.andengine.util.VerticalAlign CENTER -> CENTER
    org.anddev.andengine.util.VerticalAlign BOTTOM -> BOTTOM
    org.anddev.andengine.util.VerticalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.anddev.andengine.util.VerticalAlign[] values() -> values
    org.anddev.andengine.util.VerticalAlign valueOf(java.lang.String) -> valueOf
org.anddev.andengine.util.ViewUtils -> org.anddev.andengine.util.ViewUtils:
    android.view.View inflate(android.content.Context,int) -> inflate
    android.view.View inflate(android.content.Context,int,android.view.ViewGroup) -> inflate
org.anddev.andengine.util.cache.RectangleVertexBufferCache -> org.anddev.andengine.util.cache.RectangleVertexBufferCache:
    int mDrawType -> mDrawType
    org.anddev.andengine.util.MultiKeyHashMap mRectangleVertexBufferCache -> mRectangleVertexBufferCache
    org.anddev.andengine.opengl.vertex.RectangleVertexBuffer get(int,int) -> get
    org.anddev.andengine.opengl.vertex.RectangleVertexBuffer put(int,int,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer) -> put
org.anddev.andengine.util.constants.ColorConstants -> org.anddev.andengine.util.constants.ColorConstants:
    float COLOR_FACTOR_INT_TO_FLOAT -> COLOR_FACTOR_INT_TO_FLOAT
org.anddev.andengine.util.constants.Constants -> org.anddev.andengine.util.constants.Constants:
    java.lang.String DEBUGTAG -> DEBUGTAG
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
org.anddev.andengine.util.constants.MIMETypes -> org.anddev.andengine.util.constants.MIMETypes:
    java.lang.String JPEG -> JPEG
    java.lang.String GIF -> GIF
    java.lang.String PNG -> PNG
org.anddev.andengine.util.constants.MathConstants -> org.anddev.andengine.util.constants.MathConstants:
    float PI -> PI
    float PI_TWICE -> PI_TWICE
    float PI_HALF -> PI_HALF
    float DEG_TO_RAD -> DEG_TO_RAD
    float RAD_TO_DEG -> RAD_TO_DEG
org.anddev.andengine.util.constants.TimeConstants -> org.anddev.andengine.util.constants.TimeConstants:
    int MONTHSPERYEAR -> MONTHSPERYEAR
    int DAYSPERWEEK -> DAYSPERWEEK
    int DAYSPERMONTH -> DAYSPERMONTH
    int HOURSPERDAY -> HOURSPERDAY
    int MINUTESPERHOUR -> MINUTESPERHOUR
    int MILLISECONDSPERSECOND -> MILLISECONDSPERSECOND
    int MICROSECONDSPERSECOND -> MICROSECONDSPERSECOND
    long NANOSECONDSPERSECOND -> NANOSECONDSPERSECOND
    long MICROSECONDSPERMILLISECOND -> MICROSECONDSPERMILLISECOND
    long NANOSECONDSPERMICROSECOND -> NANOSECONDSPERMICROSECOND
    long NANOSECONDSPERMILLISECOND -> NANOSECONDSPERMILLISECOND
    float SECONDSPERNANOSECOND -> SECONDSPERNANOSECOND
    float SECONDSPERMICROSECOND -> SECONDSPERMICROSECOND
    float SECONDSPERMILLISECOND -> SECONDSPERMILLISECOND
    int SECONDSPERMINUTE -> SECONDSPERMINUTE
    int SECONDSPERHOUR -> SECONDSPERHOUR
    int SECONDSPERDAY -> SECONDSPERDAY
    int SECONDSPERWEEK -> SECONDSPERWEEK
    int SECONDSPERMONTH -> SECONDSPERMONTH
    int SECONDSPERYEAR -> SECONDSPERYEAR
org.anddev.andengine.util.levelstats.LevelStatsDBConnector -> org.anddev.andengine.util.levelstats.LevelStatsDBConnector:
    java.lang.String PREFERENCES_LEVELSTATSDBCONNECTOR_PLAYERID_ID -> PREFERENCES_LEVELSTATSDBCONNECTOR_PLAYERID_ID
    java.lang.String mSecret -> mSecret
    java.lang.String mSubmitURL -> mSubmitURL
    int mPlayerID -> mPlayerID
    void submitAsync(int,boolean,int) -> submitAsync
    void submitAsync(int,boolean,int,org.anddev.andengine.util.Callback) -> submitAsync
    java.lang.String access$0(org.anddev.andengine.util.levelstats.LevelStatsDBConnector) -> access$0
    int access$1(org.anddev.andengine.util.levelstats.LevelStatsDBConnector) -> access$1
    java.lang.String access$2(org.anddev.andengine.util.levelstats.LevelStatsDBConnector) -> access$2
org.anddev.andengine.util.levelstats.LevelStatsDBConnector$1 -> org.anddev.andengine.util.levelstats.a:
    org.anddev.andengine.util.levelstats.LevelStatsDBConnector this$0 -> a
    int val$pLevelID -> b
    boolean val$pSolved -> c
    int val$pSecondsElapsed -> d
    org.anddev.andengine.util.Callback val$pCallback -> e
    void run() -> run
org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier -> org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier:
    float mFromValueB -> mFromValueB
    float mValueSpanB -> mValueSpanB
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
org.anddev.andengine.util.modifier.BaseDurationModifier -> org.anddev.andengine.util.modifier.BaseDurationModifier:
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    float onUpdate(float,java.lang.Object) -> onUpdate
    void reset() -> reset
org.anddev.andengine.util.modifier.BaseModifier -> org.anddev.andengine.util.modifier.BaseModifier:
    boolean mFinished -> mFinished
    boolean mRemoveWhenFinished -> mRemoveWhenFinished
    org.anddev.andengine.util.modifier.IModifier$IModifierListener mModifierListener -> mModifierListener
    boolean isFinished() -> isFinished
    boolean isRemoveWhenFinished() -> isRemoveWhenFinished
    void setRemoveWhenFinished(boolean) -> setRemoveWhenFinished
    org.anddev.andengine.util.modifier.IModifier$IModifierListener getModifierListener() -> getModifierListener
    void setModifierListener(org.anddev.andengine.util.modifier.IModifier$IModifierListener) -> setModifierListener
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    java.lang.Object clone() -> clone
org.anddev.andengine.util.modifier.BaseSingleValueChangeModifier -> org.anddev.andengine.util.modifier.BaseSingleValueChangeModifier:
    float mValueChangePerSecond -> mValueChangePerSecond
    void onChangeValue(java.lang.Object,float) -> onChangeValue
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier -> org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier:
    float mFromValue -> mFromValue
    float mValueSpan -> mValueSpan
    org.anddev.andengine.util.modifier.ease.IEaseFunction mEaseFunction -> mEaseFunction
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
org.anddev.andengine.util.modifier.BaseTripleValueSpanModifier -> org.anddev.andengine.util.modifier.BaseTripleValueSpanModifier:
    float mFromValueC -> mFromValueC
    float mValueSpanC -> mValueSpanC
    void onSetInitialValues(java.lang.Object,float,float,float) -> onSetInitialValues
    void onSetValues(java.lang.Object,float,float,float,float) -> onSetValues
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
org.anddev.andengine.util.modifier.IModifier -> org.anddev.andengine.util.modifier.IModifier:
    void reset() -> reset
    boolean isFinished() -> isFinished
    boolean isRemoveWhenFinished() -> isRemoveWhenFinished
    void setRemoveWhenFinished(boolean) -> setRemoveWhenFinished
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    float onUpdate(float,java.lang.Object) -> onUpdate
    org.anddev.andengine.util.modifier.IModifier$IModifierListener getModifierListener() -> getModifierListener
    void setModifierListener(org.anddev.andengine.util.modifier.IModifier$IModifierListener) -> setModifierListener
org.anddev.andengine.util.modifier.IModifier$CloneNotSupportedException -> org.anddev.andengine.util.modifier.IModifier$CloneNotSupportedException:
    long serialVersionUID -> serialVersionUID
org.anddev.andengine.util.modifier.IModifier$IModifierListener -> org.anddev.andengine.util.modifier.IModifier$IModifierListener:
    void onModifierStarted(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
    void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
org.anddev.andengine.util.modifier.LoopModifier -> org.anddev.andengine.util.modifier.LoopModifier:
    int LOOP_CONTINUOUS -> LOOP_CONTINUOUS
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    org.anddev.andengine.util.modifier.IModifier mModifier -> mModifier
    org.anddev.andengine.util.modifier.LoopModifier$ILoopModifierListener mLoopModifierListener -> mLoopModifierListener
    int mLoopCount -> mLoopCount
    int mLoop -> mLoop
    org.anddev.andengine.util.modifier.LoopModifier clone() -> clone
    org.anddev.andengine.util.modifier.LoopModifier$ILoopModifierListener getLoopModifierListener() -> getLoopModifierListener
    void setLoopModifierListener(org.anddev.andengine.util.modifier.LoopModifier$ILoopModifierListener) -> setLoopModifierListener
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    float onUpdate(float,java.lang.Object) -> onUpdate
    void reset() -> reset
    void onHandleLoopStarted(java.lang.Object) -> onHandleLoopStarted
    void onHandleLoopFinished(java.lang.Object) -> onHandleLoopFinished
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
org.anddev.andengine.util.modifier.LoopModifier$ILoopModifierListener -> org.anddev.andengine.util.modifier.LoopModifier$ILoopModifierListener:
    void onLoopStarted(org.anddev.andengine.util.modifier.LoopModifier,int,int) -> onLoopStarted
    void onLoopFinished(org.anddev.andengine.util.modifier.LoopModifier,int,int) -> onLoopFinished
org.anddev.andengine.util.modifier.LoopModifier$InternalModifierListener -> org.anddev.andengine.util.modifier.b:
    org.anddev.andengine.util.modifier.LoopModifier this$0 -> a
    void onModifierStarted(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
    void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
org.anddev.andengine.util.modifier.ModifierList -> org.anddev.andengine.util.modifier.ModifierList:
    long serialVersionUID -> serialVersionUID
    java.lang.Object mTarget -> mTarget
    java.lang.Object getTarget() -> getTarget
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.anddev.andengine.util.modifier.ParallelModifier -> org.anddev.andengine.util.modifier.ParallelModifier:
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    org.anddev.andengine.util.modifier.IModifier[] mModifiers -> mModifiers
    org.anddev.andengine.util.modifier.ParallelModifier clone() -> clone
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    float onUpdate(float,java.lang.Object) -> onUpdate
    void reset() -> reset
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
org.anddev.andengine.util.modifier.ParallelModifier$InternalModifierListener -> org.anddev.andengine.util.modifier.c:
    org.anddev.andengine.util.modifier.ParallelModifier this$0 -> a
    void onModifierStarted(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
    void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
org.anddev.andengine.util.modifier.SequenceModifier -> org.anddev.andengine.util.modifier.SequenceModifier:
    org.anddev.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener mSubSequenceModifierListener -> mSubSequenceModifierListener
    org.anddev.andengine.util.modifier.IModifier[] mSubSequenceModifiers -> mSubSequenceModifiers
    int mCurrentSubSequenceModifierIndex -> mCurrentSubSequenceModifierIndex
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    org.anddev.andengine.util.modifier.SequenceModifier clone() -> clone
    org.anddev.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener getSubSequenceModifierListener() -> getSubSequenceModifierListener
    void setSubSequenceModifierListener(org.anddev.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener) -> setSubSequenceModifierListener
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    float onUpdate(float,java.lang.Object) -> onUpdate
    void reset() -> reset
    void onHandleModifierStarted(org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener,org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onHandleModifierStarted
    void onHandleModifierFinished(org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener,org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onHandleModifierFinished
    org.anddev.andengine.util.modifier.IModifier clone() -> clone
    void access$1(org.anddev.andengine.util.modifier.SequenceModifier,org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener,org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> access$1
org.anddev.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener -> org.anddev.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener:
    void onSubSequenceStarted(org.anddev.andengine.util.modifier.IModifier,java.lang.Object,int) -> onSubSequenceStarted
    void onSubSequenceFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object,int) -> onSubSequenceFinished
org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener -> org.anddev.andengine.util.modifier.a:
    org.anddev.andengine.util.modifier.SequenceModifier this$0 -> a
    void onModifierStarted(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
    void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
org.anddev.andengine.util.modifier.ease.EaseBackIn -> org.anddev.andengine.util.modifier.ease.EaseBackIn:
    org.anddev.andengine.util.modifier.ease.EaseBackIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseBackIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseBackInOut -> org.anddev.andengine.util.modifier.ease.EaseBackInOut:
    org.anddev.andengine.util.modifier.ease.EaseBackInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseBackInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseBackOut -> org.anddev.andengine.util.modifier.ease.EaseBackOut:
    org.anddev.andengine.util.modifier.ease.EaseBackOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseBackOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseBounceIn -> org.anddev.andengine.util.modifier.ease.EaseBounceIn:
    org.anddev.andengine.util.modifier.ease.EaseBounceIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseBounceIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseBounceInOut -> org.anddev.andengine.util.modifier.ease.EaseBounceInOut:
    org.anddev.andengine.util.modifier.ease.EaseBounceInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseBounceInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseBounceOut -> org.anddev.andengine.util.modifier.ease.EaseBounceOut:
    org.anddev.andengine.util.modifier.ease.EaseBounceOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseBounceOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseCircularIn -> org.anddev.andengine.util.modifier.ease.EaseCircularIn:
    org.anddev.andengine.util.modifier.ease.EaseCircularIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseCircularIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseCircularInOut -> org.anddev.andengine.util.modifier.ease.EaseCircularInOut:
    org.anddev.andengine.util.modifier.ease.EaseCircularInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseCircularInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseCircularOut -> org.anddev.andengine.util.modifier.ease.EaseCircularOut:
    org.anddev.andengine.util.modifier.ease.EaseCircularOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseCircularOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseCubicIn -> org.anddev.andengine.util.modifier.ease.EaseCubicIn:
    org.anddev.andengine.util.modifier.ease.EaseCubicIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseCubicIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseCubicInOut -> org.anddev.andengine.util.modifier.ease.EaseCubicInOut:
    org.anddev.andengine.util.modifier.ease.EaseCubicInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseCubicInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseCubicOut -> org.anddev.andengine.util.modifier.ease.EaseCubicOut:
    org.anddev.andengine.util.modifier.ease.EaseCubicOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseCubicOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseElasticIn -> org.anddev.andengine.util.modifier.ease.EaseElasticIn:
    org.anddev.andengine.util.modifier.ease.EaseElasticIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseElasticIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseElasticInOut -> org.anddev.andengine.util.modifier.ease.EaseElasticInOut:
    org.anddev.andengine.util.modifier.ease.EaseElasticInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseElasticInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseElasticOut -> org.anddev.andengine.util.modifier.ease.EaseElasticOut:
    org.anddev.andengine.util.modifier.ease.EaseElasticOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseElasticOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseExponentialIn -> org.anddev.andengine.util.modifier.ease.EaseExponentialIn:
    org.anddev.andengine.util.modifier.ease.EaseExponentialIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseExponentialIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseExponentialInOut -> org.anddev.andengine.util.modifier.ease.EaseExponentialInOut:
    org.anddev.andengine.util.modifier.ease.EaseExponentialInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseExponentialInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseExponentialOut -> org.anddev.andengine.util.modifier.ease.EaseExponentialOut:
    org.anddev.andengine.util.modifier.ease.EaseExponentialOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseExponentialOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseLinear -> org.anddev.andengine.util.modifier.ease.EaseLinear:
    org.anddev.andengine.util.modifier.ease.EaseLinear INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseLinear getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuadIn -> org.anddev.andengine.util.modifier.ease.EaseQuadIn:
    org.anddev.andengine.util.modifier.ease.EaseQuadIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuadIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuadInOut -> org.anddev.andengine.util.modifier.ease.EaseQuadInOut:
    org.anddev.andengine.util.modifier.ease.EaseQuadInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuadInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuadOut -> org.anddev.andengine.util.modifier.ease.EaseQuadOut:
    org.anddev.andengine.util.modifier.ease.EaseQuadOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuadOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuartIn -> org.anddev.andengine.util.modifier.ease.EaseQuartIn:
    org.anddev.andengine.util.modifier.ease.EaseQuartIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuartIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuartInOut -> org.anddev.andengine.util.modifier.ease.EaseQuartInOut:
    org.anddev.andengine.util.modifier.ease.EaseQuartInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuartInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuartOut -> org.anddev.andengine.util.modifier.ease.EaseQuartOut:
    org.anddev.andengine.util.modifier.ease.EaseQuartOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuartOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuintIn -> org.anddev.andengine.util.modifier.ease.EaseQuintIn:
    org.anddev.andengine.util.modifier.ease.EaseQuintIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuintIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuintInOut -> org.anddev.andengine.util.modifier.ease.EaseQuintInOut:
    org.anddev.andengine.util.modifier.ease.EaseQuintInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuintInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseQuintOut -> org.anddev.andengine.util.modifier.ease.EaseQuintOut:
    org.anddev.andengine.util.modifier.ease.EaseQuintOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseQuintOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseSineIn -> org.anddev.andengine.util.modifier.ease.EaseSineIn:
    org.anddev.andengine.util.modifier.ease.EaseSineIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseSineIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseSineInOut -> org.anddev.andengine.util.modifier.ease.EaseSineInOut:
    org.anddev.andengine.util.modifier.ease.EaseSineInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseSineInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseSineOut -> org.anddev.andengine.util.modifier.ease.EaseSineOut:
    org.anddev.andengine.util.modifier.ease.EaseSineOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseSineOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseStrongIn -> org.anddev.andengine.util.modifier.ease.EaseStrongIn:
    org.anddev.andengine.util.modifier.ease.EaseStrongIn INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseStrongIn getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseStrongInOut -> org.anddev.andengine.util.modifier.ease.EaseStrongInOut:
    org.anddev.andengine.util.modifier.ease.EaseStrongInOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseStrongInOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.EaseStrongOut -> org.anddev.andengine.util.modifier.ease.EaseStrongOut:
    org.anddev.andengine.util.modifier.ease.EaseStrongOut INSTANCE -> INSTANCE
    org.anddev.andengine.util.modifier.ease.EaseStrongOut getInstance() -> getInstance
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.ease.IEaseFunction -> org.anddev.andengine.util.modifier.ease.IEaseFunction:
    org.anddev.andengine.util.modifier.ease.IEaseFunction DEFAULT -> DEFAULT
    float getPercentageDone(float,float,float,float) -> getPercentageDone
org.anddev.andengine.util.modifier.util.ModifierUtils -> org.anddev.andengine.util.modifier.util.ModifierUtils:
    org.anddev.andengine.util.modifier.IModifier getModifierWithLongestDuration(org.anddev.andengine.util.modifier.IModifier[]) -> getModifierWithLongestDuration
    float getSequenceDurationOfModifier(org.anddev.andengine.util.modifier.IModifier[]) -> getSequenceDurationOfModifier
org.anddev.andengine.util.path.Direction -> org.anddev.andengine.util.path.Direction:
    org.anddev.andengine.util.path.Direction UP -> UP
    org.anddev.andengine.util.path.Direction DOWN -> DOWN
    org.anddev.andengine.util.path.Direction LEFT -> LEFT
    org.anddev.andengine.util.path.Direction RIGHT -> RIGHT
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    org.anddev.andengine.util.path.Direction[] ENUM$VALUES -> ENUM$VALUES
    org.anddev.andengine.util.path.Direction fromDelta(int,int) -> fromDelta
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
    org.anddev.andengine.util.path.Direction[] values() -> values
    org.anddev.andengine.util.path.Direction valueOf(java.lang.String) -> valueOf
org.anddev.andengine.util.path.IPathFinder -> org.anddev.andengine.util.path.IPathFinder:
    org.anddev.andengine.util.path.Path findPath(java.lang.Object,int,int,int,int,int) -> findPath
org.anddev.andengine.util.path.ITiledMap -> org.anddev.andengine.util.path.ITiledMap:
    int getTileColumns() -> getTileColumns
    int getTileRows() -> getTileRows
    void onTileVisitedByPathFinder(int,int) -> onTileVisitedByPathFinder
    boolean isTileBlocked(java.lang.Object,int,int) -> isTileBlocked
    float getStepCost(java.lang.Object,int,int,int,int) -> getStepCost
org.anddev.andengine.util.path.Path -> org.anddev.andengine.util.path.Path:
    java.util.ArrayList mSteps -> mSteps
    int getLength() -> getLength
    org.anddev.andengine.util.path.Path$Step getStep(int) -> getStep
    org.anddev.andengine.util.path.Direction getDirectionToPreviousStep(int) -> getDirectionToPreviousStep
    org.anddev.andengine.util.path.Direction getDirectionToNextStep(int) -> getDirectionToNextStep
    int getTileColumn(int) -> getTileColumn
    int getTileRow(int) -> getTileRow
    void append(int,int) -> append
    void append(org.anddev.andengine.util.path.Path$Step) -> append
    void prepend(int,int) -> prepend
    void prepend(org.anddev.andengine.util.path.Path$Step) -> prepend
    boolean contains(int,int) -> contains
    int getFromTileRow() -> getFromTileRow
    int getFromTileColumn() -> getFromTileColumn
    int getToTileRow() -> getToTileRow
    int getToTileColumn() -> getToTileColumn
org.anddev.andengine.util.path.Path$Step -> org.anddev.andengine.util.path.Path$Step:
    int mTileColumn -> mTileColumn
    int mTileRow -> mTileRow
    org.anddev.andengine.util.path.Path this$0 -> this$0
    int getTileColumn() -> getTileColumn
    int getTileRow() -> getTileRow
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.anddev.andengine.util.path.astar.AStarPathFinder -> org.anddev.andengine.util.path.astar.AStarPathFinder:
    java.util.ArrayList mVisitedNodes -> mVisitedNodes
    java.util.ArrayList mOpenNodes -> mOpenNodes
    org.anddev.andengine.util.path.ITiledMap mTiledMap -> mTiledMap
    int mMaxSearchDepth -> mMaxSearchDepth
    org.anddev.andengine.util.path.astar.AStarPathFinder$Node[][] mNodes -> mNodes
    boolean mAllowDiagonalMovement -> mAllowDiagonalMovement
    org.anddev.andengine.util.path.astar.IAStarHeuristic mAStarHeuristic -> mAStarHeuristic
    org.anddev.andengine.util.path.Path findPath(java.lang.Object,int,int,int,int,int) -> findPath
    boolean isTileBlocked(java.lang.Object,int,int,int,int) -> isTileBlocked
org.anddev.andengine.util.path.astar.AStarPathFinder$Node -> org.anddev.andengine.util.path.astar.a:
    org.anddev.andengine.util.path.astar.AStarPathFinder$Node mParent -> a
    int mDepth -> b
    int mTileColumn -> c
    int mTileRow -> d
    float mCost -> e
    float mExpectedRestCost -> f
    int compareTo(java.lang.Object) -> compareTo
org.anddev.andengine.util.path.astar.EuclideanHeuristic -> org.anddev.andengine.util.path.astar.EuclideanHeuristic:
    float getExpectedRestCost(org.anddev.andengine.util.path.ITiledMap,java.lang.Object,int,int,int,int) -> getExpectedRestCost
org.anddev.andengine.util.path.astar.IAStarHeuristic -> org.anddev.andengine.util.path.astar.IAStarHeuristic:
    float getExpectedRestCost(org.anddev.andengine.util.path.ITiledMap,java.lang.Object,int,int,int,int) -> getExpectedRestCost
org.anddev.andengine.util.path.astar.ManhattanHeuristic -> org.anddev.andengine.util.path.astar.ManhattanHeuristic:
    float getExpectedRestCost(org.anddev.andengine.util.path.ITiledMap,java.lang.Object,int,int,int,int) -> getExpectedRestCost
org.anddev.andengine.util.path.astar.NullHeuristic -> org.anddev.andengine.util.path.astar.NullHeuristic:
    float getExpectedRestCost(org.anddev.andengine.util.path.ITiledMap,java.lang.Object,int,int,int,int) -> getExpectedRestCost
org.anddev.andengine.util.pool.EntityDetachRunnablePoolItem -> org.anddev.andengine.util.pool.EntityDetachRunnablePoolItem:
    org.anddev.andengine.entity.IEntity mEntity -> mEntity
    void setEntity(org.anddev.andengine.entity.IEntity) -> setEntity
    void run() -> run
org.anddev.andengine.util.pool.EntityDetachRunnablePoolUpdateHandler -> org.anddev.andengine.util.pool.EntityDetachRunnablePoolUpdateHandler:
    org.anddev.andengine.util.pool.EntityDetachRunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
    org.anddev.andengine.util.pool.RunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.util.pool.GenericPool -> org.anddev.andengine.util.pool.GenericPool:
    java.util.Stack mAvailableItems -> mAvailableItems
    int mUnrecycledCount -> mUnrecycledCount
    int mGrowth -> mGrowth
    int getUnrecycledCount() -> getUnrecycledCount
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
    java.lang.Object onHandleAllocatePoolItem() -> onHandleAllocatePoolItem
    void onHandleObtainItem(java.lang.Object) -> onHandleObtainItem
    void batchAllocatePoolItems(int) -> batchAllocatePoolItems
    java.lang.Object obtainPoolItem() -> obtainPoolItem
    void recyclePoolItem(java.lang.Object) -> recyclePoolItem
    void shufflePoolItems() -> shufflePoolItems
org.anddev.andengine.util.pool.MultiPool -> org.anddev.andengine.util.pool.MultiPool:
    android.util.SparseArray mPools -> mPools
    void registerPool(int,org.anddev.andengine.util.pool.GenericPool) -> registerPool
    java.lang.Object obtainPoolItem(int) -> obtainPoolItem
    void recyclePoolItem(int,java.lang.Object) -> recyclePoolItem
org.anddev.andengine.util.pool.Pool -> org.anddev.andengine.util.pool.Pool:
    org.anddev.andengine.util.pool.PoolItem onHandleAllocatePoolItem() -> onHandleAllocatePoolItem
    void onHandleObtainItem(org.anddev.andengine.util.pool.PoolItem) -> onHandleObtainItem
    void onHandleRecycleItem(org.anddev.andengine.util.pool.PoolItem) -> onHandleRecycleItem
    void recyclePoolItem(org.anddev.andengine.util.pool.PoolItem) -> recyclePoolItem
    boolean ownsPoolItem(org.anddev.andengine.util.pool.PoolItem) -> ownsPoolItem
    void recycle(org.anddev.andengine.util.pool.PoolItem) -> recycle
    java.lang.Object onHandleAllocatePoolItem() -> onHandleAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
    void onHandleObtainItem(java.lang.Object) -> onHandleObtainItem
    void recyclePoolItem(java.lang.Object) -> recyclePoolItem
org.anddev.andengine.util.pool.PoolItem -> org.anddev.andengine.util.pool.PoolItem:
    org.anddev.andengine.util.pool.Pool mParent -> mParent
    boolean mRecycled -> mRecycled
    org.anddev.andengine.util.pool.Pool getParent() -> getParent
    boolean isRecycled() -> isRecycled
    boolean isFromPool(org.anddev.andengine.util.pool.Pool) -> isFromPool
    void onRecycle() -> onRecycle
    void onObtain() -> onObtain
    void recycle() -> recycle
org.anddev.andengine.util.pool.PoolUpdateHandler -> org.anddev.andengine.util.pool.PoolUpdateHandler:
    org.anddev.andengine.util.pool.Pool mPool -> mPool
    java.util.ArrayList mScheduledPoolItems -> mScheduledPoolItems
    org.anddev.andengine.util.pool.PoolItem onAllocatePoolItem() -> onAllocatePoolItem
    void onHandlePoolItem(org.anddev.andengine.util.pool.PoolItem) -> onHandlePoolItem
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    org.anddev.andengine.util.pool.PoolItem obtainPoolItem() -> obtainPoolItem
    void postPoolItem(org.anddev.andengine.util.pool.PoolItem) -> postPoolItem
org.anddev.andengine.util.pool.PoolUpdateHandler$1 -> org.anddev.andengine.util.pool.b:
    org.anddev.andengine.util.pool.PoolUpdateHandler this$0 -> a
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.util.pool.PoolUpdateHandler$2 -> org.anddev.andengine.util.pool.a:
    org.anddev.andengine.util.pool.PoolUpdateHandler this$0 -> a
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.util.pool.PoolUpdateHandler$3 -> org.anddev.andengine.util.pool.c:
    org.anddev.andengine.util.pool.PoolUpdateHandler this$0 -> a
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.util.pool.RunnablePoolItem -> org.anddev.andengine.util.pool.RunnablePoolItem:
org.anddev.andengine.util.pool.RunnablePoolUpdateHandler -> org.anddev.andengine.util.pool.RunnablePoolUpdateHandler:
    org.anddev.andengine.util.pool.RunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
    void onHandlePoolItem(org.anddev.andengine.util.pool.RunnablePoolItem) -> onHandlePoolItem
    void onHandlePoolItem(org.anddev.andengine.util.pool.PoolItem) -> onHandlePoolItem
    org.anddev.andengine.util.pool.PoolItem onAllocatePoolItem() -> onAllocatePoolItem
org.anddev.andengine.util.progress.IProgressListener -> org.anddev.andengine.util.progress.IProgressListener:
    void onProgressChanged(int) -> onProgressChanged
org.anddev.andengine.util.progress.ProgressCallable -> org.anddev.andengine.util.progress.ProgressCallable:
    java.lang.Object call(org.anddev.andengine.util.progress.IProgressListener) -> call
org.anddev.andengine.util.progress.ProgressMonitor -> org.anddev.andengine.util.progress.ProgressMonitor:
    org.anddev.andengine.util.progress.ProgressMonitor mParentProgressMonitor -> mParentProgressMonitor
    org.anddev.andengine.util.progress.IProgressListener mListener -> mListener
    int mSubMonitorRangeFrom -> mSubMonitorRangeFrom
    int mSubMonitorRangeTo -> mSubMonitorRangeTo
    int mProgress -> mProgress
    org.anddev.andengine.util.progress.ProgressMonitor getParentProgressMonitor() -> getParentProgressMonitor
    int getProgress() -> getProgress
    void setSubMonitorRange(int,int) -> setSubMonitorRange
    void onProgressChanged(int) -> onProgressChanged
    void onSubProgressChanged(int) -> onSubProgressChanged
org.anddev.andengine.util.sort.InsertionSorter -> org.anddev.andengine.util.sort.InsertionSorter:
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void sort(java.util.List,int,int,java.util.Comparator) -> sort
org.anddev.andengine.util.sort.Sorter -> org.anddev.andengine.util.sort.Sorter:
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void sort(java.util.List,int,int,java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.util.List,java.util.Comparator) -> sort
