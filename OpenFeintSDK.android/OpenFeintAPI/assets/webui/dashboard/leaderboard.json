{"title":"Leaderboards","scrolling":true,"loadflow":"var localUserLoaded, localUserReq;\nOF.GA.setAccount('UA-3107048-21', 'spotlight.android.openfeint.com');\n$.loadScript('dashboard/dashboard');\nif ((typeof jasmine !== \"undefined\" && jasmine !== null) && OF.isBrowser) {\n  $.loadCss('settings/spec');\n}\nlocalUserLoaded = localUserReq = null;\nOF.loadLocalUser = function() {\n  if (OF.user.isLoaded) {\n    return typeof localUserLoaded === \"function\" ? localUserLoaded() : void 0;\n  } else {\n    return localUserReq || (localUserReq = OF.api(\"/xp/users/me\", {\n      success: function(userData) {\n        OF.user = userData.user;\n        OF.user.isLoaded = true;\n        if (typeof localUserLoaded === \"function\") {\n          localUserLoaded();\n        }\n        return localUserLoaded = localUserReq = null;\n      }\n    }));\n  }\n};\nOF.localUserLoaded = function(callback) {\n  if (OF.user.isLoaded) {\n    return callback();\n  } else {\n    return localUserLoaded = callback;\n  }\n};","init":"OF.loadLocalUser();\n$('body').addClass('textured');\n$('.button').pretouch();\n\n// Menu handling functions\nif (!OF.menu) {\n  OF.menu = function(buttonName) {\n    if      (buttonName == 'home')      OF.menu.home();\n    else if (buttonName == 'settings')  OF.menu.settings();\n    else if (buttonName == 'exit')      OF.menu.exit();\n    else {\n      OF.log('Unknown menu button hit: '+ buttonName);\n    }\n  };\n  \n  OF.menu.home = function() {\n    if (OF.navigationStack[0].url.match(/dashboard\\/user/)) {\n      OF.goBack({root:true});\n    } else {\n      \n      // This is a bit of a hack for now...\n      OF.navigateToUrl(\"dashboard/user\", {\n        complete: function() {\n          OF.pages.unshift(OF.pages.pop());\n          OF.action('back', {root:true}, OF.contentLoaded);\n        }\n      });\n    }\n  };\n  \n  OF.menu.settings = function() {\n    OF.sendAction('openSettings');\n  };\n  \n  OF.menu.exit = function() {\n    OF.sendAction('dismiss');\n  };\n}\n\n// Base friends page functions\nif (!OF.friendsList) {\n  OF.friendsList = {\n    init: function() {\n      jQuery.lazyLoad({\n        threshold: 0.5,  //percentage of the window height left to scroll that will trigger the next page\n        nextPageLoaded: function(page, data){ \n          if (page == 1) {\n            OF.friendsList.renderFriends(data);                 \n          } else {\n            OF.friendsList.addFriends(data);         \n          }\n        },\n        nextPageShouldLoad: function(page, callback) {\n          OF.api('/xp/friends', {\n            params: {\n              user_id:   OF.page.user.id,\n              page:      page,\n              page_size: 50\n            },\n            success: function(data) {\n              callback(data.users, data.users.length < 50)\n            },\n            failure: function() { callback([]); }\n          });\n        },\n        isEmpty: function() { OF.friendsList.renderFriends([]); },\n        isFinished: function() { jQuery(\"#loading\").hide(); }\n      });\n    },\n    \n    renderFriendItems: function(friends) {\n      var html = jQuery.map(friends, function(friend) {\n       return tmpl('user_tmpl', friend);\n      });\n      return html;\n    },\n    \n    renderFriends : function(friends) {    \n      var html = OF.friendsList.renderFriendItems(friends);\n      \n      if (html.length > 0) {\n        jQuery('#friends_list > ul').html(html.join('')).unhide();\n        jQuery(\"#friends_list .no_data\").hide();\n      } else {\n        jQuery('#friends_list > ul').hide();\n        jQuery(\"#friends_list .no_data\").unhide();      \n      }\n    },\n    \n    addFriends : function(friends) {    \n      var html = OF.friendsList.renderFriendItems(friends);\n      jQuery('#friends_list > ul').append(html.join(''));\n    }\n  };\n}\n\n// Go home on touching the logo area\n$('#home_button').touch(OF.menu.home);\nvar userID = OF.page.params.user_id || OF.user.id;\nvar gameID = OF.page.params.game_id || OF.game.id;\nvar leaderboardID = OF.page.params.leaderboard_id;\n\nOF.page.params.show_blobs = (gameID === OF.game.id);\n\nvar name   = OF.page.params.leaderboard_name;\nvar scoreTmpl = tmpl('score_tmpl');\n\nvar everyoneRequest = null;\nvar myScoreRequest = null;\nvar friendScoreRequest = null;\n\n// In case the name isn't passed in the params then we fetch it via a request\nif (!name) {\n  OF.api.request('/xp/games/'+ gameID +'/leaderboards/' + leaderboardID, {\n    method: 'GET',\n    success: function(data) {\n      if (data.leaderboard.name.length > 0) { \n        OF.forceSetTitle(data.leaderboard.name);\n      }\n    }\n  });\n} else { OF.page.title = name }\n\nvar load = function(interval, tab){\n  if(everyoneRequest) everyoneRequest.cancel();\n  if(myScoreRequest) myScoreRequest.cancel();\n  if(friendScoreRequest) friendScoreRequest.cancel();\n  \n  $(\"section.scores\").addClass(\"hidden\");\n  $(\"section.scores ul\").remove();\n  $(\"#no_data\").addClass(\"hidden\").hide();\n  $(\"#time_frame li\").removeClass(\"active\");\n  $(tab).addClass(\"active\");\n  $(\".loading\").show();\n  \n  var rankScores = function(scores) {\n    var rank = 0;\n    $.each(scores, function() {\n      if (!this.high_score.rank) this.high_score.rank = ++rank;\n    });\n  }\n  \n  var renderScores = function(scoresObject) {\n    $.each(scoresObject, function(section, scores) {\n      if(scores.length == 0){ return; }\n      \n      var html = '';\n      $.each(scores, function() {        \n        if (this.high_score.display_text && $.trim(this.high_score.display_text).length > 0) {\n          this.high_score.display_score = this.high_score.display_text;\n        } else {\n          this.high_score.display_score = this.high_score.score;\n        }\n        html += scoreTmpl(this.high_score);\n      });\n      \n      var ul = $(\"<ul class='cells scores'>\").html(html);\n      $('#'+ section).append(ul).unhide();\n    });      \n  }\n  \n  // check to see if we should show the no data screen\n  var checkForData = function() {\n    allComplete = everyoneRequest.isComplete && myScoreRequest.isComplete && friendScoreRequest.isComplete;\n    if (allComplete) {\n      //HACK: seems like loader automagic doesn't always work when \n      //concurrent requests share the element.  forcing the hide, for now. \n      $(\".loading\").hide();\n      \n      noData = true;\n      $.each(scores, function(section, highScores) {\n        if (highScores.length > 0) {\n          noData = false;\n        }\n      });\n      \n      if (noData) {\n        $(\"#no_data\").unhide();\n      } else {\n        renderScores(scores);\n      }\n    }\n  }\n  \n  var baseParams = function() { interval > 0 ? {interval: interval} : {}; }\n  \n  var scores = {\n    everyone: null,\n    your_friends: null,\n    you: null,\n  };\n  \n  everyoneRequest = OF.api.request('/xp/games/'+ gameID +'/leaderboards/'+ leaderboardID + '/high_scores', {\n    success: function(data) {\n      rankScores(data.high_scores);\n      scores.everyone = data.high_scores;\n    },\n    complete: checkForData,\n    params: baseParams(),\n  });\n  \n  myScoreRequest = OF.api.request('/xp/users/' + userID + '/games/' + gameID +'/leaderboards/'+ leaderboardID + '/current_score', { \n    success: function(data) { scores.you = [data]; },\n    failure: function()     { scores.you = []; },\n    complete: checkForData,\n    params: baseParams(),\n  });\n  \n  friendScoreRequest = OF.api.request('/xp/games/'+ gameID +'/leaderboards/'+ leaderboardID + '/high_scores', { \n    success: function(data) { \n      rankScores(data.high_scores);\n      \n      // if the friend's leaderboard request only contains your score, don't show it\n      if (data.high_scores.length == 1 && data.high_scores[0].high_score.user.id == userID) {\n        scores.your_friends = [];\n      } else {\n        scores.your_friends = data.high_scores;\n      }\n    },\n    complete: checkForData,\n    params: $.extend(baseParams(), {friends_leaderboard: true}),\n  });\n}\n\n$(\".high_score_blob_icon\").touch(function(event) {\n  OF.sendAction('downloadBlob', {'score': $(this).attr('data-high_score')});\n})\n\n$(\"#time_frame li\").touch(function() {\n  if ($(this).hasClass(\"active\")) { return; }\n  load($(this).attr(\"data-interval\"), $(this))\n});\n\nload(0, $(\"#time_frame li\").first());","resume":null,"appear":"$('#header .title').html(OF.page.title);","disappear":null,"exit":null,"html":"<div id='dashboard'>\n  <div id='header'>\n    <span class='loading'>\n      <span class='spinner'></span>\n    </span>\n    <div class='title' id='home_button'></div>\n  </div>\n            <script type=\"text/plain\" id=\"score_tmpl\">\n              <li class=\"high_score\" data-href=\"dashboard/profile?user_id=<%= user.id %>\"<% if((typeof blob_url != \"undefined\") && OF.page.params.show_blobs) {%> style=\"margin-right:70px\"<% } %>>\n    <div class=\"icon\" <% if (user.profile_picture_url) { %> style=\"background-image: url(<%= userPicUrl(user.profile_picture_url) %>)\" <% } %>>\n      <div class=\"overlay\"></div>\n    </div>\n    <div class=\"title\">\n      <% if (typeof rank != \"undefined\") { %>\n      <span class=\"rank\"><%= rank %></span>\n      <% } %>\n      <span class=\"user_name truncate\"><%= user.name %></span>\n    </div>\n    <div class=\"subtitle\"><%= display_score %></div>\n  </li>\n  <% if ((typeof blob_url != \"undefined\") && OF.page.params.show_blobs) { %>\n    <li class=\"icon high_score_blob_icon\" data-high_score='<%= JSON.stringify({high_score: obj}) %>'>\n      <div class=\"button\">\n        <div class=\"icon\"></div>\n      </div>\n    </li>\n  <% } %>\n            </script>\n  <div id='leaderboard'>\n    <div class='cell no_data hidden' id='no_data'>\n      <p>\n        There are no scores yet for this leaderboard.\n      </p>\n    </div>\n    <section class='scores hidden' id='you'>\n      <h3 class='section_title'>You</h3>\n    </section>\n    <section class='scores hidden' id='your_friends'>\n      <h3 class='section_title'>Your Friends</h3>\n    </section>\n    <section class='scores hidden' id='everyone'>\n      <h3 class='section_title'>Everyone</h3>\n    </section>\n    <div class='cell loading'>\n      <div class='spinner'></div>\n    </div>\n  </div>\n</div>\n"}